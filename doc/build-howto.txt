		    HOW TO BUILD AND CONFIGURE CIMPLE

INTRODUCTION:

    This document explains how to build CIMPLE. It supports two build modes:

	    1. 	Standalone mode (CIMPLE proper)
	    2.  Pegasus mode (CIMPLE proper Pegasus integration and CMPI
		integration support).

    CIMPLE supports the following platforms:

    	LINUX_IX86_GNU (Linux, 32-bit Intel X86, GNU C++)
    	LINUX_X86_64_GNU (Linux, 64-bit Intel X86, GNU C++)
    	LINUX_PPC_GNU (Linux, PowerPC, GNU C++)
    	WIN32_IX86 (Windows, 32-bit Intel X86, Microsoft Visual C++)

    Note that these correspond to the Pegasus platform names.

BUILDING PEGASUS IN STANDALONE MODE:

    Building standalone is easy. Just type "./configure" in the CIMPLE
    root directory and then type "make". Like this:

    	% ./configure
	configured for LINUX_X86_64_GNU
	% make

    This builds all CIMPLE modules (these are referred to as CIMPLE
    proper).

    Binaries are placed in these directories:

	<cimple-root>/bin
	<cimple-root>/lib

BUILDING FOR PEGASUS:

    If you want to use CIMPLE with Pegasus, you must define the usual
    Pegasus environment variables:

	PEGASUS_PLATFORM
	PEGASUS_ROOT
	PEGASUS_HOME

    If these are defined, CIMPLE automatically builds in Pegasus mode. Now
    type "./configure" in the directories CIMPLE root directory. And then
    type "make". Like this:

    	% ./configure
	configured for LINUX_X86_64_GNU
	% make

    Binaries are placed in these directories:

	$PEGASUS_HOME/bin
	$PEGASUS_HOME/lib

    If you are cross-compiling for PowerPC, see the document
    entitled "cross-compile-ppc.txt"

TESTING THE CIMPLE BUILD:

    Whether you build for Pegasus or standalone, you can test the build by
    typing 'make -s tests' from the root of the distribution. For example,
    you might see something like this:

	+++++ passed all tests (mofc)
	+++++ passed all tests (genclass_test1)
	+++++ passed all tests (genclass_test2)
	+++++ passed all tests (genclass_test3)
	+++++ passed all tests (genclass_test3)
	+++++ passed all tests (test_ptrsize)
	+++++ passed all tests (test_vla)
	+++++ passed all tests (test_string)
	+++++ passed all tests (test_property)
	+++++ passed all tests (test_meta)
	+++++ passed all tests (test_datetime)
	+++++ passed all tests (test_facade)
	+++++ passed all tests (loadpm)
	.
	.
	.
	.

APPLYING CIMPLE PATCH TO PEGASUS:

    To use CIMPLE providers with Pegasus you must apply the CIMPLE provider
    manager patch. Read the instructions in the following file:

	<cimple-root>/src/pegasus/patch/patch.txt

