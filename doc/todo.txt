
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    A
    A A-priorities
    A
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

    (A) Figure out whether to add "present" flag to input/output extrinsic 
        parameters.

    (A) Test that __name_space is being set correctly in both adapters.

    (A) Test multi-class providers that implement a family of classes derived
        from a single class.

    (A) Doxygen

    (A) Work through ATTNs.

    (A) Implement lifecycle indications in the CMPI adapter.

    (A) Implement indication "SourceNamespace" in namespace handling in Pegasus
        adapter (already implemented in CMPI adapter).

    (A) Revisit handling of namespaces.

    BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
    B
    B B-priorities
    B
    BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

    (B) No way to get the FQDN for use in SystemName key field.

    (B) Implement binary compatibility.

    (B) Deprecate Provider::timer() method.

    (B) Eliminate need for Meta_Class.crc field?

    (B) Implement array reference counting (refs member already present).

    (B) Improve error reporting.

    (B) Validate property-list filtering.

    (B) Validate provider reentrancy.

    (B-NG) Implement automatic lifecycle indication generation.

    (B-NG) Automatic query providers.

    (B-NG) Logging.

    (B-NG) Tracing.

    CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
    C
    C C priorities
    C
    CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

    (C) Implement MOF-compliant print() functions (Instance, Meta_Class).

    (C) Honor DisableOverride flavor.

    (C) Implement Restricted flavor in create_meta_class().

    (C) Implement Restricted flavor in genclass.

    (C) Add FILE* parameter to print(Instance*).

    (C) Implement validate(Instance*) to validate an instance against 
        qualifiers in the meta-class.

    (C) Implement identical() function.

    (C) Modify print(const Instance*) to print MOF format.

    (C) Check "sub-scopes". For example, you should not be able to add a
        MinLen qualifier to a uint32 property.

    (C) Optimize scalar boolean qualifier generation. Define true/false
        versions for all predefined-qualifiers in cimple library. For
        example: 
        
            Meta_Qualifier_Scalar<bool> key_qualifier_false =
            {
                ...
            };

            Meta_Qualifier_Scalar<bool> key_qualifier_true =
            {
                ...
            };

        This only works if the flavor mask is zero.

    (C) Implement inter-provider communication.

    (C) Implement EmbeddedObject (includes embedded classes and instances).

    (C) Implement WMI Adapter.

    (C) Eliminate experimental CIMCGI.

    (C) Test CIMPLE/CMPI providers with SFCB (Small-Footprint CIM Broker).

    (C) Enhance regmod to interact with CIMOM rather than repository directly.

    (C) Implement embeddedinstance qualifier.

    (C) Implement arrays of references (for parameters)? Not used in standard.

    (C) Support for fixed-length CIM arrays.

