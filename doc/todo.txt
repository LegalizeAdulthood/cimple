
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    A
    A A-priorities
    A
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

    (A) Modify print(const Instance*) to print MOF format.

    (A) Add optional print function argument print() functions.

            Print_Stream
            {
                void (*print)(void* client_data, const char* format, ...);
                void* client_data;
            };

            void print(..., Print_Stream* out);

    (A) Test multi-class providers that implement a family of classes derived
        from a single class.

    (A) Implement identical() function.

    (A) Doxygen

    (A) Work through ATTNs.

    (A) Fix lifecycle indications in the CMPI adapter.

    (A) Implement indication "SourceNamespace" in namespace handling in Pegasus
        adapter (already implemented in CMPI adapter).

    (A) Implement validate(Instance*).

    (A) Figure out how to handle namespaces.

    (A) Consider requiring declaration of all qualifiers and then using
        that to validate adding of qualifiers to objects.

    (A) Consider removing qualifier setters for Indicaiton and Association
        (these should be set during CIM_Class initialization). Same for key?

    BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
    B
    B B-priorities
    B
    BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

    (B) Honor DisableOverride flavor.

    (B) Implement Restricted flavor in create_meta_class().

    (B) Implement Restricted flavor in genclass.

    (B) Copy-on-write properties.

    (B) Implement binary compatibility.

    (B) Deprecate Provider::timer() method.

    (B) Revisit need for Meta_Class.crc.

    (B) Implement array reference counting (refs member already present).

    (B) Improve error reporting.

    (B) Validate property-list filtering.

    (B) Validate provider reentrancy.

    (B) Implement MOF-compliant print() functions (Instance, Meta_Class).

    (B-NG) Implement automatic lifecycle indication generation.

    (B-NG) Automatic query providers.

    (B-NG) Logging.

    (B-NG) Tracing.

    CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
    C
    C C priorities
    C
    CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

    (C) Check "sub-scopes". For example, you should not be able to add a
        MinLen qualifier to a uint32 property.

    (C) Optimize scalar boolean qualifier generation. Define true/false
        versions for all predefined-qualifiers in cimple library. For
        example: 
        
            Meta_Qualifier_Scalar<bool> key_qualifier_false =
            {
                ...
            };

            Meta_Qualifier_Scalar<bool> key_qualifier_true =
            {
                ...
            };

        This only works if the flavor mask is zero.

    (C) Implement inter-provider communication.

    (C) Implement EmbeddedObject (includes embedded classes and instances).

    (C) Implement WMI Adapter.

    (C) Eliminate experimental CIMCGI.

    (C) Test CIMPLE/CMPI providers with SFCB (Small-Footprint CIM Broker).

    (C) Enhance regmod to interact with CIMOM rather than repository directly.

    (C) Implement embeddedinstance qualifier.

    (C) Implement arrays of references (for parameters)? Not used in standard.

    (C) Support for fixed-length CIM arrays.

