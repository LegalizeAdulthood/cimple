// Copyright (c) 2005 DMTF.  All rights reserved.
// ==================================================================
//  CIM_ControllerConfigurationService
// ==================================================================
   [Version ( "2.8.0" ), Description (
       "The ControllerConfigurationService provides methods that allow "
       "a client to manipulate LUN Masking in a storage system.")]
class CIM_ControllerConfigurationService : CIM_Service {

      [Description (
          "This method creates an appropriate subclass of "
          "ProtocolController. In addition to its role of controlling "
          "downstream devices, a ProtocolControl is used to provide a "
          "central management point for access control with respect to "
          "those devices. Certain storage system implementations "
          "across multiple vendors require permissions to be "
          "established atomically with the creation of a "
          "ProtocolController. This method provides this capability "
          "via the Privilege and Identity properties. By supplying "
          "appropriate information in those properties, this method "
          "will assure that appropriate AuthorizedTarget and "
          "AuthorizedSubject associations, (as defined in the User and "
          "Security Model), are instantiated to restrict access to the "
          "logical devices 'behind' it. \n"
          "If multiple target ports are specified in the Ports input "
          "parameter, all expose the same view (i.e., have the same "
          "unit numbers and permissions). This method does not create "
          "the port instances, but does create "
          "ProtocolControllerForPort associations between the "
          "specified ports and the new ProtocolController. The new "
          "ProtocolController is defined to be weak to the same System "
          "as the ControllerConfigurationService."), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096",
          "4097", "4098", "4099..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error",
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved",
          "ID Parameter Missing or Not Unique",
          "Hardware Implementation Requires Null Ports Parameter",
          "Busy", "Method Reserved", "Vendor Specific" }]
   uint32 CreateProtocolControllerWithPorts ( 
         [IN, Description (
             "The string to be used in the ElementName of the new "
             "ProtocolController."), 
          ModelCorrespondence { "CIM_ProtocolController.ElementName" }]
      string ElementName, 
         [IN, Description (
             "Array of strings containing representations of "
             "references to instances of CIM_LogicalPort (or subclass) "
             "instances. This is the list of target ports that are "
             "associated to the ProtocolController. "
             "ProtocolControllerForPort associations are created by "
             "the instrumentation associating the new "
             "ProtocolController to these ports. If this parameter is "
             "null, then all ports in the storage system (this "
             "Service's 'scoping' System and all its ComponentCS "
             "Systems) are attached to the new ProtocolController.")]
      string Ports[], 
         [IN, Description (
             "The protocol type for the new ProtocolController."), 
          ValueMap { "0", "1", "2" }, 
          Values { "Unknown", "Other", "SCSI" }, 
          ModelCorrespondence { "CIM_SCSIProtocolController" }]
      uint16 Protocol, 
         [IN, Description (
             "Reference to a CIM_Privilege (or subclass) instance to "
             "be used as a template. If supplied, it has a 1:1 "
             "correspondence with the Identity parameter and this "
             "method will atomically create the new ProtocolController "
             "instance and related AuthorizedPrivilege, "
             "AuthorizedTarget and AuthorizedSubject instances. \n"
             "Note: if ProtocolControllerRequiresAuthorizedIdentity is "
             "true, then the Identity/Privilege pair MUST be "
             "specified. If false, then the Identity/Privilege pair "
             "MUST NOT be specified."), 
          ModelCorrespondence { "CIM_ControllerConfigurationService." 
             "CreateProtocolControllerWithPorts.Identity" }]
      CIM_Privilege REF Privilege, 
         [Description (
             "Reference to a CIM_ManagedElement (or subclass) "
             "instance. This ManagedElement MUST be either a "
             "CIM_Identity, or a CIM_Collection (or subclass, eg. "
             "SystemSpecificCollection, Role, or Group) that has "
             "CIM_Identities as MemberOfCollection. If "
             "ProtocolControllerMaskingCapabilities.ProtocolControllerSupportsCollection "
             "is false, the reference MUST be to a CIM_Identity (or "
             "subclass). If present, it has a 1:1 correspondence with "
             "the Privilege property. If present, this method will "
             "atomically create the new ProtocolController instance "
             "and instantiate a missing AuthorizedSubject association "
             "between the Privilege/Identity pair; and instantiate an "
             "AuthorizedTarget association between the "
             "AuthorizedPrivilege and the new ProtocolController. \n"
             "Note: if ProtocolControllerRequiresAuthorizedIdentity is "
             "true, then at least the Identity/Privilege pair MUST be "
             "specified."), 
          ModelCorrespondence { "CIM_ControllerConfigurationService." 
             "CreateProtocolControllerWithPorts.Privilege" }]
      CIM_ManagedElement REF Identity, 
         [IN ( false ), OUT, Description (
             "A reference to the new ProtocolController that is "
             "created.")]
      CIM_ProtocolController REF ProtocolController); 

      [Description (
          "The method deletes an instance of ProtocolController and "
          "all associations in which this ProtocolController is "
          "referenced."), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096",
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error",
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved",
          "LogicalDevices Associated to Other ProtocolControllers Not " 
          "Deleted", "Busy", "Method Reserved", "Vendor Specific" }]
   uint32 DeleteProtocolController ( 
         [IN, Description (
             "The ProtocolController to be deleted.")]
      CIM_ProtocolController REF ProtocolController, 
         [IN, Description (
             "If true, the management instrumentation provider will "
             "also delete 'child' ProtocolControllers (i.e., those "
             "defined as Dependent references in instances of "
             "AssociatedProtocolController where this "
             "ProtocolController is the Antecedent reference). Also, "
             "all direct associations involving the 'child' "
             "ProtocolControllers will be removed.")]
      boolean DeleteChildrenProtocolControllers, 
         [IN, Description (
             "If true, the management instrumentation provider will "
             "also delete LogicalDevice instances associated via "
             "ProtocolControllerForUnit, to this ProtocolController "
             "and its children. (Note that 'child' controllers will "
             "only be affected if the "
             "DeleteChildrenProtocolControllers input parameter is "
             "TRUE). LogicalDevice instances are only deleted if there "
             "are NO remaining ProtocolControllerForUnit associations, "
             "to other ProtocolControllers.")]
      boolean DeleteUnits ); 

      [Description (
          "This method associates a LogicalDevice subclass "
          "(specifically a StorageVolume or MediaAccessDevice "
          "subclass) to the referenced ProtocolController. The "
          "association is persisted as an instance of "
          "ProtocolControllerForUnit. The management instrumentation "
          "provider must verify that the logical unit numbers (defined "
          "using the DeviceNumber input parameter) are unique for the "
          "ProtocolController. When the Protocol Controller is "
          "actively masking a device (i.e. is part of an "
          "AuthorizedTarget association), the provider should update "
          "the access configuration in the underlying hardware as "
          "appropriate."), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096",
          "4097", "4098", "4099", "4100", "4101..32767",
       "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error",
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved",
          "Invalid LogicalDevice Instance", "Device Number Conflict",
          "DeviceNumber Parameter Must Be Provided",
          "Hardware Implementation Requires Null DeviceNumber", "Busy",
          "Method Reserved", "Vendor Specific" }]
   uint32 AttachDevice ( 
         [IN, Description (
             "The ProtocolController instance.")]
      CIM_ProtocolController REF ProtocolController, 
         [IN, Description (
             "The LogicalDevice instance to attach.")]
      CIM_LogicalDevice REF Device, 
         [IN, OUT, Description (
             "The number assigned to "
             "ProtocolControllerForUnit.DeviceNumber (if supported by "
             "the hardware). Hardware support is indicated by "
             "ProtocolControllerMaskingCapabilities.ClientSelectableDeviceNumbers). "
             "If the hardware does not support setting the number, but "
             "the DeviceNumber has not been established in an existing "
             "ProtocolControllerForDevice subclass, then this "
             "parameter's value will be used. If the DeviceNumber has "
             "been established, then the current number will be "
             "reused."), 
          ModelCorrespondence { 
             "CIM_ProtocolControllerForUnit.DeviceNumber" }]
      string DeviceNumber ); 

      [Description (
          "This method removes the ProtocolControllerForDevice "
          "association subclass between the ProtocolController and a "
          "LogicalDevice, such as a StorageVolume or a "
          "MediaAccessDevice. When the ProtocolController is actively "
          "masking a device (i.e. is part of an AuthorizedTarget "
          "association, the management instrumentation provider should "
          "update the hardware access configuration when DetachDevice "
          "is called."), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096",
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error",
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved",
          "LogicalDevice Instance not Associated with Controller",
          "Busy", "Method Reserved", "Vendor Specific" }]
   uint32 DetachDevice ( 
         [IN, Description (
             "The ProtocolController instance.")]
      CIM_ProtocolController REF ProtocolController, 
         [IN, Description (
             "The LogicalDevice instance to detach.")]
      CIM_LogicalDevice REF Device ); 
};
