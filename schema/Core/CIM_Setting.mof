// Copyright (c) 2005 DMTF.  All rights reserved.
// ==================================================================
//  CIM_Setting
// ==================================================================
   [Abstract, Version ( "2.7.0" ), Description (
       "The Setting class represents configuration-related and "
       "operational parameters for one or more "
       "ManagedSystemElement(s). An Element may have multiple Setting "
       "objects associated with it. The current operational values for "
       "an Element's parameters are reflected by properties in the "
       "Element itself or by properties in its associations. These "
       "properties do not have to be the same values present in the "
       "Setting object. For example, a modem may have a Setting baud "
       "rate of 56Kb/sec but be operating at 19.2Kb/sec. \n"
       "Note that the CIM_SettingData class is very similar to "
       "CIM_Setting, yet both classes are present in the model. This "
       "is because many implementations have successfully used "
       "CIM_Setting. However, issues have arisen that could not be "
       "resolved without defining a new class. Therefore, until a new "
       "major release occurs, both classes will exist in the model. "
       "Refer to the Core White Paper for additional information.")]
class CIM_Setting : CIM_ManagedElement {

      [Description (
          "The identifier by which the Setting object is known."), 
       MaxLen ( 256 )]
   string SettingID;

      [Description (
          "The VerifyOKToApplyToMSE method is used to verify that this "
          "Setting can be 'applied' to the referenced Managed "
          "SystemElement, at the given time or time interval. This "
          "method takes three input parameters: MSE (the Managed "
          "SystemElement that is being verified), TimeToApply (which, "
          "being a datetime, can be either a specific time or a time "
          "interval), and MustBeCompletedBy (which indicates the "
          "required completion time for the method). The return value "
          "should be 0 if it is OK to apply the Setting, 1 if the "
          "method is not supported, 2 if the Setting cannot be applied "
          "within the specified times, and any other number if an "
          "error occurred. In a subclass, the set of possible return "
          "codes could be specified, using a ValueMap qualifier on the "
          "method. The strings to which the ValueMap contents are "
          "'translated' may also be specified in the subclass as a "
          "Values array qualifier.")]
   uint32 VerifyOKToApplyToMSE( 
         [IN, Description (
             "The Managed SystemElement that is being verified.")]
      CIM_ManagedSystemElement REF MSE, 
         [IN, Description (
             "TimeToApply can be either a specific time or a time "
             "interval.")]
      datetime TimeToApply, 
         [IN, Description (
             "The required completion time for the method.")]
      datetime MustBeCompletedBy); 

      [Description (
          "The ApplyToMSE method performs the actual application of "
          "the Setting to the referenced ManagedSystemElement. It "
          "takes three input parameters: MSE (the ManagedSystem "
          "Element to which the Setting is being applied), TimeToApply "
          "(which, being a datetime, can be either a specific time or "
          "a time interval), and MustBeCompletedBy (which indicates "
          "the required completion time for the method). Note that the "
          "semantics of this method are that individual Settings are "
          "either wholly applied or not applied at all to their target "
          "ManagedSystemElement. The return value should be 0 if the "
          "Setting is successfully applied to the referenced "
          "ManagedSystemElement, 1 if the method is not supported, 2 "
          "if the Setting was not applied within the specified times, "
          "and any other number if an error occurred. In a subclass, "
          "the set of possible return codes could be specified, using "
          "a ValueMap qualifier on the method. The strings to which "
          "the ValueMap contents are 'translated' may also be "
          "specified in the subclass as a Values array qualifier. \n"
          "Note: If an error occurs in applying the Setting to a "
          "ManagedSystemElement, the Element must be configured as "
          "when the 'Apply' attempt began. That is, the Element should "
          "NOT be left in an indeterminate state.")]
   uint32 ApplyToMSE( 
         [IN, Description (
             "The ManagedSystem Element to which the Setting is being "
             "applied.")]
      CIM_ManagedSystemElement REF MSE, 
         [IN, Description (
             "TimeToApply can be either a specific time or a time "
             "interval.")]
      datetime TimeToApply, 
         [IN, Description (
             "The required completion time for the method.")]
      datetime MustBeCompletedBy); 

      [Description (
          "The VerifyOKToApplyToCollection method is used to verify "
          "that this Setting can be 'applied' to the referenced "
          "Collection of ManagedSystemElements, at the given time or "
          "time interval, without causing adverse effects to either "
          "the Collection itself or its surrounding environment. The "
          "net effect is to execute the VerifyOKToApply method against "
          "each of the Elements aggregated by the Collection. This "
          "method takes three input parameters: Collection (the "
          "Collection of Managed SystemElements that is being "
          "verified), TimeToApply (which, being a datetime, can be "
          "either a specific time or a time interval), and "
          "MustBeCompletedBy (which indicates the required completion "
          "time for the method). The return value should be 0 if it is "
          "OK to apply the Setting, 1 if the method is not supported, "
          "2 if the Setting cannot be applied within the specified "
          "times, and any other number if an error occurred. One "
          "output parameter is defined - CanNotApply - which is a "
          "string array that lists the keys of the "
          "ManagedSystemElements to which the Setting can NOT be "
          "applied. This enables those Elements to be revisited and "
          "either fixed, or other corrective action taken. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are 'translated' may "
          "also be specified in the subclass as a Values array "
          "qualifier.")]
   uint32 VerifyOKToApplyToCollection ( 
         [IN, Description (
             "The Collection of Managed SystemElements that is being "
             "verified.")]
      CIM_CollectionOfMSEs REF Collection, 
         [IN, Description (
             "TimeToApply can be either a specific time or a time "
             "interval.")]
      datetime TimeToApply, 
         [IN, Description (
             "The required completion time for the method.")]
      datetime MustBeCompletedBy, 
         [IN ( false ), OUT, Description (
             "A string array that lists the keys of the "
             "ManagedSystemElements to which the Setting can NOT be "
             "applied.")]
      string CanNotApply[]); 

      [Description (
          "The ApplyToCollection method performs the application of "
          "the Setting to the referenced Collection of ManagedSystem "
          "Elements. The net effect is to execute the ApplyToMSE "
          "method against each of the Elements aggregated by the "
          "Collection. If the input value ContinueOnError is FALSE, "
          "this method applies the Setting to all Elements in the "
          "Collection until it encounters an error, in which case it "
          "stops execution, logs the key of the Element that caused "
          "the error in the CanNotApply array, and issues a return "
          "code of 2. If the input value ContinueOnError is TRUE, then "
          "this method applies the Setting to all the "
          "ManagedSystemElements in the Collection, and reports the "
          "failed Elements in the array, CanNotApply. For the latter, "
          "processing will continue until the method is applied to all "
          "Elements in the Collection, regardless of any errors "
          "encountered. The key of each ManagedSystemElement to which "
          "the Setting could not be applied is logged into the "
          "CanNotApply array. This method takes four input parameters: "
          "Collection (the Collection of Elements to which the Setting "
          "is being applied), TimeToApply (which, being a datetime, "
          "can be either a specific time or a time interval), "
          "ContinueOnError (TRUE means to continue processing on "
          "encountering an error), and MustBeCompletedBy (which "
          "indicates the required completion time for the method). The "
          "return value should be 0 if the Setting is successfully "
          "applied to the referenced Collection, 1 if the method is "
          "not supported, 2 if the Setting was not applied within the "
          "specified times, 3 if the Setting cannot be applied using "
          "the input value for ContinueOnError, and any other number "
          "if an error occurred. One output parameter is defined, "
          "CanNotApplystring, which is an array that lists the keys of "
          "the ManagedSystemElements to which the Setting was NOT able "
          "to be applied. This output parameter has meaning only when "
          "the ContinueOnError parameter is TRUE. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are 'translated' may "
          "also be specified in the subclass as a Values array "
          "qualifier. \n"
          "Note: if an error occurs in applying the Setting to a "
          "ManagedSystemElement in the Collection, the Element must be "
          "configured as when the 'Apply' attempt began. That is, the "
          "Element should NOT be left in an indeterminate state.")]
   uint32 ApplyToCollection( 
         [IN, Description (
             "The Collection of Managed SystemElements to be applied.")]
      CIM_CollectionOfMSEs REF Collection, 
         [IN, Description (
             "TimeToApply can be either a specific time or a time "
             "interval.")]
      datetime TimeToApply, 
         [IN, Description (
             "TRUE means to continue processing on encountering an "
             "error.")]
      boolean ContinueOnError, 
         [IN, Description (
             "The required completion time for the method.")]
      datetime MustBeCompletedBy, 
         [IN ( false ), OUT, Description (
             "A string array that lists the keys of the "
             "ManagedSystemElements to which the Setting was NOT be "
             "applied.")]
      string CanNotApply[]); 

      [Description (
          "The VerifyOKToApplyIncrementalChangeToMSE method is used to "
          "verify that a subset of the properties in this Setting can "
          "be 'applied' to the referenced Managed SystemElement, at "
          "the given time or time interval. This method takes four "
          "input parameters: MSE (the Managed SystemElement that is "
          "being verified), TimeToApply (which, being a datetime, can "
          "be either a specific time or a time interval), "
          "MustBeCompletedBy (which indicates the required completion "
          "time for the method), and a PropertiesToApply array (which "
          "contains a list of the property names whose values will be "
          "verified.) If the array is null, empty or contains the "
          "string \"ALL\" as a property name, then all Settings "
          "properties shall be verified. If it is set to \"NONE\", "
          "then no Settings properties will be verified. The return "
          "value should be 0 if it is OK to apply the Setting, 1 if "
          "the method is not supported, 2 if the Setting cannot be "
          "applied within the specified times, and any other number if "
          "an error occurred. In a subclass, the set of possible "
          "return codes could be specified, using a ValueMap qualifier "
          "on the method. The strings to which the ValueMap contents "
          "are 'translated' may also be specified in the subclass as a "
          "Values array qualifier.")]
   uint32 VerifyOKToApplyIncrementalChangeToMSE( 
         [IN, Description (
             "The ManagedSystem Element for which the Setting is being "
             "verified.")]
      CIM_ManagedSystemElement REF MSE, 
         [IN, Description (
             "TimeToApply can be either a specific time or a time "
             "interval.")]
      datetime TimeToApply, 
         [IN, Description (
             "The required completion time for the method.")]
      datetime MustBeCompletedBy, 
         [IN, Description (
             "A list of the property names whose values will be "
             "verified.")]
      string PropertiesToApply[]); 

      [Description (
          "The ApplyIncrementalChangeToMSE method performs the actual "
          "application of a subset of the properties in the Setting to "
          "the referenced ManagedSystemElement. It takes four input "
          "parameters: MSE (the ManagedSystem Element to which the "
          "Setting is being applied), TimeToApply (which, being a "
          "datetime, can be either a specific time or a time "
          "interval), MustBeCompletedBy (which indicates the required "
          "completion time for the method), and a PropertiesToApply "
          "array (which contains a list of the property names whose "
          "values will be applied.) If a property is not in this list, "
          "it will be ignored by the Apply. If the array is null, "
          "empty or contains the string \"ALL\" as a property name, "
          "then all Settings properties shall be applied. If it is set "
          "to \"NONE\", then no Settings properties will be applied. \n"
          "Note that the semantics of this method are that individual "
          "Settings are either wholly applied or not applied at all to "
          "their target ManagedSystemElement. The return value should "
          "be 0 if the Setting is successfully applied to the "
          "referenced ManagedSystemElement, 1 if the method is not "
          "supported, 2 if the Setting was not applied within the "
          "specified times, and any other number if an error occurred. "
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are 'translated' may "
          "also be specified in the subclass as a Values array "
          "qualifier. \n"
          "Note: If an error occurs in applying the Setting to a "
          "ManagedSystemElement, the Element must be configured as "
          "when the 'Apply' attempt began. That is, the Element should "
          "NOT be left in an indeterminate state.")]
   uint32 ApplyIncrementalChangeToMSE( 
         [IN, Description (
             "The ManagedSystem Element to which the Setting is being "
             "applied.")]
      CIM_ManagedSystemElement REF MSE, 
         [IN, Description (
             "TimeToApply can be either a specific time or a time "
             "interval.")]
      datetime TimeToApply, 
         [IN, Description (
             "The required completion time for the method.")]
      datetime MustBeCompletedBy, 
         [IN, Description (
             "A list of the property names whose values will be "
             "applied.")]
      string PropertiesToApply[]); 

      [Description (
          "The VerifyOKToApplyIncrementalChangeToCollection method is "
          "used to verify that a subset of the properties in this "
          "Setting can be 'applied' to the referenced Collection of "
          "ManagedSystemElements, at the given time or time interval, "
          "without causing adverse effects to either the Collection "
          "itself or its surrounding environment. The net effect is to "
          "execute the VerifyOKToApplyIncrementalChangeToMSE method "
          "against each of the Elements aggregated by the Collection. "
          "This method takes three input parameters: Collection (the "
          "Collection of Managed SystemElements that is being "
          "verified), TimeToApply (which, being a datetime, can be "
          "either a specific time or a time interval), "
          "MustBeCompletedBy (which indicates the required completion "
          "time for the method), and a PropertiesToApply array (which "
          "contains a list of the property names whose values will be "
          "verified. If they array is null or empty or constains the "
          "string \"all\" as a property name then all Settings "
          "properties shall be verified. If it is set to \"none\" then "
          "no Settings properties will be verified). The return value "
          "should be 0 if it is OK to apply the Setting, 1 if the "
          "method is not supported, 2 if the Setting cannot be applied "
          "within the specified times, and any other number if an "
          "error occurred. One output parameter is defined - "
          "CanNotApply - which is a string array that lists the keys "
          "of the ManagedSystemElements to which the Setting can NOT "
          "be applied. This enables those Elements to be revisited and "
          "either fixed, or other corrective action taken. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are 'translated' may "
          "also be specified in the subclass as a Values array "
          "qualifier.")]
   uint32 VerifyOKToApplyIncrementalChangeToCollection ( 
         [IN, Description (
             "The Collection of Managed SystemElements for which the "
             "setting is being verified.")]
      CIM_CollectionOfMSEs REF Collection, 
         [IN, Description (
             "TimeToApply can be either a specific time or a time "
             "interval.")]
      datetime TimeToApply, 
         [IN, Description (
             "The required completion time for the method.")]
      datetime MustBeCompletedBy, 
         [IN, Description (
             "A list of the property names whose values will be "
             "verified.")]
      string PropertiesToApply[], 
         [IN ( false ), OUT, Description (
             "A string array that lists the keys of the "
             "ManagedSystemElements to which the Setting can NOT be "
             "applied.")]
      string CanNotApply[]); 

      [Description (
          "The ApplyIncrementalChangeToCollection method performs the "
          "application of a subset of the properties in this Setting "
          "to the referenced Collection of ManagedSystem Elements. The "
          "net effect is to execute the ApplyIncrementalChangeToMSE "
          "method against each of the Elements aggregated by the "
          "Collection. If the input value ContinueOnError is FALSE, "
          "this method applies the Setting to all Elements in the "
          "Collection until it encounters an error, in which case it "
          "stops execution, logs the key of the Element that caused "
          "the error in the CanNotApply array, and issues a return "
          "code of 2. If the input value ContinueOnError is TRUE, then "
          "this method applies the Setting to all the "
          "ManagedSystemElements in the Collection, and reports the "
          "failed Elements in the array, CanNotApply. For the latter, "
          "processing will continue until the method is applied to all "
          "Elements in the Collection, regardless of any errors "
          "encountered. The key of each ManagedSystemElement to which "
          "the Setting could not be applied is logged into the "
          "CanNotApply array. This method takes four input parameters: "
          "Collection (the Collection of Elements to which the Setting "
          "is being applied), TimeToApply (which, being a datetime, "
          "can be either a specific time or a time interval), "
          "ContinueOnError (TRUE means to continue processing on "
          "encountering an error), and MustBeCompletedBy (which "
          "indicates the required completion time for the method), and "
          "a PropertiesToApply array (which contains a list of the "
          "property names whose values will be applied.) If a property "
          "is not in this list, it will be ignored by the Apply. If "
          "the array is null or empty or contains the string \"ALL\" "
          "as a property name, then all Settings properties shall be "
          "applied. If it is set to \"NONE\", then no Settings "
          "properties will be applied. \n"
          "The return value should be 0 if the Setting is successfully "
          "applied to the referenced Collection, 1 if the method is "
          "not supported, 2 if the Setting was not applied within the "
          "specified time, 3 if the Setting cannot be applied using "
          "the input value for ContinueOnError, and any other number "
          "if an error occurred. One output parameter is defined, "
          "CanNotApplystring, which is an array that lists the keys of "
          "the ManagedSystemElements to which the Setting was NOT able "
          "to be applied. This output parameter has meaning only when "
          "the ContinueOnError parameter is TRUE. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are 'translated' may "
          "also be specified in the subclass as a Values array "
          "qualifier. \n"
          "Note: if an error occurs in applying the Setting to a "
          "ManagedSystemElement in the Collection, the Element must be "
          "configured as when the 'Apply' attempt began. That is, the "
          "Element should NOT be left in an indeterminate state.")]
   uint32 ApplyIncrementalChangeToCollection( 
         [IN, Description (
             "The Collection of Elements to which the Setting is being "
             "applied.")]
      CIM_CollectionOfMSEs REF Collection, 
         [IN, Description (
             "A specific time or a time interval.")]
      datetime TimeToApply, 
         [IN, Description (
             "TRUE means to continue processing on encountering an "
             "error.")]
      boolean ContinueOnError, 
         [IN, Description (
             "This parameter indicates the required completion time "
             "for the method.")]
      datetime MustBeCompletedBy, 
         [IN, Description (
             "A list of the property names whose values will be "
             "verified.")]
      string PropertiesToApply[], 
         [IN ( false ), OUT, Description (
             "A string array that lists the keys of the "
             "ManagedSystemElements to which the Setting can NOT be "
             "applied.")]
      string CanNotApply[]); 
};
