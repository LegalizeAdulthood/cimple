// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ===================================================================

// Title:  Security Events

// $State: Exp $

// $Date: 2007/02/09 16:50:23 $

// $Source: /home/cvs/cimple/schema/cim214_exp/Security/CIM_IPPacketFilterIndication.mof,v $

// $Revision: 1.1 $

// ===================================================================

//#pragma inLine ("Includes/copyright.inc")

// Copyright 1998-2005 Distributed Management Task Force, Inc. (DMTF).

// All rights reserved.

// DMTF is a not-for-profit association of industry members dedicated

// to promoting enterprise and systems management and interoperability.

// DMTF specifications and documents may be reproduced for uses

// consistent with this purpose by members and non-members,

// provided that correct attribution is given.

// As DMTF specifications may be revised from time to time,

// the particular version and release date should always be noted.

// 

// Implementation of certain elements of this standard or proposed

// standard may be subject to third party patent rights, including

// provisional patent rights (herein "patent rights"). DMTF makes

// no representations to users of the standard as to the existence

// of such rights, and is not responsible to recognize, disclose, or

// identify any or all such third party patent right, owners or

// claimants, nor for any incomplete or inaccurate identification or

// disclosure of such rights, owners or claimants. DMTF shall have no

// liability to any party, in any manner or circumstance, under any

// legal theory whatsoever, for failure to recognize, disclose, or

// identify any such third party patent rights, or for such party's

// reliance on the standard or incorporation thereof in its product,

// protocols or testing procedures. DMTF shall have no liability to

// any party implementing such standard, whether such implementation

// is foreseeable or not, nor to any patent owner or claimant, and shall

// have no liability or responsibility for costs or losses incurred if

// a standard is withdrawn or modified after publication, and shall be

// indemnified and held harmless by any party implementing the

// standard from any and all claims of infringement by a patent owner

// for such implementations.

// 

// For information about patents held by third-parties which have

// notified the DMTF that, in their opinion, such patent may relate to

// or impact implementations of DMTF standards, visit

// http://www.dmtf.org/about/policies/disclosures.php.





#pragma Locale ("en_US")



// ==================================================================

// IPPacketFilterIndication

// ==================================================================

   [Indication, Experimental, Version ( "2.10.0" ),
       UMLPackagePath ( "CIM::Event" ), Description (
       "The IPPacketFilterIndication class is intended to provide a "
       "base set of properties to allow for common data to be logged "
       "by all packet filtering services and devices in a consistent "
       "manner. This single consistent model of data will allow for "
       "common reporting of many messages across different packet "
       "filtering systems, which will help improve security "
       "information management by providing a single view of the "
       "information.")]

class CIM_IPPacketFilterIndication : CIM_IPNetworkSecurityIndication {

      [Required, Override ( "MessageType" ), Description (
          "An integer indicating the type of message to which the "
          "indication applies. DMTF subclasses will define specific "
          "values from the DMTF Class Reserved range."), 
       ValueMap { "0", "..", "2", "3", "4", "5", "6..100", "16000.." }, 
       Values { "Unknown", "DMTF Reserved", "Not Applicable",
          "Connection Accepted", "Connection Rejected",
          "Connection Dropped", "DMTF Class Reserved",
          "Vendor Reserved" }]

   uint16 MessageType;



      [Required, Description (
          "An integer indicating the direction of packet traffic from "
          "the standpoint of the packet filter."), 
       ValueMap { "0", "1" }, 
       Values { "Ingress", "Egress" }]

   uint16 Direction;



      [Description (
          "An integer indicating the naming convention used for host "
          "names reported by the packet filter. The default is "
          "\"DNS\"."), 
       ValueMap { "0", "1" }, 
       Values { "DNS", "NETBIOS" }]

   uint16 NamingConvention = 0;



      [Description (
          "The name of the host that corresponds to the "
          "IPv4SourceAddress or IPv6SourceAddress."), 
       ModelCorrespondence { 
          "CIM_IPPacketFilterIndication.NamingConvention" }]

   string SourceHostName;



      [Description (
          "The name of the host that corresponds to the "
          "IPv4DestinationAddress or IPv6DestinationAddress."), 
       ModelCorrespondence { 
          "CIM_IPPacketFilterIndication.NamingConvention" }]

   string DestinationHostName;



      [Description (
          "The name of the TCP or UDP service that corresponds to the "
          "DestPort.")]

   string DestinationServiceName;



      [Description (
          "The source port after translation when Network Address "
          "Translation is performed by the packet filter.")]

   uint16 TranslatedSourcePort;



      [Description (
          "The source IPv4 address after translation when Network "
          "Address Translation is performed by the packet filter.")]

   uint32 TranslatedSourceIPv4NumericAddress;



      [Description (
          "The source address after translation when Network Address "
          "Translation is performed by the packet filter.")]

   string TranslatedSourceAddress;



      [Description (
          "The destination port after translation when Network Address "
          "Translation is performed by the packet filter.")]

   uint16 TranslatedDestPort;



      [Description (
          "The destination IPv4 address after translation when Network "
          "Address Translation is performed by the packet filter.")]

   uint32 TranslatedDestIPv4NumericAddress;



      [Description (
          "The destination address after translation when Network "
          "Address Translation is performed by the packet filter.")]

   string TranslatedDestAddress;

};



