/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_SNIA_SpareConfigurationService_h
#define _cimple_SNIA_SpareConfigurationService_h

#include <cimple/cimple.h>
#include "CIM_Service.h"
#include "CIM_ConcreteJob.h"
#include "CIM_StoragePool.h"
#include "CIM_StorageExtent.h"
#include "CIM_StorageRedundancySet.h"
#include "CIM_ConcreteJob.h"
#include "CIM_StoragePool.h"
#include "CIM_StorageExtent.h"
#include "CIM_ConcreteJob.h"
#include "CIM_StorageExtent.h"
#include "CIM_ConcreteJob.h"
#include "CIM_StorageExtent.h"
#include "CIM_ConcreteJob.h"
#include "CIM_StorageExtent.h"

#if (0x00633300 > CIMPLE_VERSION)
# error "The version of genclass used to generate this file (0.99.51) is newer than the version of <cimple/cimple.h> found on the include path. Please place the matching version of <cimple/cimple.h> on the include path."
#endif

#if (0x00633300 < CIMPLE_VERSION)
# error "The version of genclass used to generate this file (0.99.51) is older than the version of <cimple/cimple.h> found on the include path. Please regenerate the sources with the matching version of genclass."
#endif


CIMPLE_NAMESPACE_BEGIN

class SNIA_SpareConfigurationService : public Instance
{
public:
    // CIM_ManagedElement features:
    Property<String> Caption;
    Property<String> Description;
    Property<String> ElementName;

    // CIM_ManagedSystemElement features:
    Property<Datetime> InstallDate;
    Property<String> Name;
    Property<Array_uint16> OperationalStatus;
    Property<Array_String> StatusDescriptions;
    Property<String> Status;
    Property<uint16> HealthState;

    // CIM_LogicalElement features:

    // CIM_EnabledLogicalElement features:
    Property<uint16> EnabledState;
    Property<String> OtherEnabledState;
    Property<uint16> RequestedState;
    Property<uint16> EnabledDefault;
    Property<Datetime> TimeOfLastStateChange;

    // CIM_Service features:
    Property<String> SystemCreationClassName; // KEY
    Property<String> SystemName; // KEY
    Property<String> CreationClassName; // KEY
    Property<String> PrimaryOwnerName;
    Property<String> PrimaryOwnerContact;
    Property<String> StartMode;
    Property<boolean> Started;

    // SNIA_SpareConfigurationService features:

    CIMPLE_CLASS(SNIA_SpareConfigurationService)
};

typedef CIM_EnabledLogicalElement_RequestStateChange_method SNIA_SpareConfigurationService_RequestStateChange_method;

typedef CIM_Service_StartService_method SNIA_SpareConfigurationService_StartService_method;

typedef CIM_Service_StopService_method SNIA_SpareConfigurationService_StopService_method;

class SNIA_SpareConfigurationService_AssignSpares_method : public Instance
{
public:
    CIM_ConcreteJob* Job;
    CIM_StoragePool* InPool;
    Array<CIM_StorageExtent*> InExtents;
    CIM_StorageRedundancySet* RedundancySet;
    Property<uint32> return_value;
    CIMPLE_METHOD(SNIA_SpareConfigurationService_AssignSpares_method)
};

class SNIA_SpareConfigurationService_UnassignSpares_method : public Instance
{
public:
    CIM_ConcreteJob* Job;
    CIM_StoragePool* InPool;
    Array<CIM_StorageExtent*> InExtents;
    Property<uint32> return_value;
    CIMPLE_METHOD(SNIA_SpareConfigurationService_UnassignSpares_method)
};

class SNIA_SpareConfigurationService_RebuildStorageExtent_method : public Instance
{
public:
    CIM_ConcreteJob* Job;
    CIM_StorageExtent* Target;
    Property<uint32> return_value;
    CIMPLE_METHOD(SNIA_SpareConfigurationService_RebuildStorageExtent_method)
};

class SNIA_SpareConfigurationService_CheckParityConsistency_method : public Instance
{
public:
    CIM_ConcreteJob* Job;
    CIM_StorageExtent* Target;
    Property<uint32> return_value;
    CIMPLE_METHOD(SNIA_SpareConfigurationService_CheckParityConsistency_method)
};

class SNIA_SpareConfigurationService_RepairParity_method : public Instance
{
public:
    CIM_ConcreteJob* Job;
    CIM_StorageExtent* Target;
    Property<uint32> return_value;
    CIMPLE_METHOD(SNIA_SpareConfigurationService_RepairParity_method)
};

CIMPLE_NAMESPACE_END

#endif /* _cimple_SNIA_SpareConfigurationService_h */
