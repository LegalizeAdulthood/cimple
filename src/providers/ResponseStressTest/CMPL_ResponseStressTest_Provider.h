// Generated by genprov 2.1.0
#ifndef _CMPL_ResponseStressTest_Provider_h
#define _CMPL_ResponseStressTest_Provider_h

#include <cimple/cimple.h>
#include "CMPL_ResponseStressTest.h"

CIMPLE_NAMESPACE_BEGIN

class CMPL_ResponseStressTest_Provider
{
public:

    typedef CMPL_ResponseStressTest Class;

    CMPL_ResponseStressTest_Provider();

    ~CMPL_ResponseStressTest_Provider();

    Load_Status load();

    Unload_Status unload();

    Get_Instance_Status get_instance(
        const CMPL_ResponseStressTest* model,
        CMPL_ResponseStressTest*& instance);

    Enum_Instances_Status enum_instances(
        const CMPL_ResponseStressTest* model,
        Enum_Instances_Handler<CMPL_ResponseStressTest>* handler);

    Create_Instance_Status create_instance(
        CMPL_ResponseStressTest* instance);

    Delete_Instance_Status delete_instance(
        const CMPL_ResponseStressTest* instance);

    Modify_Instance_Status modify_instance(
        const CMPL_ResponseStressTest* model,
        const CMPL_ResponseStressTest* instance);

    Invoke_Method_Status set(
        const Property<uint64>& ResponseCount,
        const Property<uint64>& ResponseInstanceSize,
        Property<uint32>& return_value);

    Invoke_Method_Status get(
        Property<uint64>& ResponseCount,
        Property<uint64>& ResponseInstanceSize,
        Property<uint32>& return_value);

    Invoke_Method_Status stop(
        Property<uint32>& return_value);

    /*@END@*/
    // Provider variables 
    uint64 _responseCount;
    uint64 _size;
};

CIMPLE_NAMESPACE_END

#endif /* _CMPL_ResponseStressTest_Provider_h */
