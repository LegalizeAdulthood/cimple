// Generated by genprov 2.0.8
#include "CMPL_Other_Provider.h"

CIMPLE_NAMESPACE_BEGIN

#define TRACE

CMPL_Other_Provider::CMPL_Other_Provider()
{
}

CMPL_Other_Provider::~CMPL_Other_Provider()
{
}

Load_Status CMPL_Other_Provider::load()
{
    TRACE;

    CMPL_Other* instance;
    
    instance = CMPL_Other::create();
    instance->Key.value = 101;
    instance->moreinfo.value = "First Instance";
    _map.insert(instance);

    instance = CMPL_Other::create();
    instance->Key.value = 102;
    instance->moreinfo.value = "Second Instance";
    _map.insert(instance);
    return LOAD_OK;
}

Unload_Status CMPL_Other_Provider::unload()
{
    return UNLOAD_OK;
}

Get_Instance_Status CMPL_Other_Provider::get_instance(
    const CMPL_Other* model,
    CMPL_Other*& instance)
{
    return GET_INSTANCE_UNSUPPORTED;
}

Enum_Instances_Status CMPL_Other_Provider::enum_instances(
    const CMPL_Other* model,
    Enum_Instances_Handler<CMPL_Other>* handler)
{
    TRACE;
    return _map.enum_instances(model, handler);
    return ENUM_INSTANCES_OK;
}

Create_Instance_Status CMPL_Other_Provider::create_instance(
    CMPL_Other* instance)
{
    TRACE;
    return _map.create_instance(instance);
}

Delete_Instance_Status CMPL_Other_Provider::delete_instance(
    const CMPL_Other* instance)
{
    TRACE;
    return _map.delete_instance(instance);
}

Modify_Instance_Status CMPL_Other_Provider::modify_instance(
    const CMPL_Other* model,
    const CMPL_Other* instance)
{
    TRACE;
    return _map.modify_instance(model, instance);
}

/*@END@*/

CIMPLE_NAMESPACE_END
