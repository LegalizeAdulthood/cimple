/*

Copyright (c) 2003, 2004, 2005, 2006, Michael Brasher, Karl Schopmeyer

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

*/
/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT; THIS FILE WAS AUTOMATICALLY GENERATED BY GENCLASS 1.2.4
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "StringArrayClass.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

/*[1304]*/
extern const Meta_Property
_StringArrayClass_Key;

/*[1327]*/
const Meta_Property
_StringArrayClass_Key =
{
    CIMPLE_ATOMIC_INITIALIZER, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY|CIMPLE_FLAG_READ,
    "Key",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    UINT32,
    0, /* subscript */
    CIMPLE_OFF(StringArrayClass,Key),
    0, /* value */
};

/*[1304]*/
extern const Meta_Property
_StringArrayClass_Colors;

/*[1327]*/
const Meta_Property
_StringArrayClass_Colors =
{
    CIMPLE_ATOMIC_INITIALIZER, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Colors",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    STRING,
    -1, /* subscript */
    CIMPLE_OFF(StringArrayClass,Colors),
    0, /* value */
};

/*[2027]*/
static Meta_Feature* _StringArrayClass_MFA[] =
{
    (Meta_Feature*)(void*)&_StringArrayClass_Key,
    (Meta_Feature*)(void*)&_StringArrayClass_Colors,
};

/*[2074]*/
static const Meta_Feature_Local _locals[] =
{
    {1},
    {1},
};

/*[2094]*/
const Meta_Class StringArrayClass::static_meta_class =
{
    CIMPLE_ATOMIC_INITIALIZER, /* refs */
    CIMPLE_FLAG_CLASS,
    "StringArrayClass",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _StringArrayClass_MFA,
    CIMPLE_ARRAY_SIZE(_StringArrayClass_MFA),
    sizeof(StringArrayClass),
    _locals,
    0, /* super_class */ 
    1, /* num_keys */
    0,
};

CIMPLE_NAMESPACE_END

