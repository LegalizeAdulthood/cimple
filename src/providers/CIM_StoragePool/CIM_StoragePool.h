/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_CIM_StoragePool_h
#define _cimple_CIM_StoragePool_h

#include <cimple/cimple.h>
#include "CIM_LogicalElement.h"
#include "CIM_StorageSetting.h"
#include "CIM_StorageSetting.h"
#include "CIM_StorageSetting.h"
#include "CIM_StorageExtent.h"

CIMPLE_NAMESPACE_BEGIN

class CIM_StoragePool : public Instance
{
public:
    // CIM_ManagedElement features:
    Property<String> Caption;
    Property<String> Description;
    Property<String> ElementName;

    // CIM_ManagedSystemElement features:
    Property<Datetime> InstallDate;
    Property<String> Name;
    Property<Array_uint16> OperationalStatus;
    Property<Array_String> StatusDescriptions;
    Property<String> Status;
    Property<uint16> HealthState;

    // CIM_LogicalElement features:

    // CIM_StoragePool features:
    Property<String> InstanceID; // KEY
    Property<String> PoolID;
    Property<boolean> Primordial;
    Property<uint64> TotalManagedSpace;
    Property<uint64> RemainingManagedSpace;

    CIMPLE_CLASS(CIM_StoragePool)
};

class CIM_StoragePool_GetSupportedSizes_method : public Instance
{
public:
    Property<uint16> ElementType;
    CIM_StorageSetting* Goal;
    Property<Array_uint64> Sizes;
    Property<uint32> return_value;
    CIMPLE_METHOD(CIM_StoragePool_GetSupportedSizes_method)
};

class CIM_StoragePool_GetSupportedSizeRange_method : public Instance
{
public:
    Property<uint16> ElementType;
    CIM_StorageSetting* Goal;
    Property<uint64> MinimumVolumeSize;
    Property<uint64> MaximumVolumeSize;
    Property<uint64> VolumeSizeDivisor;
    Property<uint32> return_value;
    CIMPLE_METHOD(CIM_StoragePool_GetSupportedSizeRange_method)
};

class CIM_StoragePool_GetAvailableExtents_method : public Instance
{
public:
    CIM_StorageSetting* Goal;
    Array<CIM_StorageExtent*> AvailableExtents;
    Property<uint32> return_value;
    CIMPLE_METHOD(CIM_StoragePool_GetAvailableExtents_method)
};

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_StoragePool_h */
