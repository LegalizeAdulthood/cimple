/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT; THIS FILE WAS AUTOMATICALLY GENERATED BY GENCLASS 1.0.22
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "CMPL_Embedded.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Repository __meta_repository_1F1481C8FA7517D6B5C8DD52B22915A4;

/*[1302]*/
extern const Meta_Property
_CMPL_Embedded_Key;

/*[1325]*/
const Meta_Property
_CMPL_Embedded_Key =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY|CIMPLE_FLAG_READ,
    "Key",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    UINT32,
    0, /* subscript */
    CIMPLE_OFF(CMPL_Embedded,Key),
    0, /* value */
};

extern const Meta_Reference
_CMPL_Embedded_embedded1;

/*[1914]*/
const Meta_Reference _CMPL_Embedded_embedded1 =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_EMBEDDED_INSTANCE,
    "embedded1",
    0, /* meta_qualifiers */
    0, /* num_meta_qualifiers */
    0, /* subscript */
    &CMPL_Embedded1::static_meta_class,
    CIMPLE_OFF(CMPL_Embedded,embedded1)
};

extern const Meta_Reference
_CMPL_Embedded_embedded2;

/*[1914]*/
const Meta_Reference _CMPL_Embedded_embedded2 =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_EMBEDDED_OBJECT,
    "embedded2",
    0, /* meta_qualifiers */
    0, /* num_meta_qualifiers */
    0, /* subscript */
    &Instance::static_meta_class,
    CIMPLE_OFF(CMPL_Embedded,embedded2)
};

/*[1729]*/
static const Meta_Reference
_CMPL_Embedded_foo1_return_value =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_EMBEDDED_INSTANCE|CIMPLE_FLAG_OUT,
    "return_value",
    0, /* meta_qualifiers */
    0, /* num_meta_qualifiers */
    0, /* subscript */
    &CMPL_Embedded1::static_meta_class,
    CIMPLE_OFF(CMPL_Embedded_foo1_method, return_value),
};

/*[1645]*/
static Meta_Feature* _CMPL_Embedded_foo1_MFA[] =
{
    (Meta_Feature*)(void*)&_CMPL_Embedded_foo1_return_value
};

/*[1847]*/
const Meta_Method
CMPL_Embedded_foo1_method::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_METHOD,
    "foo1",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _CMPL_Embedded_foo1_MFA,
    CIMPLE_ARRAY_SIZE(_CMPL_Embedded_foo1_MFA),
    sizeof(CMPL_Embedded_foo1_method),
    STRING,
};

/*[1580]*/
static const Meta_Reference
_CMPL_Embedded_foo2_arg1 =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_EMBEDDED_INSTANCE|CIMPLE_FLAG_IN,
    "arg1",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    0, /* subscript */
    &CMPL_Embedded1::static_meta_class,
    CIMPLE_OFF(CMPL_Embedded_foo2_method,arg1)
};

/*[1580]*/
static const Meta_Reference
_CMPL_Embedded_foo2_arg2 =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_EMBEDDED_INSTANCE|CIMPLE_FLAG_IN|CIMPLE_FLAG_OUT,
    "arg2",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    0, /* subscript */
    &CMPL_Embedded2::static_meta_class,
    CIMPLE_OFF(CMPL_Embedded_foo2_method,arg2)
};

/*[1580]*/
static const Meta_Reference
_CMPL_Embedded_foo2_arg3 =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_EMBEDDED_INSTANCE|CIMPLE_FLAG_OUT,
    "arg3",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    0, /* subscript */
    &CMPL_Embedded3::static_meta_class,
    CIMPLE_OFF(CMPL_Embedded_foo2_method,arg3)
};

/*[1669]*/
static const Meta_Property
_CMPL_Embedded_foo2_return_value =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    STRING,
    0,
    CIMPLE_OFF(CMPL_Embedded_foo2_method,return_value),
    0, /* value */
};

/*[1645]*/
static Meta_Feature* _CMPL_Embedded_foo2_MFA[] =
{
    (Meta_Feature*)(void*)&_CMPL_Embedded_foo2_arg1,
    (Meta_Feature*)(void*)&_CMPL_Embedded_foo2_arg2,
    (Meta_Feature*)(void*)&_CMPL_Embedded_foo2_arg3,
    (Meta_Feature*)(void*)&_CMPL_Embedded_foo2_return_value
};

/*[1847]*/
const Meta_Method
CMPL_Embedded_foo2_method::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_METHOD,
    "foo2",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _CMPL_Embedded_foo2_MFA,
    CIMPLE_ARRAY_SIZE(_CMPL_Embedded_foo2_MFA),
    sizeof(CMPL_Embedded_foo2_method),
    STRING,
};

/*[2025]*/
static Meta_Feature* _CMPL_Embedded_MFA[] =
{
    (Meta_Feature*)(void*)&_CMPL_Embedded_Key,
    (Meta_Feature*)(void*)&_CMPL_Embedded_embedded1,
    (Meta_Feature*)(void*)&_CMPL_Embedded_embedded2,
    (Meta_Feature*)(void*)&CMPL_Embedded_foo1_method::static_meta_class,
    (Meta_Feature*)(void*)&CMPL_Embedded_foo2_method::static_meta_class,
};

/*[2072]*/
static const Meta_Feature_Local _locals[] =
{
    {1},
    {1},
    {1},
    {1},
    {1},
};

/*[2092]*/
const Meta_Class CMPL_Embedded::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_CLASS,
    "CMPL_Embedded",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _CMPL_Embedded_MFA,
    CIMPLE_ARRAY_SIZE(_CMPL_Embedded_MFA),
    sizeof(CMPL_Embedded),
    _locals,
    0, /* super_class */ 
    1, /* num_keys */
    &__meta_repository_1F1481C8FA7517D6B5C8DD52B22915A4,
};

CIMPLE_NAMESPACE_END

