/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "Thing.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Repository __meta_repository_F4A795C4F3BC1F5C8B8959AFA40EE849;

extern const Meta_Property
_Thing_key;

const Meta_Property
_Thing_key =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY|CIMPLE_FLAG_READ,
    "key",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    UINT32,
    0, /* subscript */
    CIMPLE_OFF(Thing,key),
    0, /* value */
};

static Meta_Feature* _Thing_MFA[] =
{
    (Meta_Feature*)&_Thing_key,
};

static const Meta_Feature_Local _locals[] =
{
    {1},
};

const Meta_Class Thing::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_CLASS,
    "Thing",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _Thing_MFA,
    CIMPLE_ARRAY_SIZE(_Thing_MFA),
    sizeof(Thing),
    _locals,
    0, /* super_class */ 
    1, /* num_keys */
    0x60EE9C0C, /* crc */
    &__meta_repository_F4A795C4F3BC1F5C8B8959AFA40EE849,
};

CIMPLE_NAMESPACE_END

