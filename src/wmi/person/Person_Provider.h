// Generated by genprov 2.0.1
#ifndef _Person_Provider_h
#define _Person_Provider_h

#include <cimple/cimple.h>
#include "Person.h"

CIMPLE_NAMESPACE_BEGIN

class Person_Provider
{
public:

    typedef Person Class;

    Person_Provider();

    ~Person_Provider();

    Load_Status load();

    Unload_Status unload();

    Get_Instance_Status get_instance(
        const Person* model,
        Person*& instance);

    Enum_Instances_Status enum_instances(
        const Person* model,
        Enum_Instances_Handler<Person>* handler);

    Create_Instance_Status create_instance(
        Person* instance);

    Delete_Instance_Status delete_instance(
        const Person* instance);

    Modify_Instance_Status modify_instance(
        const Person* model,
        const Person* instance);

    Invoke_Method_Status foo(
        const Property<String>& arg,
        Property<uint32>& return_value);

    Invoke_Method_Status foo1(
        const Person* self,
        const Property<uint32>& arg1,
        const Property<String>& arg2,
        const Property<boolean>& arg3,
        Property<uint32>& arg4,
        Property<String>& arg5,
        Property<boolean>& arg6,
        Property<String>& return_value);

    /*@END@*/
};

CIMPLE_NAMESPACE_END

#endif /* _Person_Provider_h */
