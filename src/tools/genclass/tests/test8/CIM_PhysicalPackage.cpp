/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "CIM_PhysicalPackage.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedElement_Caption_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedElement_Caption_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_Caption_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedElement_Caption_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedElement_Caption_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedElement_Caption;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_Override_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Description_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_Description_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_Override_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Description;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_ElementName_Override_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_ElementName_MappingStrings_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedElement_ElementName_Description_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_ElementName_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_ElementName_Override_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_ElementName_MappingStrings_MQ,
    (Meta_Qualifier*)&_CIM_ManagedElement_ElementName_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_ElementName;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_InstallDate_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_InstallDate_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_InstallDate_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_InstallDate_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_InstallDate_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_InstallDate;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_Name_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedSystemElement_Name_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_Name_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Name_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Name_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_Name;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_OperationalStatus_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ValueMap_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_Values_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ArrayType_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ModelCorrespondence_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_OperationalStatus_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ValueMap_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_Values_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ArrayType_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ModelCorrespondence_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_OperationalStatus;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_Description_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_ArrayType_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_ModelCorrespondence_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_StatusDescriptions_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_ArrayType_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_ModelCorrespondence_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_StatusDescriptions;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_Status_Deprecated_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_Status_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_Status_ValueMap_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedSystemElement_Status_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_Status_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_ValueMap_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_Status;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Tag_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Tag_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_Tag_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Tag_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Tag_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Tag;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_CreationClassName_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_CreationClassName_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_CreationClassName_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_CreationClassName_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_CreationClassName_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_CreationClassName;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Manufacturer_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Manufacturer_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_Manufacturer_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Manufacturer;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Model_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Model_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Model_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_Model_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Model;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_SKU_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_SKU_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_SKU_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_SKU_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SKU_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_SKU;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_SerialNumber_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_SerialNumber_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_SerialNumber_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_SerialNumber;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Version_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Version_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Version_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_Version_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Version;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_PartNumber_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_PartNumber_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_PartNumber_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_PartNumber_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_PartNumber;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_OtherIdentifyingInfo_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_OtherIdentifyingInfo_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_OtherIdentifyingInfo_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_OtherIdentifyingInfo;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_PoweredOn_Description_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_PoweredOn_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_PoweredOn_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_PoweredOn;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_ManufactureDate_Description_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_ManufactureDate_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_ManufactureDate_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_ManufactureDate;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_VendorEquipmentType_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_VendorEquipmentType_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_VendorEquipmentType_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_VendorEquipmentType;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_UserTracking_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_UserTracking_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_UserTracking_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_UserTracking_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_UserTracking_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_UserTracking;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_CanBeFRUed_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalPackage_CanBeFRUed_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_CanBeFRUed_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_CanBeFRUed;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_RemovalConditions_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_RemovalConditions_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The RemovalCapabilites property is used to describe the conditions under which a PhysicalPackage can be removed. Since all PhysicalPackages are not removable, this property defaults to 2, 'Not Applicable'.", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_RemovalConditions_ValueMap_MQ;

static const char*
_CIM_PhysicalPackage_RemovalConditions_ValueMap_MQ_elements[] =
{
    "0",
    "2",
    "3",
    "4",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_RemovalConditions_ValueMap_MQ =
{
    { 0 }, /* refs */
    "ValueMap", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalPackage_RemovalConditions_ValueMap_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_RemovalConditions_ValueMap_MQ_elements),
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_RemovalConditions_Values_MQ;

static const char*
_CIM_PhysicalPackage_RemovalConditions_Values_MQ_elements[] =
{
    "Unknown",
    "Not Applicable",
    "Removable when off",
    "Removable when on or off",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_RemovalConditions_Values_MQ =
{
    { 0 }, /* refs */
    "Values", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalPackage_RemovalConditions_Values_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_RemovalConditions_Values_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_RemovalConditions_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_RemovalConditions_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_RemovalConditions_ValueMap_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_RemovalConditions_Values_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_RemovalConditions;

const Meta_Property
_CIM_PhysicalPackage_RemovalConditions =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "RemovalConditions",
    _CIM_PhysicalPackage_RemovalConditions_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_RemovalConditions_MQA),
    UINT16,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage,RemovalConditions),
    0, /* value */
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_Removable_Deprecated_MQ;

static const char*
_CIM_PhysicalPackage_Removable_Deprecated_MQ_elements[] =
{
    "CIM_PhysicalPackage.RemovalConditions",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_Removable_Deprecated_MQ =
{
    { 0 }, /* refs */
    "Deprecated", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalPackage_Removable_Deprecated_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_Removable_Deprecated_MQ_elements),
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Removable_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Removable_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The use of this property is being deprecated. Instead RemovalConditions should be used. The RemovalConditions property addresses whether a PhysicalPackage is removable with or without power being applied. \nA PhysicalPackage is Removable if it is designed to be taken in and out of the physical container in which it is normally found, without impairing the function of the overall packaging. A Package can still be Removable if power must be 'off' in order to perform the removal. If power can be 'on' and the Package removed, then the Element is both Removable and HotSwappable. For example, an extra battery in a laptop is Removable, as is a disk drive Package inserted using SCA connectors. However, the latter is also HotSwappable. A laptop's display is not Removable, nor is a non-redundant power supply. Removing these components would impact the function of the overall packaging or is impossible due to the tight integration of the Package.", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_Removable_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Removable_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Removable_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Removable;

const Meta_Property
_CIM_PhysicalPackage_Removable =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Removable",
    _CIM_PhysicalPackage_Removable_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_Removable_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage,Removable),
    0, /* value */
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_Replaceable_Deprecated_MQ;

static const char*
_CIM_PhysicalPackage_Replaceable_Deprecated_MQ_elements[] =
{
    "No Value",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_Replaceable_Deprecated_MQ =
{
    { 0 }, /* refs */
    "Deprecated", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalPackage_Replaceable_Deprecated_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_Replaceable_Deprecated_MQ_elements),
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Replaceable_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Replaceable_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The use of this property is being deprecated because it is redundant with the FRU class and its associations. A PhysicalPackage is Replaceable if it is possible to replace (FRU or upgrade) the Element with a physically different one. For example, some ComputerSystems allow the main Processor chip to be upgraded to one of a higher clock rating. In this case, the Processor is said to be Replaceable. Another example is a power supply Package mounted on sliding rails. All Removable packages are inherently Replaceable.", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_Replaceable_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Replaceable_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Replaceable_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Replaceable;

const Meta_Property
_CIM_PhysicalPackage_Replaceable =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Replaceable",
    _CIM_PhysicalPackage_Replaceable_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_Replaceable_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage,Replaceable),
    0, /* value */
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_HotSwappable_Deprecated_MQ;

static const char*
_CIM_PhysicalPackage_HotSwappable_Deprecated_MQ_elements[] =
{
    "CIM_PhysicalPackage.RemovalConditions",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_HotSwappable_Deprecated_MQ =
{
    { 0 }, /* refs */
    "Deprecated", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalPackage_HotSwappable_Deprecated_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_HotSwappable_Deprecated_MQ_elements),
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_HotSwappable_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_HotSwappable_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The use of this property is being deprecated. Instead RemovalConditions should be used. The RemovalConditions property addresses whether a PhysicalPackage is removable with or without power being applied. \n\nA PhysicalPackage is HotSwappable if it is possible to replace the Element with a physically different but equivalent one while the containing Package has power applied to it (ie, is 'on'). For example, a disk drive Package inserted using SCA connectors is both Removable and HotSwappable. All HotSwappable packages are inherently Removable and Replaceable.", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_HotSwappable_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_HotSwappable_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_HotSwappable_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_HotSwappable;

const Meta_Property
_CIM_PhysicalPackage_HotSwappable =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "HotSwappable",
    _CIM_PhysicalPackage_HotSwappable_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_HotSwappable_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage,HotSwappable),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Height_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Height_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The height of the PhysicalPackage in inches.", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Height_Units_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Height_Units_MQ =
{
    { 0 }, /* refs */
    "Units", /* name */
    STRING, /* type */
    0, /* array */
    "Inches", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_Height_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Height_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Height_Units_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Height;

const Meta_Property
_CIM_PhysicalPackage_Height =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Height",
    _CIM_PhysicalPackage_Height_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_Height_MQA),
    REAL32,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage,Height),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Depth_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Depth_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The depth of the PhysicalPackage in inches.", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Depth_Units_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Depth_Units_MQ =
{
    { 0 }, /* refs */
    "Units", /* name */
    STRING, /* type */
    0, /* array */
    "Inches", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_Depth_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Depth_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Depth_Units_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Depth;

const Meta_Property
_CIM_PhysicalPackage_Depth =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Depth",
    _CIM_PhysicalPackage_Depth_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_Depth_MQA),
    REAL32,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage,Depth),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Width_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Width_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The width of the PhysicalPackage in inches.", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Width_Units_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Width_Units_MQ =
{
    { 0 }, /* refs */
    "Units", /* name */
    STRING, /* type */
    0, /* array */
    "Inches", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_Width_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Width_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Width_Units_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Width;

const Meta_Property
_CIM_PhysicalPackage_Width =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Width",
    _CIM_PhysicalPackage_Width_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_Width_MQA),
    REAL32,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage,Width),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Weight_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Weight_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The weight of the PhysicalPackage in pounds.", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Weight_Units_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Weight_Units_MQ =
{
    { 0 }, /* refs */
    "Units", /* name */
    STRING, /* type */
    0, /* array */
    "Pounds", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_Weight_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Weight_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Weight_Units_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Weight;

const Meta_Property
_CIM_PhysicalPackage_Weight =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Weight",
    _CIM_PhysicalPackage_Weight_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_Weight_MQA),
    REAL32,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage,Weight),
    0, /* value */
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_IsCompatible_Deprecated_MQ;

static const char*
_CIM_PhysicalPackage_IsCompatible_Deprecated_MQ_elements[] =
{
    "No Value",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_IsCompatible_Deprecated_MQ =
{
    { 0 }, /* refs */
    "Deprecated", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalPackage_IsCompatible_Deprecated_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_IsCompatible_Deprecated_MQ_elements),
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_IsCompatible_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_IsCompatible_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "This method is being deprecated. A PhysicalPackage cannot determine if it is compatible with another object. The IsCompatible method verifies whether the referenced PhysicalElement may be contained by or inserted into the PhysicalPackage. The return value should be 0 if the request was successfully executed, 1 if the request is not supported and some other value if an error occurred. In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are 'translated' may also be specified in the subclass as a Values array qualifier.", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_IsCompatible_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_IsCompatible_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_IsCompatible_Description_MQ,
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_IsCompatible_ElementToCheck_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_IsCompatible_ElementToCheck_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The element to check for compatibility with this one.", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_IsCompatible_ElementToCheck_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_IsCompatible_ElementToCheck_Description_MQ,
};

static const Meta_Reference
_CIM_PhysicalPackage_IsCompatible_ElementToCheck =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "ElementToCheck",
    _CIM_PhysicalPackage_IsCompatible_ElementToCheck_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_IsCompatible_ElementToCheck_MQA),
    &CIM_PhysicalElement::static_meta_class,
    CIMPLE_OFF(CIM_PhysicalPackage_IsCompatible_method,ElementToCheck)
};

static const Meta_Property
_CIM_PhysicalPackage_IsCompatible_return_value =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    _CIM_PhysicalPackage_IsCompatible_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_IsCompatible_MQA),
    UINT32,
    0,
    CIMPLE_OFF(CIM_PhysicalPackage_IsCompatible_method,return_value),
    0, /* value */
};

static Meta_Feature* _CIM_PhysicalPackage_IsCompatible_MFA[] =
{
    (Meta_Feature*)&_CIM_PhysicalPackage_IsCompatible_ElementToCheck,
    (Meta_Feature*)&_CIM_PhysicalPackage_IsCompatible_return_value
};

const Meta_Method
CIM_PhysicalPackage_IsCompatible_method::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_METHOD,
    "IsCompatible",
    _CIM_PhysicalPackage_IsCompatible_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_IsCompatible_MQA),
    _CIM_PhysicalPackage_IsCompatible_MFA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_IsCompatible_MFA),
    sizeof(CIM_PhysicalPackage_IsCompatible_method),
    UINT32,
};

static Meta_Feature* _CIM_PhysicalPackage_MFA[] =
{
    (Meta_Feature*)&_CIM_ManagedElement_Caption,
    (Meta_Feature*)&_CIM_PhysicalElement_Description,
    (Meta_Feature*)&_CIM_PhysicalElement_ElementName,
    (Meta_Feature*)&_CIM_ManagedSystemElement_InstallDate,
    (Meta_Feature*)&_CIM_ManagedSystemElement_Name,
    (Meta_Feature*)&_CIM_ManagedSystemElement_OperationalStatus,
    (Meta_Feature*)&_CIM_ManagedSystemElement_StatusDescriptions,
    (Meta_Feature*)&_CIM_ManagedSystemElement_Status,
    (Meta_Feature*)&_CIM_PhysicalElement_Tag,
    (Meta_Feature*)&_CIM_PhysicalElement_CreationClassName,
    (Meta_Feature*)&_CIM_PhysicalElement_Manufacturer,
    (Meta_Feature*)&_CIM_PhysicalElement_Model,
    (Meta_Feature*)&_CIM_PhysicalElement_SKU,
    (Meta_Feature*)&_CIM_PhysicalElement_SerialNumber,
    (Meta_Feature*)&_CIM_PhysicalElement_Version,
    (Meta_Feature*)&_CIM_PhysicalElement_PartNumber,
    (Meta_Feature*)&_CIM_PhysicalElement_OtherIdentifyingInfo,
    (Meta_Feature*)&_CIM_PhysicalElement_PoweredOn,
    (Meta_Feature*)&_CIM_PhysicalElement_ManufactureDate,
    (Meta_Feature*)&_CIM_PhysicalElement_VendorEquipmentType,
    (Meta_Feature*)&_CIM_PhysicalElement_UserTracking,
    (Meta_Feature*)&_CIM_PhysicalElement_CanBeFRUed,
    (Meta_Feature*)&_CIM_PhysicalPackage_RemovalConditions,
    (Meta_Feature*)&_CIM_PhysicalPackage_Removable,
    (Meta_Feature*)&_CIM_PhysicalPackage_Replaceable,
    (Meta_Feature*)&_CIM_PhysicalPackage_HotSwappable,
    (Meta_Feature*)&_CIM_PhysicalPackage_Height,
    (Meta_Feature*)&_CIM_PhysicalPackage_Depth,
    (Meta_Feature*)&_CIM_PhysicalPackage_Width,
    (Meta_Feature*)&_CIM_PhysicalPackage_Weight,
    (Meta_Feature*)&CIM_PhysicalPackage_IsCompatible_method::static_meta_class,
};

static const Meta_Feature_Local _locals[] =
{
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Version_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Version_MQ =
{
    { 0 }, /* refs */
    "Version", /* name */
    STRING, /* type */
    0, /* array */
    "2.8.0", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The PhysicalPackage class represents PhysicalElements that contain or host other components. Examples are a Rack enclosure or an adapter Card.", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalPackage_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Version_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Description_MQ,
};

const Meta_Class CIM_PhysicalPackage::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_CLASS,
    "CIM_PhysicalPackage",
    _CIM_PhysicalPackage_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_MQA),
    _CIM_PhysicalPackage_MFA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalPackage_MFA),
    sizeof(CIM_PhysicalPackage),
    _locals,
    &CIM_PhysicalElement::static_meta_class,
    2, /* num_keys */
    0xFDD6B396, /* crc */
    0,
};

CIMPLE_NAMESPACE_END

CIMPLE_ID("$Header: /home/cvs/cimple/src/tools/genclass/tests/test8/CIM_PhysicalPackage.cpp,v 1.1 2007/03/07 20:16:51 mbrasher-public Exp $");
