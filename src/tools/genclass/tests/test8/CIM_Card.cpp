/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "CIM_Card.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedElement_Caption_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedElement_Caption_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_Card_Caption_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedElement_Caption_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedElement_Caption_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedElement_Caption;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_Override_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Description_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_Description_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_Override_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Description;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_ElementName_Override_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_ElementName_MappingStrings_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedElement_ElementName_Description_MQ;

static const Meta_Qualifier*
_CIM_Card_ElementName_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_ElementName_Override_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_ElementName_MappingStrings_MQ,
    (Meta_Qualifier*)&_CIM_ManagedElement_ElementName_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_ElementName;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_InstallDate_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_InstallDate_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_InstallDate_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_InstallDate_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_InstallDate_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_InstallDate;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_Name_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedSystemElement_Name_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_Card_Name_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Name_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Name_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_Name;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_OperationalStatus_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ValueMap_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_Values_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ArrayType_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ModelCorrespondence_MQ;

static const Meta_Qualifier*
_CIM_Card_OperationalStatus_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ValueMap_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_Values_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ArrayType_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ModelCorrespondence_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_OperationalStatus;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_Description_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_ArrayType_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_ModelCorrespondence_MQ;

static const Meta_Qualifier*
_CIM_Card_StatusDescriptions_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_ArrayType_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_ModelCorrespondence_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_StatusDescriptions;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_Status_Deprecated_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_Status_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_Status_ValueMap_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedSystemElement_Status_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_Card_Status_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_ValueMap_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_Status;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Tag_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Tag_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_Card_Tag_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Tag_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Tag_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Tag;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_CreationClassName_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_CreationClassName_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_Card_CreationClassName_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_CreationClassName_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_CreationClassName_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_CreationClassName;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Manufacturer_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Manufacturer_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_Manufacturer_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Manufacturer;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Model_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Model_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Model_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_Model_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Model;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_SKU_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_SKU_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_Card_SKU_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_SKU_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SKU_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_SKU;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_SerialNumber_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_SerialNumber_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_SerialNumber_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_SerialNumber;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Version_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Version_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Version_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_Version_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Version;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_PartNumber_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_PartNumber_MaxLen_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_PartNumber_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_PartNumber_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_PartNumber;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_OtherIdentifyingInfo_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_OtherIdentifyingInfo_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_OtherIdentifyingInfo_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_OtherIdentifyingInfo;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_PoweredOn_Description_MQ;

static const Meta_Qualifier*
_CIM_Card_PoweredOn_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_PoweredOn_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_PoweredOn;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_ManufactureDate_Description_MQ;

static const Meta_Qualifier*
_CIM_Card_ManufactureDate_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_ManufactureDate_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_ManufactureDate;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_VendorEquipmentType_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_VendorEquipmentType_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_VendorEquipmentType_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_VendorEquipmentType;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_UserTracking_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_UserTracking_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_UserTracking_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_UserTracking_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_UserTracking_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_UserTracking;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_CanBeFRUed_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_Card_CanBeFRUed_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_CanBeFRUed_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_CanBeFRUed;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_RemovalConditions_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_RemovalConditions_ValueMap_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_RemovalConditions_Values_MQ;

static const Meta_Qualifier*
_CIM_Card_RemovalConditions_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_RemovalConditions_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_RemovalConditions_ValueMap_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_RemovalConditions_Values_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_RemovalConditions;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_Removable_Deprecated_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Removable_Description_MQ;

static const Meta_Qualifier*
_CIM_Card_Removable_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Removable_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Removable_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Removable;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_Replaceable_Deprecated_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Replaceable_Description_MQ;

static const Meta_Qualifier*
_CIM_Card_Replaceable_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Replaceable_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Replaceable_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Replaceable;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_HotSwappable_Deprecated_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_HotSwappable_Description_MQ;

static const Meta_Qualifier*
_CIM_Card_HotSwappable_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_HotSwappable_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_HotSwappable_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_HotSwappable;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Height_Description_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Height_Units_MQ;

static const Meta_Qualifier*
_CIM_Card_Height_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Height_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Height_Units_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Height;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Depth_Description_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Depth_Units_MQ;

static const Meta_Qualifier*
_CIM_Card_Depth_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Depth_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Depth_Units_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Depth;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Width_Description_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Width_Units_MQ;

static const Meta_Qualifier*
_CIM_Card_Width_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Width_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Width_Units_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Width;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Weight_Description_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_Weight_Units_MQ;

static const Meta_Qualifier*
_CIM_Card_Weight_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Weight_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_Weight_Units_MQ,
};

extern const Meta_Property
_CIM_PhysicalPackage_Weight;

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalPackage_IsCompatible_Deprecated_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalPackage_IsCompatible_Description_MQ;

static const Meta_Qualifier*
_CIM_Card_IsCompatible_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalPackage_IsCompatible_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalPackage_IsCompatible_Description_MQ,
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_HostingBoard_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_HostingBoard_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "Boolean indicating that this Card is a Motherboard or, more generically, a baseboard in a Chassis.", /* value */ 
};

static const Meta_Qualifier*
_CIM_Card_HostingBoard_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_HostingBoard_Description_MQ,
};

extern const Meta_Property
_CIM_Card_HostingBoard;

const Meta_Property
_CIM_Card_HostingBoard =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "HostingBoard",
    _CIM_Card_HostingBoard_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_HostingBoard_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_Card,HostingBoard),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_SlotLayout_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_SlotLayout_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "SlotLayout is a free-form string that describes the slot positioning, typical usage, restrictions, individual slot spacings or any other pertinent information for the slots on a Card.", /* value */ 
};

static const Meta_Qualifier*
_CIM_Card_SlotLayout_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_SlotLayout_Description_MQ,
};

extern const Meta_Property
_CIM_Card_SlotLayout;

const Meta_Property
_CIM_Card_SlotLayout =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "SlotLayout",
    _CIM_Card_SlotLayout_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_SlotLayout_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_Card,SlotLayout),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_RequiresDaughterBoard_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_RequiresDaughterBoard_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "Boolean indicating that at least one daughterboard or auxiliary Card is required in order to function properly.", /* value */ 
};

static const Meta_Qualifier*
_CIM_Card_RequiresDaughterBoard_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_RequiresDaughterBoard_Description_MQ,
};

extern const Meta_Property
_CIM_Card_RequiresDaughterBoard;

const Meta_Property
_CIM_Card_RequiresDaughterBoard =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "RequiresDaughterBoard",
    _CIM_Card_RequiresDaughterBoard_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_RequiresDaughterBoard_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_Card,RequiresDaughterBoard),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_SpecialRequirements_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_SpecialRequirements_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "Boolean indicating that this Card is physically unique from other Cards of the same type and therefore requires a special Slot. For example, a double-wide Card requires two Slots. Another example is where a certain Card may be used for the same general function as other Cards but requires a special Slot (e.g., extra long), whereas the other Cards can be placed in any available Slot. If set to TRUE, then the corresponding property, RequirementsDescription, should specify the nature of the uniqueness or purpose of the Card.", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_Card_SpecialRequirements_ModelCorrespondence_MQ;

static const char*
_CIM_Card_SpecialRequirements_ModelCorrespondence_MQ_elements[] =
{
    "CIM_Card.RequirementsDescription",
};

const Meta_Qualifier_Array<const char*>
_CIM_Card_SpecialRequirements_ModelCorrespondence_MQ =
{
    { 0 }, /* refs */
    "ModelCorrespondence", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_Card_SpecialRequirements_ModelCorrespondence_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_Card_SpecialRequirements_ModelCorrespondence_MQ_elements),
};

static const Meta_Qualifier*
_CIM_Card_SpecialRequirements_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_SpecialRequirements_Description_MQ,
    (Meta_Qualifier*)&_CIM_Card_SpecialRequirements_ModelCorrespondence_MQ,
};

extern const Meta_Property
_CIM_Card_SpecialRequirements;

const Meta_Property
_CIM_Card_SpecialRequirements =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "SpecialRequirements",
    _CIM_Card_SpecialRequirements_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_SpecialRequirements_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_Card,SpecialRequirements),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_RequirementsDescription_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_RequirementsDescription_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "A free-form string describing the way(s) in which this Card is physically unique from other Cards. This property only has meaning when the corresponding boolean property, SpecialRequirements, is set to TRUE.", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_Card_RequirementsDescription_ModelCorrespondence_MQ;

static const char*
_CIM_Card_RequirementsDescription_ModelCorrespondence_MQ_elements[] =
{
    "CIM_Card.SpecialRequirements",
};

const Meta_Qualifier_Array<const char*>
_CIM_Card_RequirementsDescription_ModelCorrespondence_MQ =
{
    { 0 }, /* refs */
    "ModelCorrespondence", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_Card_RequirementsDescription_ModelCorrespondence_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_Card_RequirementsDescription_ModelCorrespondence_MQ_elements),
};

static const Meta_Qualifier*
_CIM_Card_RequirementsDescription_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_RequirementsDescription_Description_MQ,
    (Meta_Qualifier*)&_CIM_Card_RequirementsDescription_ModelCorrespondence_MQ,
};

extern const Meta_Property
_CIM_Card_RequirementsDescription;

const Meta_Property
_CIM_Card_RequirementsDescription =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "RequirementsDescription",
    _CIM_Card_RequirementsDescription_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_RequirementsDescription_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_Card,RequirementsDescription),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_OperatingVoltages_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_OperatingVoltages_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "Operating voltages required by the Card.", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_OperatingVoltages_Units_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_OperatingVoltages_Units_MQ =
{
    { 0 }, /* refs */
    "Units", /* name */
    STRING, /* type */
    0, /* array */
    "MilliVolts", /* value */ 
};

static const Meta_Qualifier*
_CIM_Card_OperatingVoltages_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_OperatingVoltages_Description_MQ,
    (Meta_Qualifier*)&_CIM_Card_OperatingVoltages_Units_MQ,
};

extern const Meta_Property
_CIM_Card_OperatingVoltages;

const Meta_Property
_CIM_Card_OperatingVoltages =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "OperatingVoltages",
    _CIM_Card_OperatingVoltages_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_OperatingVoltages_MQA),
    SINT16,
    -1,
    CIMPLE_OFF(CIM_Card,OperatingVoltages),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_ConnectorPower_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_ConnectorPower_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "This method manipulates the power to a PhysicalConnector on a Card. It is intended to be used by a Card (especially by a motherboard - i.e., HostingBoard=TRUE) to turn the power on and off for a specific PhysicalConnector located on it. For example, in a personal computer, a system slot does not know how to turn itself on and off. However, the motherboard hosting this slot may have that capability. This is important in order to support hot swapping of an adapter card in a system slot. The method should return 0 if successful, 1 if the request is not supported, and some other value if any other error occurred. In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are 'translated' may also be specified in the subclass as a Values array qualifier.", /* value */ 
};

static const Meta_Qualifier*
_CIM_Card_ConnectorPower_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_ConnectorPower_Description_MQ,
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_ConnectorPower_Connector_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_ConnectorPower_Connector_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The connector to change the power setting for.", /* value */ 
};

static const Meta_Qualifier*
_CIM_Card_ConnectorPower_Connector_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_ConnectorPower_Connector_Description_MQ,
};

static const Meta_Reference
_CIM_Card_ConnectorPower_Connector =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "Connector",
    _CIM_Card_ConnectorPower_Connector_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_ConnectorPower_Connector_MQA),
    &CIM_PhysicalConnector::static_meta_class,
    CIMPLE_OFF(CIM_Card_ConnectorPower_method,Connector)
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_ConnectorPower_PoweredOn_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_ConnectorPower_PoweredOn_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "If TRUE, turn power on for the connector. If FALSE, turn power off.", /* value */ 
};

static const Meta_Qualifier*
_CIM_Card_ConnectorPower_PoweredOn_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_ConnectorPower_PoweredOn_Description_MQ,
};

static const Meta_Property
_CIM_Card_ConnectorPower_PoweredOn =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN,
    "PoweredOn",
    _CIM_Card_ConnectorPower_PoweredOn_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_ConnectorPower_PoweredOn_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_Card_ConnectorPower_method,PoweredOn),
    0, /* value */
};

static const Meta_Property
_CIM_Card_ConnectorPower_return_value =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    _CIM_Card_ConnectorPower_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_ConnectorPower_MQA),
    UINT32,
    0,
    CIMPLE_OFF(CIM_Card_ConnectorPower_method,return_value),
    0, /* value */
};

static Meta_Feature* _CIM_Card_ConnectorPower_MFA[] =
{
    (Meta_Feature*)&_CIM_Card_ConnectorPower_Connector,
    (Meta_Feature*)&_CIM_Card_ConnectorPower_PoweredOn,
    (Meta_Feature*)&_CIM_Card_ConnectorPower_return_value
};

const Meta_Method
CIM_Card_ConnectorPower_method::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_METHOD,
    "ConnectorPower",
    _CIM_Card_ConnectorPower_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_ConnectorPower_MQA),
    _CIM_Card_ConnectorPower_MFA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_ConnectorPower_MFA),
    sizeof(CIM_Card_ConnectorPower_method),
    UINT32,
};

static Meta_Feature* _CIM_Card_MFA[] =
{
    (Meta_Feature*)&_CIM_ManagedElement_Caption,
    (Meta_Feature*)&_CIM_PhysicalElement_Description,
    (Meta_Feature*)&_CIM_PhysicalElement_ElementName,
    (Meta_Feature*)&_CIM_ManagedSystemElement_InstallDate,
    (Meta_Feature*)&_CIM_ManagedSystemElement_Name,
    (Meta_Feature*)&_CIM_ManagedSystemElement_OperationalStatus,
    (Meta_Feature*)&_CIM_ManagedSystemElement_StatusDescriptions,
    (Meta_Feature*)&_CIM_ManagedSystemElement_Status,
    (Meta_Feature*)&_CIM_PhysicalElement_Tag,
    (Meta_Feature*)&_CIM_PhysicalElement_CreationClassName,
    (Meta_Feature*)&_CIM_PhysicalElement_Manufacturer,
    (Meta_Feature*)&_CIM_PhysicalElement_Model,
    (Meta_Feature*)&_CIM_PhysicalElement_SKU,
    (Meta_Feature*)&_CIM_PhysicalElement_SerialNumber,
    (Meta_Feature*)&_CIM_PhysicalElement_Version,
    (Meta_Feature*)&_CIM_PhysicalElement_PartNumber,
    (Meta_Feature*)&_CIM_PhysicalElement_OtherIdentifyingInfo,
    (Meta_Feature*)&_CIM_PhysicalElement_PoweredOn,
    (Meta_Feature*)&_CIM_PhysicalElement_ManufactureDate,
    (Meta_Feature*)&_CIM_PhysicalElement_VendorEquipmentType,
    (Meta_Feature*)&_CIM_PhysicalElement_UserTracking,
    (Meta_Feature*)&_CIM_PhysicalElement_CanBeFRUed,
    (Meta_Feature*)&_CIM_PhysicalPackage_RemovalConditions,
    (Meta_Feature*)&_CIM_PhysicalPackage_Removable,
    (Meta_Feature*)&_CIM_PhysicalPackage_Replaceable,
    (Meta_Feature*)&_CIM_PhysicalPackage_HotSwappable,
    (Meta_Feature*)&_CIM_PhysicalPackage_Height,
    (Meta_Feature*)&_CIM_PhysicalPackage_Depth,
    (Meta_Feature*)&_CIM_PhysicalPackage_Width,
    (Meta_Feature*)&_CIM_PhysicalPackage_Weight,
    (Meta_Feature*)&CIM_PhysicalPackage_IsCompatible_method::static_meta_class,
    (Meta_Feature*)&_CIM_Card_HostingBoard,
    (Meta_Feature*)&_CIM_Card_SlotLayout,
    (Meta_Feature*)&_CIM_Card_RequiresDaughterBoard,
    (Meta_Feature*)&_CIM_Card_SpecialRequirements,
    (Meta_Feature*)&_CIM_Card_RequirementsDescription,
    (Meta_Feature*)&_CIM_Card_OperatingVoltages,
    (Meta_Feature*)&CIM_Card_ConnectorPower_method::static_meta_class,
};

static const Meta_Feature_Local _locals[] =
{
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_Version_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_Version_MQ =
{
    { 0 }, /* refs */
    "Version", /* name */
    STRING, /* type */
    0, /* array */
    "2.8.0", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_Card_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_Card_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The Card class represents a type of physical container that can be plugged into another Card or HostingBoard, or is itself a HostingBoard/Motherboard in a Chassis. The CIM_Card class includes any package capable of carrying signals and providing a mounting point for PhysicalComponents, such as Chips, or other PhysicalPackages, such as other Cards.", /* value */ 
};

static const Meta_Qualifier*
_CIM_Card_MQA[] =
{
    (Meta_Qualifier*)&_CIM_Card_Version_MQ,
    (Meta_Qualifier*)&_CIM_Card_Description_MQ,
};

const Meta_Class CIM_Card::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_CLASS,
    "CIM_Card",
    _CIM_Card_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_MQA),
    _CIM_Card_MFA,
    CIMPLE_ARRAY_SIZE(_CIM_Card_MFA),
    sizeof(CIM_Card),
    _locals,
    &CIM_PhysicalPackage::static_meta_class,
    2, /* num_keys */
    0x9C430412, /* crc */
    0,
};

CIMPLE_NAMESPACE_END

CIMPLE_ID("$Header: /home/cvs/cimple/src/tools/genclass/tests/test8/CIM_Card.cpp,v 1.1 2007/03/07 20:16:51 mbrasher-public Exp $");
