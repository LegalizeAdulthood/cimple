/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "CIM_PhysicalElement.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedElement_Caption_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedElement_Caption_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalElement_Caption_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedElement_Caption_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedElement_Caption_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedElement_Caption;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_Override_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_Override_MQ =
{
    { 0 }, /* refs */
    "Override", /* name */
    STRING, /* type */
    0, /* array */
    "Description", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "A textual description of the PhysicalElement.", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Description_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_Description_MappingStrings_MQ_elements[] =
{
    "MIF.DMTF|FRU|003.3",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Description_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_Description_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Description_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_Description_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_Override_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Description;

const Meta_Property
_CIM_PhysicalElement_Description =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Description",
    _CIM_PhysicalElement_Description_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Description_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,Description),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_ElementName_Override_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_ElementName_Override_MQ =
{
    { 0 }, /* refs */
    "Override", /* name */
    STRING, /* type */
    0, /* array */
    "ElementName", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_ElementName_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_ElementName_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalName",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_ElementName_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_ElementName_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_ElementName_MappingStrings_MQ_elements),
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedElement_ElementName_Description_MQ;

static const Meta_Qualifier*
_CIM_PhysicalElement_ElementName_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_ElementName_Override_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_ElementName_MappingStrings_MQ,
    (Meta_Qualifier*)&_CIM_ManagedElement_ElementName_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_ElementName;

const Meta_Property
_CIM_PhysicalElement_ElementName =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "ElementName",
    _CIM_PhysicalElement_ElementName_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_ElementName_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,ElementName),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_InstallDate_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_InstallDate_MappingStrings_MQ;

static const Meta_Qualifier*
_CIM_PhysicalElement_InstallDate_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_InstallDate_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_InstallDate_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_InstallDate;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_Name_Description_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedSystemElement_Name_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalElement_Name_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Name_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Name_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_Name;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_OperationalStatus_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ValueMap_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_Values_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ArrayType_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_OperationalStatus_ModelCorrespondence_MQ;

static const Meta_Qualifier*
_CIM_PhysicalElement_OperationalStatus_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ValueMap_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_Values_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ArrayType_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_OperationalStatus_ModelCorrespondence_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_OperationalStatus;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_Description_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_ArrayType_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_StatusDescriptions_ModelCorrespondence_MQ;

static const Meta_Qualifier*
_CIM_PhysicalElement_StatusDescriptions_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_ArrayType_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_StatusDescriptions_ModelCorrespondence_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_StatusDescriptions;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_Status_Deprecated_MQ;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_ManagedSystemElement_Status_Description_MQ;

extern const Meta_Qualifier_Array<const char*>
_CIM_ManagedSystemElement_Status_ValueMap_MQ;

extern const Meta_Qualifier_Scalar<uint32>
_CIM_ManagedSystemElement_Status_MaxLen_MQ;

static const Meta_Qualifier*
_CIM_PhysicalElement_Status_MQA[] =
{
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_Deprecated_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_Description_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_ValueMap_MQ,
    (Meta_Qualifier*)&_CIM_ManagedSystemElement_Status_MaxLen_MQ,
};

extern const Meta_Property
_CIM_ManagedSystemElement_Status;

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Tag_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Tag_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "An arbitrary string that uniquely identifies the Physical Element and serves as the key of the Element. The Tag property can contain information such as asset tag or serial number data. The key for PhysicalElement is placed very high in the object hierarchy in order to independently identify the hardware or entity, regardless of physical placement in or on Cabinets, Adapters, and so on. For example, a hotswappable or removable component can be taken from its containing (scoping) Package and be temporarily unused. The object still continues to exist and can even be inserted into a different scoping container. Therefore, the key for Physical Element is an arbitrary string and is defined independently of any placement or location-oriented hierarchy.", /* value */ 
};

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Tag_MaxLen_MQ;

const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Tag_MaxLen_MQ =
{
    { 0 }, /* refs */
    "MaxLen", /* name */
    UINT32, /* type */
    0, /* array */
    256, /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalElement_Tag_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Tag_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Tag_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Tag;

const Meta_Property
_CIM_PhysicalElement_Tag =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY|CIMPLE_FLAG_READ,
    "Tag",
    _CIM_PhysicalElement_Tag_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Tag_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,Tag),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_CreationClassName_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_CreationClassName_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.", /* value */ 
};

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_CreationClassName_MaxLen_MQ;

const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_CreationClassName_MaxLen_MQ =
{
    { 0 }, /* refs */
    "MaxLen", /* name */
    UINT32, /* type */
    0, /* array */
    256, /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalElement_CreationClassName_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_CreationClassName_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_CreationClassName_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_CreationClassName;

const Meta_Property
_CIM_PhysicalElement_CreationClassName =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY|CIMPLE_FLAG_READ,
    "CreationClassName",
    _CIM_PhysicalElement_CreationClassName_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_CreationClassName_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,CreationClassName),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Manufacturer_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Manufacturer_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The name of the organization responsible for producing the PhysicalElement. This organization might be the entity from whom the Element is purchased, but this is not necessarily true. The latter information is contained in the Vendor property of CIM_Product.", /* value */ 
};

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Manufacturer_MaxLen_MQ;

const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Manufacturer_MaxLen_MQ =
{
    { 0 }, /* refs */
    "MaxLen", /* name */
    UINT32, /* type */
    0, /* array */
    256, /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalMfgName",
    "MIF.DMTF|FRU|003.4",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_Manufacturer_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_Manufacturer_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Manufacturer_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Manufacturer;

const Meta_Property
_CIM_PhysicalElement_Manufacturer =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Manufacturer",
    _CIM_PhysicalElement_Manufacturer_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Manufacturer_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,Manufacturer),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Model_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Model_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The name by which the PhysicalElement is generally known.", /* value */ 
};

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Model_MaxLen_MQ;

const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Model_MaxLen_MQ =
{
    { 0 }, /* refs */
    "MaxLen", /* name */
    UINT32, /* type */
    0, /* array */
    256, /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Model_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_Model_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalDescr",
    "MIF.DMTF|FRU|003.5",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Model_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_Model_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Model_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_Model_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Model_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Model;

const Meta_Property
_CIM_PhysicalElement_Model =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Model",
    _CIM_PhysicalElement_Model_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Model_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,Model),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_SKU_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_SKU_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The stock-keeping unit number for this PhysicalElement.", /* value */ 
};

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_SKU_MaxLen_MQ;

const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_SKU_MaxLen_MQ =
{
    { 0 }, /* refs */
    "MaxLen", /* name */
    UINT32, /* type */
    0, /* array */
    64, /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalElement_SKU_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_SKU_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SKU_MaxLen_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_SKU;

const Meta_Property
_CIM_PhysicalElement_SKU =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "SKU",
    _CIM_PhysicalElement_SKU_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_SKU_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,SKU),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_SerialNumber_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_SerialNumber_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "A manufacturer-allocated number used to identify the Physical Element.", /* value */ 
};

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_SerialNumber_MaxLen_MQ;

const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_SerialNumber_MaxLen_MQ =
{
    { 0 }, /* refs */
    "MaxLen", /* name */
    UINT32, /* type */
    0, /* array */
    256, /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalSerialNum",
    "MIF.DMTF|FRU|003.7",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_SerialNumber_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_SerialNumber_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_SerialNumber_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_SerialNumber;

const Meta_Property
_CIM_PhysicalElement_SerialNumber =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "SerialNumber",
    _CIM_PhysicalElement_SerialNumber_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_SerialNumber_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,SerialNumber),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Version_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Version_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "A string that indicates the version of the PhysicalElement.", /* value */ 
};

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Version_MaxLen_MQ;

const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_Version_MaxLen_MQ =
{
    { 0 }, /* refs */
    "MaxLen", /* name */
    UINT32, /* type */
    0, /* array */
    64, /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Version_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_Version_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalHardwareRev",
    "MIF.DMTF|FRU|003.8",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_Version_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_Version_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Version_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_Version_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_Version;

const Meta_Property
_CIM_PhysicalElement_Version =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "Version",
    _CIM_PhysicalElement_Version_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_Version_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,Version),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_PartNumber_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_PartNumber_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The part number assigned by the organization that is responsible for producing or manufacturing the PhysicalElement.", /* value */ 
};

extern const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_PartNumber_MaxLen_MQ;

const Meta_Qualifier_Scalar<uint32>
_CIM_PhysicalElement_PartNumber_MaxLen_MQ =
{
    { 0 }, /* refs */
    "MaxLen", /* name */
    UINT32, /* type */
    0, /* array */
    256, /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_PartNumber_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_PartNumber_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalModelName",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_PartNumber_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_PartNumber_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_PartNumber_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_PartNumber_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_MaxLen_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_PartNumber_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_PartNumber;

const Meta_Property
_CIM_PhysicalElement_PartNumber =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "PartNumber",
    _CIM_PhysicalElement_PartNumber_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_PartNumber_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,PartNumber),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_OtherIdentifyingInfo_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_OtherIdentifyingInfo_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "OtherIdentifyingInfo captures data in addition to Tag information. This information could be used to identify a Physical Element. One example is bar code data associated with an Element that also has an asset tag. Note that if only bar code data is available and is unique or able to be used as an Element key, this property would be null and the bar code data would be used as the class key, in the Tag property.", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalAlias",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_OtherIdentifyingInfo_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_OtherIdentifyingInfo_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_OtherIdentifyingInfo_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_OtherIdentifyingInfo;

const Meta_Property
_CIM_PhysicalElement_OtherIdentifyingInfo =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ|CIMPLE_FLAG_WRITE,
    "OtherIdentifyingInfo",
    _CIM_PhysicalElement_OtherIdentifyingInfo_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_OtherIdentifyingInfo_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,OtherIdentifyingInfo),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_PoweredOn_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_PoweredOn_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "Boolean that indicates whether the PhysicalElement is powered on (TRUE) or is currently off (FALSE).", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalElement_PoweredOn_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_PoweredOn_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_PoweredOn;

const Meta_Property
_CIM_PhysicalElement_PoweredOn =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "PoweredOn",
    _CIM_PhysicalElement_PoweredOn_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_PoweredOn_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,PoweredOn),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_ManufactureDate_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_ManufactureDate_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "The date that this PhysicalElement was manufactured.", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalElement_ManufactureDate_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_ManufactureDate_Description_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_ManufactureDate;

const Meta_Property
_CIM_PhysicalElement_ManufactureDate =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "ManufactureDate",
    _CIM_PhysicalElement_ManufactureDate_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_ManufactureDate_MQA),
    DATETIME,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,ManufactureDate),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_VendorEquipmentType_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_VendorEquipmentType_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "A vendor-specific hardware type for the PhysicalElement. It describes the specific equipment type for the element, as defined by the vendor or manufacturer.", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalVendorType",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_VendorEquipmentType_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_VendorEquipmentType_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_VendorEquipmentType_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_VendorEquipmentType;

const Meta_Property
_CIM_PhysicalElement_VendorEquipmentType =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "VendorEquipmentType",
    _CIM_PhysicalElement_VendorEquipmentType_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_VendorEquipmentType_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,VendorEquipmentType),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_UserTracking_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_UserTracking_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "User-assigned and writeable asset-tracking identifier for the PhysicalElement.", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_UserTracking_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_UserTracking_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalAssetID",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_UserTracking_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_UserTracking_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_UserTracking_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_UserTracking_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_UserTracking_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_UserTracking_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_UserTracking;

const Meta_Property
_CIM_PhysicalElement_UserTracking =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ|CIMPLE_FLAG_WRITE,
    "UserTracking",
    _CIM_PhysicalElement_UserTracking_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_UserTracking_MQA),
    STRING,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,UserTracking),
    0, /* value */
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_CanBeFRUed_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_CanBeFRUed_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "Boolean that indicates whether this PhysicalElement can be FRUed (TRUE) or not (FALSE).", /* value */ 
};

extern const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ;

static const char*
_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ_elements[] =
{
    "MIB.IETF|Entity-MIB.entPhysicalIsFRU",
};

const Meta_Qualifier_Array<const char*>
_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ =
{
    { 0 }, /* refs */
    "MappingStrings", /* name */
    STRING, /* type */
    1, /* array */
    _CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ_elements, /* value */
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ_elements),
};

static const Meta_Qualifier*
_CIM_PhysicalElement_CanBeFRUed_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_CanBeFRUed_Description_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_CanBeFRUed_MappingStrings_MQ,
};

extern const Meta_Property
_CIM_PhysicalElement_CanBeFRUed;

const Meta_Property
_CIM_PhysicalElement_CanBeFRUed =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "CanBeFRUed",
    _CIM_PhysicalElement_CanBeFRUed_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_CanBeFRUed_MQA),
    BOOLEAN,
    0,
    CIMPLE_OFF(CIM_PhysicalElement,CanBeFRUed),
    0, /* value */
};

static Meta_Feature* _CIM_PhysicalElement_MFA[] =
{
    (Meta_Feature*)&_CIM_ManagedElement_Caption,
    (Meta_Feature*)&_CIM_PhysicalElement_Description,
    (Meta_Feature*)&_CIM_PhysicalElement_ElementName,
    (Meta_Feature*)&_CIM_ManagedSystemElement_InstallDate,
    (Meta_Feature*)&_CIM_ManagedSystemElement_Name,
    (Meta_Feature*)&_CIM_ManagedSystemElement_OperationalStatus,
    (Meta_Feature*)&_CIM_ManagedSystemElement_StatusDescriptions,
    (Meta_Feature*)&_CIM_ManagedSystemElement_Status,
    (Meta_Feature*)&_CIM_PhysicalElement_Tag,
    (Meta_Feature*)&_CIM_PhysicalElement_CreationClassName,
    (Meta_Feature*)&_CIM_PhysicalElement_Manufacturer,
    (Meta_Feature*)&_CIM_PhysicalElement_Model,
    (Meta_Feature*)&_CIM_PhysicalElement_SKU,
    (Meta_Feature*)&_CIM_PhysicalElement_SerialNumber,
    (Meta_Feature*)&_CIM_PhysicalElement_Version,
    (Meta_Feature*)&_CIM_PhysicalElement_PartNumber,
    (Meta_Feature*)&_CIM_PhysicalElement_OtherIdentifyingInfo,
    (Meta_Feature*)&_CIM_PhysicalElement_PoweredOn,
    (Meta_Feature*)&_CIM_PhysicalElement_ManufactureDate,
    (Meta_Feature*)&_CIM_PhysicalElement_VendorEquipmentType,
    (Meta_Feature*)&_CIM_PhysicalElement_UserTracking,
    (Meta_Feature*)&_CIM_PhysicalElement_CanBeFRUed,
};

static const Meta_Feature_Local _locals[] =
{
    {0},
    {1},
    {1},
    {0},
    {0},
    {0},
    {0},
    {0},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
    {1},
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Version_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Version_MQ =
{
    { 0 }, /* refs */
    "Version", /* name */
    STRING, /* type */
    0, /* array */
    "2.10.0", /* value */ 
};

extern const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_MQ;

const Meta_Qualifier_Scalar<const char*>
_CIM_PhysicalElement_Description_MQ =
{
    { 0 }, /* refs */
    "Description", /* name */
    STRING, /* type */
    0, /* array */
    "Subclasses of CIM_PhysicalElement define any component of a System that has a distinct physical identity. Instances of this class can be defined as an object that can be seen or touched. All Processes, Files, and LogicalDevices are considered not to be Physical Elements. For example, it is not possible to touch the functionality of a 'modem.' You can touch only the card or package that implements the modem. The same card could also implement a LAN adapter. PhysicalElements are tangible ManagedSystemElements that have a physical manifestation of some sort. \n\nNote that the properties of PhysicalElement describe a hardware entity. Possible replacement (FRU) information is defined by following the ElementFRU association to one or more instances of the ReplacementFRU class. This definition allows a client to determine what hardware can be replaced (FRUed) and what 'spare' parts might be required by a customer or engineer doing the replacement. If it can be instrumented or manually determined that an element actually replaced (FRUed) another, then this can be described in the model using the ElementHasBeenFRUed association.", /* value */ 
};

static const Meta_Qualifier*
_CIM_PhysicalElement_MQA[] =
{
    (Meta_Qualifier*)&_CIM_PhysicalElement_Version_MQ,
    (Meta_Qualifier*)&_CIM_PhysicalElement_Description_MQ,
};

const Meta_Class CIM_PhysicalElement::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_CLASS|CIMPLE_FLAG_ABSTRACT,
    "CIM_PhysicalElement",
    _CIM_PhysicalElement_MQA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_MQA),
    _CIM_PhysicalElement_MFA,
    CIMPLE_ARRAY_SIZE(_CIM_PhysicalElement_MFA),
    sizeof(CIM_PhysicalElement),
    _locals,
    &CIM_ManagedSystemElement::static_meta_class,
    2, /* num_keys */
    0x071A04C4, /* crc */
    0,
};

CIMPLE_NAMESPACE_END

CIMPLE_ID("$Header: /home/cvs/cimple/src/tools/genclass/tests/test8/CIM_PhysicalElement.cpp,v 1.1 2007/03/07 20:16:51 mbrasher-public Exp $");
