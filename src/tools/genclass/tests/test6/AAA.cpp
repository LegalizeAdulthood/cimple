//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "AAA.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Reference _AAA_left;

const Meta_Reference _AAA_left =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_KEY,
    "left",
    &CCC::static_meta_class,
    CIMPLE_OFF(AAA,left)
};

extern const Meta_Reference _AAA_right;

const Meta_Reference _AAA_right =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_KEY,
    "right",
    &DDD::static_meta_class,
    CIMPLE_OFF(AAA,right)
};

static const Meta_Reference _AAA_fool_c =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "c",
    &CCC::static_meta_class,
    CIMPLE_OFF(AAA_fool_method,c)
};

static const Meta_Property _AAA_fool_return_value =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    UINT32,
    0,
    CIMPLE_OFF(AAA_fool_method,return_value)
};

static Meta_Feature* _AAA_fool_meta_features[] =
{
    (Meta_Feature*)&_AAA_fool_c,
    (Meta_Feature*)&_AAA_fool_return_value
};

const Meta_Method AAA_fool_method::static_meta_class =
{
    CIMPLE_FLAG_METHOD,
    "fool",
    _AAA_fool_meta_features,
    CIMPLE_ARRAY_SIZE(_AAA_fool_meta_features),
    sizeof(AAA_fool_method),
    UINT32,
};

static Meta_Feature* _AAA_meta_features[] =
{
    (Meta_Feature*)&_AAA_left,
    (Meta_Feature*)&_AAA_right,
    (Meta_Feature*)&AAA_fool_method::static_meta_class,
};

static const Meta_Feature_Local _locals[] =
{
    {1},
    {1},
    {1},
};

const Meta_Class AAA::static_meta_class =
{
    CIMPLE_FLAG_ASSOCIATION,
    "AAA",
    _AAA_meta_features,
    CIMPLE_ARRAY_SIZE(_AAA_meta_features),
    sizeof(AAA),
    _locals,
    0, /* super_class */ 
    0, /* super_classes */
    0, /* num_super_classes */
    2, /* num_keys */
    0x40EE457B,/* crc */
    0,
};

CIMPLE_NAMESPACE_END

