/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT; THIS FILE WAS AUTOMATICALLY GENERATED BY GENCLASS 1.0.22
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "CCC.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

/*[1302]*/
extern const Meta_Property
_BBB_counter;

/*[1302]*/
extern const Meta_Property
_CCC_key;

/*[1325]*/
const Meta_Property
_CCC_key =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY|CIMPLE_FLAG_READ,
    "key",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    STRING,
    0, /* subscript */
    CIMPLE_OFF(CCC,key),
    0, /* value */
};

/*[1302]*/
extern const Meta_Property
_CCC_bbb;

/*[1325]*/
const Meta_Property
_CCC_bbb =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY|CIMPLE_FLAG_READ,
    "bbb",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    UINT32,
    0, /* subscript */
    CIMPLE_OFF(CCC,bbb),
    0, /* value */
};

/*[1516]*/
static const Meta_Property
_CCC_foo_arg1 =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN,
    "arg1",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    STRING,
    0,
    CIMPLE_OFF(CCC_foo_method,arg1),
    0, /* value */
};

/*[1516]*/
static const Meta_Property
_CCC_foo_arg2 =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN,
    "arg2",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    STRING,
    0,
    CIMPLE_OFF(CCC_foo_method,arg2),
    0, /* value */
};

/*[1669]*/
static const Meta_Property
_CCC_foo_return_value =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    UINT32,
    0,
    CIMPLE_OFF(CCC_foo_method,return_value),
    0, /* value */
};

/*[1645]*/
static Meta_Feature* _CCC_foo_MFA[] =
{
    (Meta_Feature*)(void*)&_CCC_foo_arg1,
    (Meta_Feature*)(void*)&_CCC_foo_arg2,
    (Meta_Feature*)(void*)&_CCC_foo_return_value
};

/*[1847]*/
const Meta_Method
CCC_foo_method::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_METHOD,
    "foo",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _CCC_foo_MFA,
    CIMPLE_ARRAY_SIZE(_CCC_foo_MFA),
    sizeof(CCC_foo_method),
    UINT32,
};

/*[2025]*/
static Meta_Feature* _CCC_MFA[] =
{
    (Meta_Feature*)(void*)&_BBB_counter,
    (Meta_Feature*)(void*)&_CCC_key,
    (Meta_Feature*)(void*)&_CCC_bbb,
    (Meta_Feature*)(void*)&CCC_foo_method::static_meta_class,
};

/*[2072]*/
static const Meta_Feature_Local _locals[] =
{
    {0},
    {1},
    {1},
    {1},
};

/*[2092]*/
const Meta_Class CCC::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_CLASS,
    "CCC",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _CCC_MFA,
    CIMPLE_ARRAY_SIZE(_CCC_MFA),
    sizeof(CCC),
    _locals,
    &BBB::static_meta_class,
    2, /* num_keys */
    0,
};

CIMPLE_NAMESPACE_END

