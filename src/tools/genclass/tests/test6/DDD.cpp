//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "DDD.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern CIMPLE_HIDE const Meta_Property _BBB_counter;

extern CIMPLE_HIDE const Meta_Property _CCC_key;

extern CIMPLE_HIDE const Meta_Property _CCC_bbb;

extern CIMPLE_HIDE const Meta_Property _DDD_ccc;

const Meta_Property _DDD_ccc =
{
    CIMPLE_FLAG_PROPERTY,
    "ccc",
    UINT32,
    0,
    CIMPLE_OFF(DDD,ccc)
};

static const Meta_Property _DDD_goo_arg1 =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN,
    "arg1",
    STRING,
    0,
    CIMPLE_OFF(DDD_goo_method,arg1)
};

static const Meta_Property _DDD_goo_return_value =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    UINT32,
    0,
    CIMPLE_OFF(DDD_goo_method,return_value)
};

static Meta_Feature* _DDD_goo_meta_features[] =
{
    (Meta_Feature*)&_DDD_goo_arg1,
    (Meta_Feature*)&_DDD_goo_return_value
};

const Meta_Method DDD_goo_method::static_meta_class =
{
    CIMPLE_FLAG_METHOD,
    "goo",
    _DDD_goo_meta_features,
    CIMPLE_ARRAY_SIZE(_DDD_goo_meta_features),
    sizeof(DDD_goo_method),
    UINT32,
};

static Meta_Feature* _DDD_meta_features[] =
{
    (Meta_Feature*)&_BBB_counter,
    (Meta_Feature*)&_CCC_key,
    (Meta_Feature*)&_CCC_bbb,
    (Meta_Feature*)&CCC_foo_method::static_meta_class,
    (Meta_Feature*)&_DDD_ccc,
    (Meta_Feature*)&DDD_goo_method::static_meta_class,
};

const Meta_Class DDD::static_meta_class =
{
    CIMPLE_FLAG_CLASS,
    "DDD",
    _DDD_meta_features,
    CIMPLE_ARRAY_SIZE(_DDD_meta_features),
    sizeof(DDD),
    &CCC::static_meta_class,
    2,
    0x0D139C11,
};

CIMPLE_NAMESPACE_END

