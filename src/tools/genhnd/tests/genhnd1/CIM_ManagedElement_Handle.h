//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_CIM_ManagedElement_Handle_h
#define _cimple_CIM_ManagedElement_Handle_h

#include <cimple/cimple.h>
#include "CIM_ManagedElement.h"

CIMPLE_NAMESPACE_BEGIN

class CIM_ManagedElement_Reference : public Reference
{
public:

    typedef CIM_ManagedElement Class;
    typedef CIM_ManagedElement_Reference REFERENCE;

    CIM_ManagedElement_Reference();

    CIM_ManagedElement_Reference(const CIM_ManagedElement_Reference& x);

    CIM_ManagedElement_Reference(CIM_ManagedElement* inst);

    template<class CLASS>
    explicit CIM_ManagedElement_Reference(const CLASS& x);

    ~CIM_ManagedElement_Reference();

    CIM_ManagedElement_Reference& operator=(const CIM_ManagedElement_Reference& x);
};

class CIM_ManagedElement_Handle : public Handle
{
public:

    typedef CIM_ManagedElement Class;
    typedef CIM_ManagedElement_Reference REFERENCE;

    CIM_ManagedElement_Handle();

    CIM_ManagedElement_Handle(const CIM_ManagedElement_Handle& x);

    CIM_ManagedElement_Handle(CIM_ManagedElement* inst);

    template<class CLASS>
    explicit CIM_ManagedElement_Handle(const CLASS& x);

    ~CIM_ManagedElement_Handle();

    CIM_ManagedElement_Handle& operator=(const CIM_ManagedElement_Handle& x);

    // Caption:
    const Property<String>& get_Caption() const;
    void set_Caption(const String& x);
    void clear_Caption();

    // Description:
    const Property<String>& get_Description() const;
    void set_Description(const String& x);
    void clear_Description();

    // ElementName:
    const Property<String>& get_ElementName() const;
    void set_ElementName(const String& x);
    void clear_ElementName();
};

inline CIM_ManagedElement_Reference::CIM_ManagedElement_Reference()
{
    _inst = CIM_ManagedElement::create(true);
}

inline CIM_ManagedElement_Reference::CIM_ManagedElement_Reference(const CIM_ManagedElement_Reference& x) : Reference(x)
{
}

inline CIM_ManagedElement_Reference::CIM_ManagedElement_Reference(CIM_ManagedElement* inst)
{
    _inst = inst;
}

template<class CLASS>
inline CIM_ManagedElement_Reference::CIM_ManagedElement_Reference(const CLASS& x)
{
    _construct(*this, Class::static_meta_class, x);
}

inline CIM_ManagedElement_Reference::~CIM_ManagedElement_Reference()
{
}

inline CIM_ManagedElement_Reference& CIM_ManagedElement_Reference::operator=(const CIM_ManagedElement_Reference& x)
{
    Reference::operator=(x);
    return *this;
}

inline CIM_ManagedElement_Handle::CIM_ManagedElement_Handle()
{
    _inst = CIM_ManagedElement::create(true);
}

inline CIM_ManagedElement_Handle::CIM_ManagedElement_Handle(const CIM_ManagedElement_Handle& x) : Handle(x)
{
}

inline CIM_ManagedElement_Handle::CIM_ManagedElement_Handle(CIM_ManagedElement* inst)
{
    _inst = inst;
}

template<class CLASS>
inline CIM_ManagedElement_Handle::CIM_ManagedElement_Handle(const CLASS& x)
{
    _construct(*this, Class::static_meta_class, x);
}

inline CIM_ManagedElement_Handle::~CIM_ManagedElement_Handle()
{
}

inline CIM_ManagedElement_Handle& CIM_ManagedElement_Handle::operator=(const CIM_ManagedElement_Handle& x)
{
    Handle::operator=(x);
    return *this;
}

inline const Property<String>& CIM_ManagedElement_Handle::get_Caption() const
{
    return ((CIM_ManagedElement*)_inst)->Caption;
}

inline void CIM_ManagedElement_Handle::set_Caption(const String& x)
{
    _cow();
    ((CIM_ManagedElement*)_inst)->Caption.null = false;
    ((CIM_ManagedElement*)_inst)->Caption.value = x;
}

inline void CIM_ManagedElement_Handle::clear_Caption()
{
    _cow();
    ((CIM_ManagedElement*)_inst)->Caption.null = true;
    __clear(((CIM_ManagedElement*)_inst)->Caption.value);
}

inline const Property<String>& CIM_ManagedElement_Handle::get_Description() const
{
    return ((CIM_ManagedElement*)_inst)->Description;
}

inline void CIM_ManagedElement_Handle::set_Description(const String& x)
{
    _cow();
    ((CIM_ManagedElement*)_inst)->Description.null = false;
    ((CIM_ManagedElement*)_inst)->Description.value = x;
}

inline void CIM_ManagedElement_Handle::clear_Description()
{
    _cow();
    ((CIM_ManagedElement*)_inst)->Description.null = true;
    __clear(((CIM_ManagedElement*)_inst)->Description.value);
}

inline const Property<String>& CIM_ManagedElement_Handle::get_ElementName() const
{
    return ((CIM_ManagedElement*)_inst)->ElementName;
}

inline void CIM_ManagedElement_Handle::set_ElementName(const String& x)
{
    _cow();
    ((CIM_ManagedElement*)_inst)->ElementName.null = false;
    ((CIM_ManagedElement*)_inst)->ElementName.value = x;
}

inline void CIM_ManagedElement_Handle::clear_ElementName()
{
    _cow();
    ((CIM_ManagedElement*)_inst)->ElementName.null = true;
    __clear(((CIM_ManagedElement*)_inst)->ElementName.value);
}

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_ManagedElement_Handle_h */
