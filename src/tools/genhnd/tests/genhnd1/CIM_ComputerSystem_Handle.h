//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_CIM_ComputerSystem_Handle_h
#define _cimple_CIM_ComputerSystem_Handle_h

#include <cimple/cimple.h>
#include "CIM_ComputerSystem.h"
#include "CIM_System_Handle.h"

CIMPLE_NAMESPACE_BEGIN

class CIM_ComputerSystem_Reference : public CIM_System_Reference
{
public:

    typedef CIM_ComputerSystem Class;
    typedef CIM_ComputerSystem_Reference REFERENCE;

    CIM_ComputerSystem_Reference();

    CIM_ComputerSystem_Reference(const CIM_ComputerSystem_Reference& x);

    CIM_ComputerSystem_Reference(CIM_ComputerSystem* inst);

    template<class CLASS>
    explicit CIM_ComputerSystem_Reference(const CLASS& x);

    ~CIM_ComputerSystem_Reference();

    CIM_ComputerSystem_Reference& operator=(const CIM_ComputerSystem_Reference& x);
};

class CIM_ComputerSystem_Handle : public CIM_System_Handle
{
public:

    typedef CIM_ComputerSystem Class;
    typedef CIM_ComputerSystem_Reference REFERENCE;

    CIM_ComputerSystem_Handle();

    CIM_ComputerSystem_Handle(const CIM_ComputerSystem_Handle& x);

    CIM_ComputerSystem_Handle(CIM_ComputerSystem* inst);

    template<class CLASS>
    explicit CIM_ComputerSystem_Handle(const CLASS& x);

    ~CIM_ComputerSystem_Handle();

    CIM_ComputerSystem_Handle& operator=(const CIM_ComputerSystem_Handle& x);

    // NameFormat:
    const Property<String>& get_NameFormat() const;
    void set_NameFormat(const String& x);
    void clear_NameFormat();

    // OtherIdentifyingInfo:
    const Property<Array_String>& get_OtherIdentifyingInfo() const;
    void set_OtherIdentifyingInfo(const Array_String& x);
    void clear_OtherIdentifyingInfo();

    // IdentifyingDescriptions:
    const Property<Array_String>& get_IdentifyingDescriptions() const;
    void set_IdentifyingDescriptions(const Array_String& x);
    void clear_IdentifyingDescriptions();

    // Dedicated:
    const Property<Array_uint16>& get_Dedicated() const;
    void set_Dedicated(const Array_uint16& x);
    void clear_Dedicated();

    // OtherDedicatedDescriptions:
    const Property<Array_String>& get_OtherDedicatedDescriptions() const;
    void set_OtherDedicatedDescriptions(const Array_String& x);
    void clear_OtherDedicatedDescriptions();

    // ResetCapability:
    const Property<uint16>& get_ResetCapability() const;
    void set_ResetCapability(const uint16& x);
    void clear_ResetCapability();

    // PowerManagementCapabilities:
    const Property<Array_uint16>& get_PowerManagementCapabilities() const;
    void set_PowerManagementCapabilities(const Array_uint16& x);
    void clear_PowerManagementCapabilities();
};

inline CIM_ComputerSystem_Reference::CIM_ComputerSystem_Reference()
{
    _inst = CIM_ComputerSystem::create(true);
}

inline CIM_ComputerSystem_Reference::CIM_ComputerSystem_Reference(const CIM_ComputerSystem_Reference& x) : CIM_System_Reference(x)
{
}

inline CIM_ComputerSystem_Reference::CIM_ComputerSystem_Reference(CIM_ComputerSystem* inst)
{
    _inst = inst;
}

template<class CLASS>
inline CIM_ComputerSystem_Reference::CIM_ComputerSystem_Reference(const CLASS& x)
{
    _construct(*this, Class::static_meta_class, x);
}

inline CIM_ComputerSystem_Reference::~CIM_ComputerSystem_Reference()
{
}

inline CIM_ComputerSystem_Reference& CIM_ComputerSystem_Reference::operator=(const CIM_ComputerSystem_Reference& x)
{
    CIM_System_Reference::operator=(x);
    return *this;
}

inline CIM_ComputerSystem_Handle::CIM_ComputerSystem_Handle()
{
    _inst = CIM_ComputerSystem::create(true);
}

inline CIM_ComputerSystem_Handle::CIM_ComputerSystem_Handle(const CIM_ComputerSystem_Handle& x) : CIM_System_Handle(x)
{
}

inline CIM_ComputerSystem_Handle::CIM_ComputerSystem_Handle(CIM_ComputerSystem* inst)
{
    _inst = inst;
}

template<class CLASS>
inline CIM_ComputerSystem_Handle::CIM_ComputerSystem_Handle(const CLASS& x)
{
    _construct(*this, Class::static_meta_class, x);
}

inline CIM_ComputerSystem_Handle::~CIM_ComputerSystem_Handle()
{
}

inline CIM_ComputerSystem_Handle& CIM_ComputerSystem_Handle::operator=(const CIM_ComputerSystem_Handle& x)
{
    CIM_System_Handle::operator=(x);
    return *this;
}

inline const Property<String>& CIM_ComputerSystem_Handle::get_NameFormat() const
{
    return ((CIM_ComputerSystem*)_inst)->NameFormat;
}

inline void CIM_ComputerSystem_Handle::set_NameFormat(const String& x)
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->NameFormat.null = false;
    ((CIM_ComputerSystem*)_inst)->NameFormat.value = x;
}

inline void CIM_ComputerSystem_Handle::clear_NameFormat()
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->NameFormat.null = true;
    __clear(((CIM_ComputerSystem*)_inst)->NameFormat.value);
}

inline const Property<Array_String>& CIM_ComputerSystem_Handle::get_OtherIdentifyingInfo() const
{
    return ((CIM_ComputerSystem*)_inst)->OtherIdentifyingInfo;
}

inline void CIM_ComputerSystem_Handle::set_OtherIdentifyingInfo(const Array_String& x)
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->OtherIdentifyingInfo.null = false;
    ((CIM_ComputerSystem*)_inst)->OtherIdentifyingInfo.value = x;
}

inline void CIM_ComputerSystem_Handle::clear_OtherIdentifyingInfo()
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->OtherIdentifyingInfo.null = true;
    __clear(((CIM_ComputerSystem*)_inst)->OtherIdentifyingInfo.value);
}

inline const Property<Array_String>& CIM_ComputerSystem_Handle::get_IdentifyingDescriptions() const
{
    return ((CIM_ComputerSystem*)_inst)->IdentifyingDescriptions;
}

inline void CIM_ComputerSystem_Handle::set_IdentifyingDescriptions(const Array_String& x)
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->IdentifyingDescriptions.null = false;
    ((CIM_ComputerSystem*)_inst)->IdentifyingDescriptions.value = x;
}

inline void CIM_ComputerSystem_Handle::clear_IdentifyingDescriptions()
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->IdentifyingDescriptions.null = true;
    __clear(((CIM_ComputerSystem*)_inst)->IdentifyingDescriptions.value);
}

inline const Property<Array_uint16>& CIM_ComputerSystem_Handle::get_Dedicated() const
{
    return ((CIM_ComputerSystem*)_inst)->Dedicated;
}

inline void CIM_ComputerSystem_Handle::set_Dedicated(const Array_uint16& x)
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->Dedicated.null = false;
    ((CIM_ComputerSystem*)_inst)->Dedicated.value = x;
}

inline void CIM_ComputerSystem_Handle::clear_Dedicated()
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->Dedicated.null = true;
    __clear(((CIM_ComputerSystem*)_inst)->Dedicated.value);
}

inline const Property<Array_String>& CIM_ComputerSystem_Handle::get_OtherDedicatedDescriptions() const
{
    return ((CIM_ComputerSystem*)_inst)->OtherDedicatedDescriptions;
}

inline void CIM_ComputerSystem_Handle::set_OtherDedicatedDescriptions(const Array_String& x)
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->OtherDedicatedDescriptions.null = false;
    ((CIM_ComputerSystem*)_inst)->OtherDedicatedDescriptions.value = x;
}

inline void CIM_ComputerSystem_Handle::clear_OtherDedicatedDescriptions()
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->OtherDedicatedDescriptions.null = true;
    __clear(((CIM_ComputerSystem*)_inst)->OtherDedicatedDescriptions.value);
}

inline const Property<uint16>& CIM_ComputerSystem_Handle::get_ResetCapability() const
{
    return ((CIM_ComputerSystem*)_inst)->ResetCapability;
}

inline void CIM_ComputerSystem_Handle::set_ResetCapability(const uint16& x)
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->ResetCapability.null = false;
    ((CIM_ComputerSystem*)_inst)->ResetCapability.value = x;
}

inline void CIM_ComputerSystem_Handle::clear_ResetCapability()
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->ResetCapability.null = true;
    __clear(((CIM_ComputerSystem*)_inst)->ResetCapability.value);
}

inline const Property<Array_uint16>& CIM_ComputerSystem_Handle::get_PowerManagementCapabilities() const
{
    return ((CIM_ComputerSystem*)_inst)->PowerManagementCapabilities;
}

inline void CIM_ComputerSystem_Handle::set_PowerManagementCapabilities(const Array_uint16& x)
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->PowerManagementCapabilities.null = false;
    ((CIM_ComputerSystem*)_inst)->PowerManagementCapabilities.value = x;
}

inline void CIM_ComputerSystem_Handle::clear_PowerManagementCapabilities()
{
    _cow();
    ((CIM_ComputerSystem*)_inst)->PowerManagementCapabilities.null = true;
    __clear(((CIM_ComputerSystem*)_inst)->PowerManagementCapabilities.value);
}

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_ComputerSystem_Handle_h */
