//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_CIM_ManagedSystemElement_Handle_h
#define _cimple_CIM_ManagedSystemElement_Handle_h

#include <cimple/cimple.h>
#include "CIM_ManagedSystemElement.h"
#include "CIM_ManagedElement_Handle.h"

CIMPLE_NAMESPACE_BEGIN

class CIM_ManagedSystemElement_Reference : public CIM_ManagedElement_Reference
{
public:

    typedef CIM_ManagedSystemElement Class;
    typedef CIM_ManagedSystemElement_Reference REFERENCE;

    CIM_ManagedSystemElement_Reference();

    CIM_ManagedSystemElement_Reference(const CIM_ManagedSystemElement_Reference& x);

    CIM_ManagedSystemElement_Reference(CIM_ManagedSystemElement* inst);

    template<class CLASS>
    explicit CIM_ManagedSystemElement_Reference(const CLASS& x);

    ~CIM_ManagedSystemElement_Reference();

    CIM_ManagedSystemElement_Reference& operator=(const CIM_ManagedSystemElement_Reference& x);
};

class CIM_ManagedSystemElement_Handle : public CIM_ManagedElement_Handle
{
public:

    typedef CIM_ManagedSystemElement Class;
    typedef CIM_ManagedSystemElement_Reference REFERENCE;

    CIM_ManagedSystemElement_Handle();

    CIM_ManagedSystemElement_Handle(const CIM_ManagedSystemElement_Handle& x);

    CIM_ManagedSystemElement_Handle(CIM_ManagedSystemElement* inst);

    template<class CLASS>
    explicit CIM_ManagedSystemElement_Handle(const CLASS& x);

    ~CIM_ManagedSystemElement_Handle();

    CIM_ManagedSystemElement_Handle& operator=(const CIM_ManagedSystemElement_Handle& x);

    // InstallDate:
    const Property<Datetime>& get_InstallDate() const;
    void set_InstallDate(const Datetime& x);
    void clear_InstallDate();

    // Name:
    const Property<String>& get_Name() const;
    void set_Name(const String& x);
    void clear_Name();

    // OperationalStatus:
    const Property<Array_uint16>& get_OperationalStatus() const;
    void set_OperationalStatus(const Array_uint16& x);
    void clear_OperationalStatus();

    // StatusDescriptions:
    const Property<Array_String>& get_StatusDescriptions() const;
    void set_StatusDescriptions(const Array_String& x);
    void clear_StatusDescriptions();

    // Status:
    const Property<String>& get_Status() const;
    void set_Status(const String& x);
    void clear_Status();

    // HealthState:
    const Property<uint16>& get_HealthState() const;
    void set_HealthState(const uint16& x);
    void clear_HealthState();
};

inline CIM_ManagedSystemElement_Reference::CIM_ManagedSystemElement_Reference()
{
    _inst = CIM_ManagedSystemElement::create(true);
}

inline CIM_ManagedSystemElement_Reference::CIM_ManagedSystemElement_Reference(const CIM_ManagedSystemElement_Reference& x) : CIM_ManagedElement_Reference(x)
{
}

inline CIM_ManagedSystemElement_Reference::CIM_ManagedSystemElement_Reference(CIM_ManagedSystemElement* inst)
{
    _inst = inst;
}

template<class CLASS>
inline CIM_ManagedSystemElement_Reference::CIM_ManagedSystemElement_Reference(const CLASS& x)
{
    _construct(*this, Class::static_meta_class, x);
}

inline CIM_ManagedSystemElement_Reference::~CIM_ManagedSystemElement_Reference()
{
}

inline CIM_ManagedSystemElement_Reference& CIM_ManagedSystemElement_Reference::operator=(const CIM_ManagedSystemElement_Reference& x)
{
    CIM_ManagedElement_Reference::operator=(x);
    return *this;
}

inline CIM_ManagedSystemElement_Handle::CIM_ManagedSystemElement_Handle()
{
    _inst = CIM_ManagedSystemElement::create(true);
}

inline CIM_ManagedSystemElement_Handle::CIM_ManagedSystemElement_Handle(const CIM_ManagedSystemElement_Handle& x) : CIM_ManagedElement_Handle(x)
{
}

inline CIM_ManagedSystemElement_Handle::CIM_ManagedSystemElement_Handle(CIM_ManagedSystemElement* inst)
{
    _inst = inst;
}

template<class CLASS>
inline CIM_ManagedSystemElement_Handle::CIM_ManagedSystemElement_Handle(const CLASS& x)
{
    _construct(*this, Class::static_meta_class, x);
}

inline CIM_ManagedSystemElement_Handle::~CIM_ManagedSystemElement_Handle()
{
}

inline CIM_ManagedSystemElement_Handle& CIM_ManagedSystemElement_Handle::operator=(const CIM_ManagedSystemElement_Handle& x)
{
    CIM_ManagedElement_Handle::operator=(x);
    return *this;
}

inline const Property<Datetime>& CIM_ManagedSystemElement_Handle::get_InstallDate() const
{
    return ((CIM_ManagedSystemElement*)_inst)->InstallDate;
}

inline void CIM_ManagedSystemElement_Handle::set_InstallDate(const Datetime& x)
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->InstallDate.null = false;
    ((CIM_ManagedSystemElement*)_inst)->InstallDate.value = x;
}

inline void CIM_ManagedSystemElement_Handle::clear_InstallDate()
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->InstallDate.null = true;
    __clear(((CIM_ManagedSystemElement*)_inst)->InstallDate.value);
}

inline const Property<String>& CIM_ManagedSystemElement_Handle::get_Name() const
{
    return ((CIM_ManagedSystemElement*)_inst)->Name;
}

inline void CIM_ManagedSystemElement_Handle::set_Name(const String& x)
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->Name.null = false;
    ((CIM_ManagedSystemElement*)_inst)->Name.value = x;
}

inline void CIM_ManagedSystemElement_Handle::clear_Name()
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->Name.null = true;
    __clear(((CIM_ManagedSystemElement*)_inst)->Name.value);
}

inline const Property<Array_uint16>& CIM_ManagedSystemElement_Handle::get_OperationalStatus() const
{
    return ((CIM_ManagedSystemElement*)_inst)->OperationalStatus;
}

inline void CIM_ManagedSystemElement_Handle::set_OperationalStatus(const Array_uint16& x)
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->OperationalStatus.null = false;
    ((CIM_ManagedSystemElement*)_inst)->OperationalStatus.value = x;
}

inline void CIM_ManagedSystemElement_Handle::clear_OperationalStatus()
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->OperationalStatus.null = true;
    __clear(((CIM_ManagedSystemElement*)_inst)->OperationalStatus.value);
}

inline const Property<Array_String>& CIM_ManagedSystemElement_Handle::get_StatusDescriptions() const
{
    return ((CIM_ManagedSystemElement*)_inst)->StatusDescriptions;
}

inline void CIM_ManagedSystemElement_Handle::set_StatusDescriptions(const Array_String& x)
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->StatusDescriptions.null = false;
    ((CIM_ManagedSystemElement*)_inst)->StatusDescriptions.value = x;
}

inline void CIM_ManagedSystemElement_Handle::clear_StatusDescriptions()
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->StatusDescriptions.null = true;
    __clear(((CIM_ManagedSystemElement*)_inst)->StatusDescriptions.value);
}

inline const Property<String>& CIM_ManagedSystemElement_Handle::get_Status() const
{
    return ((CIM_ManagedSystemElement*)_inst)->Status;
}

inline void CIM_ManagedSystemElement_Handle::set_Status(const String& x)
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->Status.null = false;
    ((CIM_ManagedSystemElement*)_inst)->Status.value = x;
}

inline void CIM_ManagedSystemElement_Handle::clear_Status()
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->Status.null = true;
    __clear(((CIM_ManagedSystemElement*)_inst)->Status.value);
}

inline const Property<uint16>& CIM_ManagedSystemElement_Handle::get_HealthState() const
{
    return ((CIM_ManagedSystemElement*)_inst)->HealthState;
}

inline void CIM_ManagedSystemElement_Handle::set_HealthState(const uint16& x)
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->HealthState.null = false;
    ((CIM_ManagedSystemElement*)_inst)->HealthState.value = x;
}

inline void CIM_ManagedSystemElement_Handle::clear_HealthState()
{
    _cow();
    ((CIM_ManagedSystemElement*)_inst)->HealthState.null = true;
    __clear(((CIM_ManagedSystemElement*)_inst)->HealthState.value);
}

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_ManagedSystemElement_Handle_h */
