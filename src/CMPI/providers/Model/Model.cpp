//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "Model.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

CIMPLE_HIDE
extern const Meta_Property _Model_k1;

const Meta_Property _Model_k1 =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY,
    "k1",
    STRING,
    0,
    CIMPLE_OFF(Model,k1)
};

CIMPLE_HIDE
extern const Meta_Property _Model_k2;

const Meta_Property _Model_k2 =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY,
    "k2",
    UINT32,
    0,
    CIMPLE_OFF(Model,k2)
};

CIMPLE_HIDE
extern const Meta_Property _Model_k3;

const Meta_Property _Model_k3 =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_KEY,
    "k3",
    BOOLEAN,
    0,
    CIMPLE_OFF(Model,k3)
};

CIMPLE_HIDE
extern const Meta_Property _Model_prop1;

const Meta_Property _Model_prop1 =
{
    CIMPLE_FLAG_PROPERTY,
    "prop1",
    STRING,
    0,
    CIMPLE_OFF(Model,prop1)
};

CIMPLE_HIDE
extern const Meta_Property _Model_prop2;

const Meta_Property _Model_prop2 =
{
    CIMPLE_FLAG_PROPERTY,
    "prop2",
    STRING,
    0,
    CIMPLE_OFF(Model,prop2)
};

CIMPLE_HIDE
extern const Meta_Property _Model_prop3;

const Meta_Property _Model_prop3 =
{
    CIMPLE_FLAG_PROPERTY,
    "prop3",
    STRING,
    0,
    CIMPLE_OFF(Model,prop3)
};

CIMPLE_HIDE
extern const Meta_Property _Model_prop4;

const Meta_Property _Model_prop4 =
{
    CIMPLE_FLAG_PROPERTY,
    "prop4",
    STRING,
    0,
    CIMPLE_OFF(Model,prop4)
};

CIMPLE_HIDE
extern const Meta_Property _Model_prop5;

const Meta_Property _Model_prop5 =
{
    CIMPLE_FLAG_PROPERTY,
    "prop5",
    STRING,
    0,
    CIMPLE_OFF(Model,prop5)
};

static const Meta_Property _Model_stub_w =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN,
    "w",
    STRING,
    0,
    CIMPLE_OFF(Model_stub_method,w)
};

static const Meta_Property _Model_stub_x =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN,
    "x",
    UINT32,
    0,
    CIMPLE_OFF(Model_stub_method,x)
};

static const Meta_Property _Model_stub_y =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN|CIMPLE_FLAG_OUT,
    "y",
    BOOLEAN,
    0,
    CIMPLE_OFF(Model_stub_method,y)
};

static const Meta_Property _Model_stub_z =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN|CIMPLE_FLAG_OUT,
    "z",
    REAL32,
    0,
    CIMPLE_OFF(Model_stub_method,z)
};

static const Meta_Property _Model_stub_return_value =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    STRING,
    0,
    CIMPLE_OFF(Model_stub_method,return_value)
};

static Meta_Feature* _Model_stub_meta_features[] =
{
    (Meta_Feature*)&_Model_stub_w,
    (Meta_Feature*)&_Model_stub_x,
    (Meta_Feature*)&_Model_stub_y,
    (Meta_Feature*)&_Model_stub_z,
    (Meta_Feature*)&_Model_stub_return_value
};

const Meta_Method Model_stub_method::static_meta_class =
{
    CIMPLE_FLAG_METHOD,
    "stub",
    _Model_stub_meta_features,
    CIMPLE_ARRAY_SIZE(_Model_stub_meta_features),
    sizeof(Model_stub_method),
    STRING,
};

static const Meta_Property _Model_stub2_w =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN,
    "w",
    STRING,
    0,
    CIMPLE_OFF(Model_stub2_method,w)
};

static const Meta_Property _Model_stub2_x =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN,
    "x",
    UINT32,
    0,
    CIMPLE_OFF(Model_stub2_method,x)
};

static const Meta_Property _Model_stub2_y =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN|CIMPLE_FLAG_OUT,
    "y",
    BOOLEAN,
    0,
    CIMPLE_OFF(Model_stub2_method,y)
};

static const Meta_Property _Model_stub2_z =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_IN|CIMPLE_FLAG_OUT,
    "z",
    REAL32,
    0,
    CIMPLE_OFF(Model_stub2_method,z)
};

static const Meta_Property _Model_stub2_return_value =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    STRING,
    0,
    CIMPLE_OFF(Model_stub2_method,return_value)
};

static Meta_Feature* _Model_stub2_meta_features[] =
{
    (Meta_Feature*)&_Model_stub2_w,
    (Meta_Feature*)&_Model_stub2_x,
    (Meta_Feature*)&_Model_stub2_y,
    (Meta_Feature*)&_Model_stub2_z,
    (Meta_Feature*)&_Model_stub2_return_value
};

const Meta_Method Model_stub2_method::static_meta_class =
{
    CIMPLE_FLAG_METHOD|CIMPLE_FLAG_STATIC,
    "stub2",
    _Model_stub2_meta_features,
    CIMPLE_ARRAY_SIZE(_Model_stub2_meta_features),
    sizeof(Model_stub2_method),
    STRING,
};

static Meta_Feature* _Model_meta_features[] =
{
    (Meta_Feature*)&_Model_k1,
    (Meta_Feature*)&_Model_k2,
    (Meta_Feature*)&_Model_k3,
    (Meta_Feature*)&_Model_prop1,
    (Meta_Feature*)&_Model_prop2,
    (Meta_Feature*)&_Model_prop3,
    (Meta_Feature*)&_Model_prop4,
    (Meta_Feature*)&_Model_prop5,
    (Meta_Feature*)&Model_stub_method::static_meta_class,
    (Meta_Feature*)&Model_stub2_method::static_meta_class,
};

const Meta_Class Model::static_meta_class =
{
    CIMPLE_FLAG_CLASS,
    "Model",
    _Model_meta_features,
    CIMPLE_ARRAY_SIZE(_Model_meta_features),
    sizeof(Model),
    0,
    3,
    0xC65A6DF4,
};

CIMPLE_NAMESPACE_END

