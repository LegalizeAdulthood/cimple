//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENHND.
//
//==============================================================================

#ifndef _cimple_CIM_ListenerDestination_Hnd
#define _cimple_CIM_ListenerDestination_Hnd

#include <cimple/cimple.h>
#include "CIM_ListenerDestination.h"
#include "CIM_ManagedElement_Hnd.h"

CIMPLE_NAMESPACE_BEGIN

class CIM_ListenerDestination_Ref : public CIM_ManagedElement_Ref
{
public:
    typedef CIM_ListenerDestination Class;
    CIM_ListenerDestination_Ref();
    CIM_ListenerDestination_Ref(const CIM_ListenerDestination_Ref& x);
    CIM_ListenerDestination_Ref(CIM_ListenerDestination* inst);
    explicit CIM_ListenerDestination_Ref(const Instance_Ref& x);
    ~CIM_ListenerDestination_Ref();
    CIM_ListenerDestination_Ref& operator=(const CIM_ListenerDestination_Ref& x);
    static bool is_a(const Instance_Ref& x);

    // SystemCreationClassName:
    const String& SystemCreationClassName_value() const;
    void SystemCreationClassName_value(const String& x);
    bool SystemCreationClassName_null() const;
    void SystemCreationClassName_clear();

    // SystemName:
    const String& SystemName_value() const;
    void SystemName_value(const String& x);
    bool SystemName_null() const;
    void SystemName_clear();

    // CreationClassName:
    const String& CreationClassName_value() const;
    void CreationClassName_value(const String& x);
    bool CreationClassName_null() const;
    void CreationClassName_clear();

    // Name:
    const String& Name_value() const;
    void Name_value(const String& x);
    bool Name_null() const;
    void Name_clear();

protected:
    CIM_ListenerDestination_Ref(const Meta_Class* mc);
    CIM_ListenerDestination_Ref(const Meta_Class* mc, const Instance_Ref& x);
};

class CIM_ListenerDestination_Hnd : public CIM_ManagedElement_Hnd
{
public:
    typedef CIM_ListenerDestination Class;
    CIM_ListenerDestination_Hnd();
    CIM_ListenerDestination_Hnd(const CIM_ListenerDestination_Hnd& x);
    CIM_ListenerDestination_Hnd(CIM_ListenerDestination* inst);
    explicit CIM_ListenerDestination_Hnd(const Instance_Hnd& x);
    ~CIM_ListenerDestination_Hnd();
    CIM_ListenerDestination_Hnd& operator=(const CIM_ListenerDestination_Hnd& x);
    static bool is_a(const Instance_Hnd& x);
    CIM_ListenerDestination_Ref reference() const;

    // SystemCreationClassName:
    const String& SystemCreationClassName_value() const;
    void SystemCreationClassName_value(const String& x);
    bool SystemCreationClassName_null() const;
    void SystemCreationClassName_clear();

    // SystemName:
    const String& SystemName_value() const;
    void SystemName_value(const String& x);
    bool SystemName_null() const;
    void SystemName_clear();

    // CreationClassName:
    const String& CreationClassName_value() const;
    void CreationClassName_value(const String& x);
    bool CreationClassName_null() const;
    void CreationClassName_clear();

    // Name:
    const String& Name_value() const;
    void Name_value(const String& x);
    bool Name_null() const;
    void Name_clear();

    // PersistenceType:
    const uint16& PersistenceType_value() const;
    void PersistenceType_value(const uint16& x);
    bool PersistenceType_null() const;
    void PersistenceType_clear();

    // OtherPersistenceType:
    const String& OtherPersistenceType_value() const;
    void OtherPersistenceType_value(const String& x);
    bool OtherPersistenceType_null() const;
    void OtherPersistenceType_clear();

protected:
    CIM_ListenerDestination_Hnd(const Meta_Class* mc);
    CIM_ListenerDestination_Hnd(const Meta_Class* mc, const Instance_Hnd& x);
};

inline CIM_ListenerDestination_Ref::CIM_ListenerDestination_Ref() :
    CIM_ManagedElement_Ref(&CIM_ListenerDestination::static_meta_class)
{
}

inline CIM_ListenerDestination_Ref::CIM_ListenerDestination_Ref(const CIM_ListenerDestination_Ref& x) :
    CIM_ManagedElement_Ref(x)
{
}

inline CIM_ListenerDestination_Ref::CIM_ListenerDestination_Ref(CIM_ListenerDestination* inst) :
    CIM_ManagedElement_Ref((CIM_ManagedElement*)inst)
{
}

inline CIM_ListenerDestination_Ref::CIM_ListenerDestination_Ref(const Instance_Ref& x) : 
    CIM_ManagedElement_Ref(&CIM_ListenerDestination::static_meta_class, x)
{
}

inline CIM_ListenerDestination_Ref::CIM_ListenerDestination_Ref(const Meta_Class* mc) : CIM_ManagedElement_Ref(mc)
{
}

inline CIM_ListenerDestination_Ref::CIM_ListenerDestination_Ref(const Meta_Class* mc, const Instance_Ref& x) : CIM_ManagedElement_Ref(mc, x)
{
}

inline CIM_ListenerDestination_Ref::~CIM_ListenerDestination_Ref()
{
}

inline CIM_ListenerDestination_Ref& CIM_ListenerDestination_Ref::operator=(const CIM_ListenerDestination_Ref& x)
{
    CIM_ManagedElement_Ref::operator=(x);
    return *this;
}

inline bool CIM_ListenerDestination_Ref::is_a(const Instance_Ref& x)
{
    return is_subclass(&CIM_ListenerDestination::static_meta_class, x.meta_class());
}

inline const String& CIM_ListenerDestination_Ref::SystemCreationClassName_value() const
{
    if (((Class*)_inst)->SystemCreationClassName.null)
        _throw_null_access("SystemCreationClassName");
   return ((Class*)_inst)->SystemCreationClassName.value;
}

inline void CIM_ListenerDestination_Ref::SystemCreationClassName_value(const String& x)
{
    _cow();
   ((Class*)_inst)->SystemCreationClassName.value = x;
   ((Class*)_inst)->SystemCreationClassName.null = false;
}

inline bool CIM_ListenerDestination_Ref::SystemCreationClassName_null() const
{
   return ((Class*)_inst)->SystemCreationClassName.null;
}

inline void CIM_ListenerDestination_Ref::SystemCreationClassName_clear()
{
    _cow();
    __clear(((Class*)_inst)->SystemCreationClassName.value);
    ((Class*)_inst)->SystemCreationClassName.null = true;;
}

inline const String& CIM_ListenerDestination_Ref::SystemName_value() const
{
    if (((Class*)_inst)->SystemName.null)
        _throw_null_access("SystemName");
   return ((Class*)_inst)->SystemName.value;
}

inline void CIM_ListenerDestination_Ref::SystemName_value(const String& x)
{
    _cow();
   ((Class*)_inst)->SystemName.value = x;
   ((Class*)_inst)->SystemName.null = false;
}

inline bool CIM_ListenerDestination_Ref::SystemName_null() const
{
   return ((Class*)_inst)->SystemName.null;
}

inline void CIM_ListenerDestination_Ref::SystemName_clear()
{
    _cow();
    __clear(((Class*)_inst)->SystemName.value);
    ((Class*)_inst)->SystemName.null = true;;
}

inline const String& CIM_ListenerDestination_Ref::CreationClassName_value() const
{
    if (((Class*)_inst)->CreationClassName.null)
        _throw_null_access("CreationClassName");
   return ((Class*)_inst)->CreationClassName.value;
}

inline void CIM_ListenerDestination_Ref::CreationClassName_value(const String& x)
{
    _cow();
   ((Class*)_inst)->CreationClassName.value = x;
   ((Class*)_inst)->CreationClassName.null = false;
}

inline bool CIM_ListenerDestination_Ref::CreationClassName_null() const
{
   return ((Class*)_inst)->CreationClassName.null;
}

inline void CIM_ListenerDestination_Ref::CreationClassName_clear()
{
    _cow();
    __clear(((Class*)_inst)->CreationClassName.value);
    ((Class*)_inst)->CreationClassName.null = true;;
}

inline const String& CIM_ListenerDestination_Ref::Name_value() const
{
    if (((Class*)_inst)->Name.null)
        _throw_null_access("Name");
   return ((Class*)_inst)->Name.value;
}

inline void CIM_ListenerDestination_Ref::Name_value(const String& x)
{
    _cow();
   ((Class*)_inst)->Name.value = x;
   ((Class*)_inst)->Name.null = false;
}

inline bool CIM_ListenerDestination_Ref::Name_null() const
{
   return ((Class*)_inst)->Name.null;
}

inline void CIM_ListenerDestination_Ref::Name_clear()
{
    _cow();
    __clear(((Class*)_inst)->Name.value);
    ((Class*)_inst)->Name.null = true;;
}

inline CIM_ListenerDestination_Hnd::CIM_ListenerDestination_Hnd() :
    CIM_ManagedElement_Hnd(&CIM_ListenerDestination::static_meta_class)
{
}

inline CIM_ListenerDestination_Hnd::CIM_ListenerDestination_Hnd(const CIM_ListenerDestination_Hnd& x) :
    CIM_ManagedElement_Hnd(x)
{
}

inline CIM_ListenerDestination_Hnd::CIM_ListenerDestination_Hnd(CIM_ListenerDestination* inst) :
    CIM_ManagedElement_Hnd((CIM_ManagedElement*)inst)
{
}

inline CIM_ListenerDestination_Hnd::CIM_ListenerDestination_Hnd(const Instance_Hnd& x) : 
    CIM_ManagedElement_Hnd(&CIM_ListenerDestination::static_meta_class, x)
{
}

inline CIM_ListenerDestination_Hnd::CIM_ListenerDestination_Hnd(const Meta_Class* mc) : CIM_ManagedElement_Hnd(mc)
{
}

inline CIM_ListenerDestination_Hnd::CIM_ListenerDestination_Hnd(const Meta_Class* mc, const Instance_Hnd& x) : CIM_ManagedElement_Hnd(mc, x)
{
}

inline CIM_ListenerDestination_Hnd::~CIM_ListenerDestination_Hnd()
{
}

inline CIM_ListenerDestination_Hnd& CIM_ListenerDestination_Hnd::operator=(const CIM_ListenerDestination_Hnd& x)
{
    CIM_ManagedElement_Hnd::operator=(x);
    return *this;
}

inline bool CIM_ListenerDestination_Hnd::is_a(const Instance_Hnd& x)
{
    return is_subclass(&CIM_ListenerDestination::static_meta_class, x.meta_class());
}

inline CIM_ListenerDestination_Ref CIM_ListenerDestination_Hnd::reference() const
{
    return CIM_ListenerDestination_Ref((CIM_ListenerDestination*)key_clone(_inst));
}

inline const String& CIM_ListenerDestination_Hnd::SystemCreationClassName_value() const
{
    if (((Class*)_inst)->SystemCreationClassName.null)
        _throw_null_access("SystemCreationClassName");
   return ((Class*)_inst)->SystemCreationClassName.value;
}

inline void CIM_ListenerDestination_Hnd::SystemCreationClassName_value(const String& x)
{
    _cow();
   ((Class*)_inst)->SystemCreationClassName.value = x;
   ((Class*)_inst)->SystemCreationClassName.null = false;
}

inline bool CIM_ListenerDestination_Hnd::SystemCreationClassName_null() const
{
   return ((Class*)_inst)->SystemCreationClassName.null;
}

inline void CIM_ListenerDestination_Hnd::SystemCreationClassName_clear()
{
    _cow();
    __clear(((Class*)_inst)->SystemCreationClassName.value);
    ((Class*)_inst)->SystemCreationClassName.null = true;;
}

inline const String& CIM_ListenerDestination_Hnd::SystemName_value() const
{
    if (((Class*)_inst)->SystemName.null)
        _throw_null_access("SystemName");
   return ((Class*)_inst)->SystemName.value;
}

inline void CIM_ListenerDestination_Hnd::SystemName_value(const String& x)
{
    _cow();
   ((Class*)_inst)->SystemName.value = x;
   ((Class*)_inst)->SystemName.null = false;
}

inline bool CIM_ListenerDestination_Hnd::SystemName_null() const
{
   return ((Class*)_inst)->SystemName.null;
}

inline void CIM_ListenerDestination_Hnd::SystemName_clear()
{
    _cow();
    __clear(((Class*)_inst)->SystemName.value);
    ((Class*)_inst)->SystemName.null = true;;
}

inline const String& CIM_ListenerDestination_Hnd::CreationClassName_value() const
{
    if (((Class*)_inst)->CreationClassName.null)
        _throw_null_access("CreationClassName");
   return ((Class*)_inst)->CreationClassName.value;
}

inline void CIM_ListenerDestination_Hnd::CreationClassName_value(const String& x)
{
    _cow();
   ((Class*)_inst)->CreationClassName.value = x;
   ((Class*)_inst)->CreationClassName.null = false;
}

inline bool CIM_ListenerDestination_Hnd::CreationClassName_null() const
{
   return ((Class*)_inst)->CreationClassName.null;
}

inline void CIM_ListenerDestination_Hnd::CreationClassName_clear()
{
    _cow();
    __clear(((Class*)_inst)->CreationClassName.value);
    ((Class*)_inst)->CreationClassName.null = true;;
}

inline const String& CIM_ListenerDestination_Hnd::Name_value() const
{
    if (((Class*)_inst)->Name.null)
        _throw_null_access("Name");
   return ((Class*)_inst)->Name.value;
}

inline void CIM_ListenerDestination_Hnd::Name_value(const String& x)
{
    _cow();
   ((Class*)_inst)->Name.value = x;
   ((Class*)_inst)->Name.null = false;
}

inline bool CIM_ListenerDestination_Hnd::Name_null() const
{
   return ((Class*)_inst)->Name.null;
}

inline void CIM_ListenerDestination_Hnd::Name_clear()
{
    _cow();
    __clear(((Class*)_inst)->Name.value);
    ((Class*)_inst)->Name.null = true;;
}

inline const uint16& CIM_ListenerDestination_Hnd::PersistenceType_value() const
{
    if (((Class*)_inst)->PersistenceType.null)
        _throw_null_access("PersistenceType");
   return ((Class*)_inst)->PersistenceType.value;
}

inline void CIM_ListenerDestination_Hnd::PersistenceType_value(const uint16& x)
{
    _cow();
   ((Class*)_inst)->PersistenceType.value = x;
   ((Class*)_inst)->PersistenceType.null = false;
}

inline bool CIM_ListenerDestination_Hnd::PersistenceType_null() const
{
   return ((Class*)_inst)->PersistenceType.null;
}

inline void CIM_ListenerDestination_Hnd::PersistenceType_clear()
{
    _cow();
    __clear(((Class*)_inst)->PersistenceType.value);
    ((Class*)_inst)->PersistenceType.null = true;;
}

inline const String& CIM_ListenerDestination_Hnd::OtherPersistenceType_value() const
{
    if (((Class*)_inst)->OtherPersistenceType.null)
        _throw_null_access("OtherPersistenceType");
   return ((Class*)_inst)->OtherPersistenceType.value;
}

inline void CIM_ListenerDestination_Hnd::OtherPersistenceType_value(const String& x)
{
    _cow();
   ((Class*)_inst)->OtherPersistenceType.value = x;
   ((Class*)_inst)->OtherPersistenceType.null = false;
}

inline bool CIM_ListenerDestination_Hnd::OtherPersistenceType_null() const
{
   return ((Class*)_inst)->OtherPersistenceType.null;
}

inline void CIM_ListenerDestination_Hnd::OtherPersistenceType_clear()
{
    _cow();
    __clear(((Class*)_inst)->OtherPersistenceType.value);
    ((Class*)_inst)->OtherPersistenceType.null = true;;
}

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_ListenerDestination_Hnd_h */
