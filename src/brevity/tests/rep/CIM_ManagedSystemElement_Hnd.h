//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENHND.
//
//==============================================================================

#ifndef _cimple_CIM_ManagedSystemElement_Hnd
#define _cimple_CIM_ManagedSystemElement_Hnd

#include <cimple/cimple.h>
#include "CIM_ManagedSystemElement.h"
#include "CIM_ManagedElement_Hnd.h"

CIMPLE_NAMESPACE_BEGIN

class CIM_ManagedSystemElement_Ref : public CIM_ManagedElement_Ref
{
public:
    typedef CIM_ManagedSystemElement Class;
    CIM_ManagedSystemElement_Ref();
    CIM_ManagedSystemElement_Ref(const CIM_ManagedSystemElement_Ref& x);
    CIM_ManagedSystemElement_Ref(CIM_ManagedSystemElement* inst);
    explicit CIM_ManagedSystemElement_Ref(const Instance_Ref& x);
    ~CIM_ManagedSystemElement_Ref();
    CIM_ManagedSystemElement_Ref& operator=(const CIM_ManagedSystemElement_Ref& x);
    static bool is_a(const Instance_Ref& x);

protected:
    CIM_ManagedSystemElement_Ref(const Meta_Class* mc);
    CIM_ManagedSystemElement_Ref(const Meta_Class* mc, const Instance_Ref& x);
};

class CIM_ManagedSystemElement_Hnd : public CIM_ManagedElement_Hnd
{
public:
    typedef CIM_ManagedSystemElement Class;
    CIM_ManagedSystemElement_Hnd();
    CIM_ManagedSystemElement_Hnd(const CIM_ManagedSystemElement_Hnd& x);
    CIM_ManagedSystemElement_Hnd(CIM_ManagedSystemElement* inst);
    explicit CIM_ManagedSystemElement_Hnd(const Instance_Hnd& x);
    ~CIM_ManagedSystemElement_Hnd();
    CIM_ManagedSystemElement_Hnd& operator=(const CIM_ManagedSystemElement_Hnd& x);
    static bool is_a(const Instance_Hnd& x);
    CIM_ManagedSystemElement_Ref reference() const;

    // InstallDate:
    const Datetime& InstallDate_value() const;
    void InstallDate_value(const Datetime& x);
    bool InstallDate_null() const;
    void InstallDate_clear();

    // Name:
    const String& Name_value() const;
    void Name_value(const String& x);
    bool Name_null() const;
    void Name_clear();

    // OperationalStatus:
    const Array_uint16& OperationalStatus_value() const;
    void OperationalStatus_value(const Array_uint16& x);
    bool OperationalStatus_null() const;
    void OperationalStatus_clear();

    // StatusDescriptions:
    const Array_String& StatusDescriptions_value() const;
    void StatusDescriptions_value(const Array_String& x);
    bool StatusDescriptions_null() const;
    void StatusDescriptions_clear();

    // Status:
    const String& Status_value() const;
    void Status_value(const String& x);
    bool Status_null() const;
    void Status_clear();

    // HealthState:
    const uint16& HealthState_value() const;
    void HealthState_value(const uint16& x);
    bool HealthState_null() const;
    void HealthState_clear();

protected:
    CIM_ManagedSystemElement_Hnd(const Meta_Class* mc);
    CIM_ManagedSystemElement_Hnd(const Meta_Class* mc, const Instance_Hnd& x);
};

inline CIM_ManagedSystemElement_Ref::CIM_ManagedSystemElement_Ref() :
    CIM_ManagedElement_Ref(&CIM_ManagedSystemElement::static_meta_class)
{
}

inline CIM_ManagedSystemElement_Ref::CIM_ManagedSystemElement_Ref(const CIM_ManagedSystemElement_Ref& x) :
    CIM_ManagedElement_Ref(x)
{
}

inline CIM_ManagedSystemElement_Ref::CIM_ManagedSystemElement_Ref(CIM_ManagedSystemElement* inst) :
    CIM_ManagedElement_Ref((CIM_ManagedElement*)inst)
{
}

inline CIM_ManagedSystemElement_Ref::CIM_ManagedSystemElement_Ref(const Instance_Ref& x) : 
    CIM_ManagedElement_Ref(&CIM_ManagedSystemElement::static_meta_class, x)
{
}

inline CIM_ManagedSystemElement_Ref::CIM_ManagedSystemElement_Ref(const Meta_Class* mc) : CIM_ManagedElement_Ref(mc)
{
}

inline CIM_ManagedSystemElement_Ref::CIM_ManagedSystemElement_Ref(const Meta_Class* mc, const Instance_Ref& x) : CIM_ManagedElement_Ref(mc, x)
{
}

inline CIM_ManagedSystemElement_Ref::~CIM_ManagedSystemElement_Ref()
{
}

inline CIM_ManagedSystemElement_Ref& CIM_ManagedSystemElement_Ref::operator=(const CIM_ManagedSystemElement_Ref& x)
{
    CIM_ManagedElement_Ref::operator=(x);
    return *this;
}

inline bool CIM_ManagedSystemElement_Ref::is_a(const Instance_Ref& x)
{
    return is_subclass(&CIM_ManagedSystemElement::static_meta_class, x.meta_class());
}

inline CIM_ManagedSystemElement_Hnd::CIM_ManagedSystemElement_Hnd() :
    CIM_ManagedElement_Hnd(&CIM_ManagedSystemElement::static_meta_class)
{
}

inline CIM_ManagedSystemElement_Hnd::CIM_ManagedSystemElement_Hnd(const CIM_ManagedSystemElement_Hnd& x) :
    CIM_ManagedElement_Hnd(x)
{
}

inline CIM_ManagedSystemElement_Hnd::CIM_ManagedSystemElement_Hnd(CIM_ManagedSystemElement* inst) :
    CIM_ManagedElement_Hnd((CIM_ManagedElement*)inst)
{
}

inline CIM_ManagedSystemElement_Hnd::CIM_ManagedSystemElement_Hnd(const Instance_Hnd& x) : 
    CIM_ManagedElement_Hnd(&CIM_ManagedSystemElement::static_meta_class, x)
{
}

inline CIM_ManagedSystemElement_Hnd::CIM_ManagedSystemElement_Hnd(const Meta_Class* mc) : CIM_ManagedElement_Hnd(mc)
{
}

inline CIM_ManagedSystemElement_Hnd::CIM_ManagedSystemElement_Hnd(const Meta_Class* mc, const Instance_Hnd& x) : CIM_ManagedElement_Hnd(mc, x)
{
}

inline CIM_ManagedSystemElement_Hnd::~CIM_ManagedSystemElement_Hnd()
{
}

inline CIM_ManagedSystemElement_Hnd& CIM_ManagedSystemElement_Hnd::operator=(const CIM_ManagedSystemElement_Hnd& x)
{
    CIM_ManagedElement_Hnd::operator=(x);
    return *this;
}

inline bool CIM_ManagedSystemElement_Hnd::is_a(const Instance_Hnd& x)
{
    return is_subclass(&CIM_ManagedSystemElement::static_meta_class, x.meta_class());
}

inline CIM_ManagedSystemElement_Ref CIM_ManagedSystemElement_Hnd::reference() const
{
    return CIM_ManagedSystemElement_Ref((CIM_ManagedSystemElement*)key_clone(_inst));
}

inline const Datetime& CIM_ManagedSystemElement_Hnd::InstallDate_value() const
{
    if (((Class*)_inst)->InstallDate.null)
        _throw_null_access("InstallDate");
   return ((Class*)_inst)->InstallDate.value;
}

inline void CIM_ManagedSystemElement_Hnd::InstallDate_value(const Datetime& x)
{
    _cow();
   ((Class*)_inst)->InstallDate.value = x;
   ((Class*)_inst)->InstallDate.null = false;
}

inline bool CIM_ManagedSystemElement_Hnd::InstallDate_null() const
{
   return ((Class*)_inst)->InstallDate.null;
}

inline void CIM_ManagedSystemElement_Hnd::InstallDate_clear()
{
    _cow();
    __clear(((Class*)_inst)->InstallDate.value);
    ((Class*)_inst)->InstallDate.null = true;;
}

inline const String& CIM_ManagedSystemElement_Hnd::Name_value() const
{
    if (((Class*)_inst)->Name.null)
        _throw_null_access("Name");
   return ((Class*)_inst)->Name.value;
}

inline void CIM_ManagedSystemElement_Hnd::Name_value(const String& x)
{
    _cow();
   ((Class*)_inst)->Name.value = x;
   ((Class*)_inst)->Name.null = false;
}

inline bool CIM_ManagedSystemElement_Hnd::Name_null() const
{
   return ((Class*)_inst)->Name.null;
}

inline void CIM_ManagedSystemElement_Hnd::Name_clear()
{
    _cow();
    __clear(((Class*)_inst)->Name.value);
    ((Class*)_inst)->Name.null = true;;
}

inline const Array_uint16& CIM_ManagedSystemElement_Hnd::OperationalStatus_value() const
{
    if (((Class*)_inst)->OperationalStatus.null)
        _throw_null_access("OperationalStatus");
   return ((Class*)_inst)->OperationalStatus.value;
}

inline void CIM_ManagedSystemElement_Hnd::OperationalStatus_value(const Array_uint16& x)
{
    _cow();
   ((Class*)_inst)->OperationalStatus.value = x;
   ((Class*)_inst)->OperationalStatus.null = false;
}

inline bool CIM_ManagedSystemElement_Hnd::OperationalStatus_null() const
{
   return ((Class*)_inst)->OperationalStatus.null;
}

inline void CIM_ManagedSystemElement_Hnd::OperationalStatus_clear()
{
    _cow();
    __clear(((Class*)_inst)->OperationalStatus.value);
    ((Class*)_inst)->OperationalStatus.null = true;;
}

inline const Array_String& CIM_ManagedSystemElement_Hnd::StatusDescriptions_value() const
{
    if (((Class*)_inst)->StatusDescriptions.null)
        _throw_null_access("StatusDescriptions");
   return ((Class*)_inst)->StatusDescriptions.value;
}

inline void CIM_ManagedSystemElement_Hnd::StatusDescriptions_value(const Array_String& x)
{
    _cow();
   ((Class*)_inst)->StatusDescriptions.value = x;
   ((Class*)_inst)->StatusDescriptions.null = false;
}

inline bool CIM_ManagedSystemElement_Hnd::StatusDescriptions_null() const
{
   return ((Class*)_inst)->StatusDescriptions.null;
}

inline void CIM_ManagedSystemElement_Hnd::StatusDescriptions_clear()
{
    _cow();
    __clear(((Class*)_inst)->StatusDescriptions.value);
    ((Class*)_inst)->StatusDescriptions.null = true;;
}

inline const String& CIM_ManagedSystemElement_Hnd::Status_value() const
{
    if (((Class*)_inst)->Status.null)
        _throw_null_access("Status");
   return ((Class*)_inst)->Status.value;
}

inline void CIM_ManagedSystemElement_Hnd::Status_value(const String& x)
{
    _cow();
   ((Class*)_inst)->Status.value = x;
   ((Class*)_inst)->Status.null = false;
}

inline bool CIM_ManagedSystemElement_Hnd::Status_null() const
{
   return ((Class*)_inst)->Status.null;
}

inline void CIM_ManagedSystemElement_Hnd::Status_clear()
{
    _cow();
    __clear(((Class*)_inst)->Status.value);
    ((Class*)_inst)->Status.null = true;;
}

inline const uint16& CIM_ManagedSystemElement_Hnd::HealthState_value() const
{
    if (((Class*)_inst)->HealthState.null)
        _throw_null_access("HealthState");
   return ((Class*)_inst)->HealthState.value;
}

inline void CIM_ManagedSystemElement_Hnd::HealthState_value(const uint16& x)
{
    _cow();
   ((Class*)_inst)->HealthState.value = x;
   ((Class*)_inst)->HealthState.null = false;
}

inline bool CIM_ManagedSystemElement_Hnd::HealthState_null() const
{
   return ((Class*)_inst)->HealthState.null;
}

inline void CIM_ManagedSystemElement_Hnd::HealthState_clear()
{
    _cow();
    __clear(((Class*)_inst)->HealthState.value);
    ((Class*)_inst)->HealthState.null = true;;
}

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_ManagedSystemElement_Hnd_h */
