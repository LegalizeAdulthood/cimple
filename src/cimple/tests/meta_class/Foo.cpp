//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "Foo.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Repository __meta_repository_637D1D1BE1D61825A23B95C3411BCE2A;

extern const Meta_Reference _Foo_r1;

const Meta_Reference _Foo_r1 =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_KEY,
    "r1",
    &Everything::static_meta_class,
    CIMPLE_OFF(Foo,r1)
};

extern const Meta_Reference _Foo_r2;

const Meta_Reference _Foo_r2 =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_KEY,
    "r2",
    &Everything::static_meta_class,
    CIMPLE_OFF(Foo,r2)
};

static const Meta_Reference _Foo_foo_r1 =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "r1",
    &Everything::static_meta_class,
    CIMPLE_OFF(Foo_foo_method,r1)
};

static const Meta_Reference _Foo_foo_r2 =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "r2",
    &Everything::static_meta_class,
    CIMPLE_OFF(Foo_foo_method,r2)
};

static const Meta_Property _Foo_foo_return_value =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    UINT32,
    0,
    CIMPLE_OFF(Foo_foo_method,return_value)
};

static Meta_Feature* _Foo_foo_meta_features[] =
{
    (Meta_Feature*)&_Foo_foo_r1,
    (Meta_Feature*)&_Foo_foo_r2,
    (Meta_Feature*)&_Foo_foo_return_value
};

const Meta_Method Foo_foo_method::static_meta_class =
{
    CIMPLE_FLAG_METHOD,
    "foo",
    _Foo_foo_meta_features,
    CIMPLE_ARRAY_SIZE(_Foo_foo_meta_features),
    sizeof(Foo_foo_method),
    UINT32,
};

static const Meta_Reference _Foo_foo2_r1 =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "r1",
    &Everything::static_meta_class,
    CIMPLE_OFF(Foo_foo2_method,r1)
};

static const Meta_Reference _Foo_foo2_r2 =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "r2",
    &Everything::static_meta_class,
    CIMPLE_OFF(Foo_foo2_method,r2)
};

static const Meta_Property _Foo_foo2_return_value =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    UINT32,
    0,
    CIMPLE_OFF(Foo_foo2_method,return_value)
};

static Meta_Feature* _Foo_foo2_meta_features[] =
{
    (Meta_Feature*)&_Foo_foo2_r1,
    (Meta_Feature*)&_Foo_foo2_r2,
    (Meta_Feature*)&_Foo_foo2_return_value
};

const Meta_Method Foo_foo2_method::static_meta_class =
{
    CIMPLE_FLAG_METHOD,
    "foo2",
    _Foo_foo2_meta_features,
    CIMPLE_ARRAY_SIZE(_Foo_foo2_meta_features),
    sizeof(Foo_foo2_method),
    UINT32,
};

static const Meta_Reference _Foo_foo3_r1 =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "r1",
    &Everything::static_meta_class,
    CIMPLE_OFF(Foo_foo3_method,r1)
};

static const Meta_Reference _Foo_foo3_r2 =
{
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_IN,
    "r2",
    &Everything::static_meta_class,
    CIMPLE_OFF(Foo_foo3_method,r2)
};

static const Meta_Property _Foo_foo3_return_value =
{
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_OUT,
    "return_value",
    UINT32,
    0,
    CIMPLE_OFF(Foo_foo3_method,return_value)
};

static Meta_Feature* _Foo_foo3_meta_features[] =
{
    (Meta_Feature*)&_Foo_foo3_r1,
    (Meta_Feature*)&_Foo_foo3_r2,
    (Meta_Feature*)&_Foo_foo3_return_value
};

const Meta_Method Foo_foo3_method::static_meta_class =
{
    CIMPLE_FLAG_METHOD,
    "foo3",
    _Foo_foo3_meta_features,
    CIMPLE_ARRAY_SIZE(_Foo_foo3_meta_features),
    sizeof(Foo_foo3_method),
    UINT32,
};

static Meta_Feature* _Foo_meta_features[] =
{
    (Meta_Feature*)&_Foo_r1,
    (Meta_Feature*)&_Foo_r2,
    (Meta_Feature*)&Foo_foo_method::static_meta_class,
    (Meta_Feature*)&Foo_foo2_method::static_meta_class,
    (Meta_Feature*)&Foo_foo3_method::static_meta_class,
};

static const Meta_Feature_Local _locals[] =
{
    {1},
    {1},
    {1},
    {1},
    {1},
};

const Meta_Class Foo::static_meta_class =
{
    CIMPLE_FLAG_ASSOCIATION,
    "Foo",
    _Foo_meta_features,
    CIMPLE_ARRAY_SIZE(_Foo_meta_features),
    sizeof(Foo),
    _locals,
    0, /* super_class */ 
    0, /* super_classes */
    0, /* num_super_classes */
    2, /* num_keys */
    0x15CF1DCE,/* crc */
    &__meta_repository_637D1D1BE1D61825A23B95C3411BCE2A,
};

CIMPLE_NAMESPACE_END

