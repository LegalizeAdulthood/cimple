/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "AA.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Reference
_AA_left;

const Meta_Reference
_AA_left =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_KEY,
    "left",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    0, /* subscript */
    &A::static_meta_class,
    CIMPLE_OFF(AA,left)
};

extern const Meta_Reference
_AA_right;

const Meta_Reference
_AA_right =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_KEY,
    "right",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    0, /* subscript */
    &A::static_meta_class,
    CIMPLE_OFF(AA,right)
};

static Meta_Feature* _AA_MFA[] =
{
    (Meta_Feature*)(void*)&_AA_left,
    (Meta_Feature*)(void*)&_AA_right,
};

static const Meta_Feature_Local _locals[] =
{
    {1},
    {1},
};

const Meta_Class AA::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_ASSOCIATION,
    "AA",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _AA_MFA,
    CIMPLE_ARRAY_SIZE(_AA_MFA),
    sizeof(AA),
    _locals,
    0, /* super_class */ 
    2, /* num_keys */
    0xB634E8D7, /* crc */
    0,
};

CIMPLE_NAMESPACE_END

