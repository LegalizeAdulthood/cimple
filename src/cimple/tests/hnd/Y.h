/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_Y_h
#define _cimple_Y_h

#include <cimple/cimple.h>
#include "X.h"

CIMPLE_NAMESPACE_BEGIN

class CIMPLE_LINKAGE Y : public Instance
{
public:
    // X features:
    Property<uint32> Key; // KEY
    Property<Array_String> Names;

    // Y features:
    Property<boolean> Flag;

    CIMPLE_CLASS(Y)
};

class CIMPLE_LINKAGE Y_Ref : public X_Ref
{
public:

    Y_Ref();
    Y_Ref(const Y_Ref& x);
    Y_Ref(Y* inst);
    ~Y_Ref();
    Y_Ref& operator=(const Y_Ref& x);

    // Key:
    const uint32& Key() const;
    void Key(const uint32& x);
    bool Key_null() const;
    void Key_null(bool x);
};

class CIMPLE_LINKAGE Y_Hnd : public X_Hnd
{
public:

    Y_Hnd();
    Y_Hnd(const Y_Hnd& x);
    Y_Hnd(Y* inst);
    ~Y_Hnd();
    Y_Hnd& operator=(const Y_Hnd& x);

    // Key:
    const uint32& Key() const;
    void Key(const uint32& x);
    bool Key_null() const;
    void Key_null(bool x);

    // Flag:
    const boolean& Flag() const;
    void Flag(const boolean& x);
    bool Flag_null() const;
    void Flag_null(bool x);
};

CIMPLE_NAMESPACE_END

#endif /* _cimple_Y_h */
