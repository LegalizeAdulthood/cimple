/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "E.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Repository __meta_repository_6827E083506B1A56883F566A87E0489F;

static const Meta_Qualifier*
_E_e_MQA[] =
{
};

extern const Meta_Reference
_E_e;

const Meta_Reference _E_e =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_EMBEDDED_OBJECT,
    "e",
    _E_e_MQA,
    CIMPLE_ARRAY_SIZE(_E_e_MQA),
    0, /* subscript */
    &Instance::static_meta_class,
    CIMPLE_OFF(E,e)
};

static Meta_Feature* _E_MFA[] =
{
    (Meta_Feature*)(void*)&_E_e,
};

static const Meta_Feature_Local _locals[] =
{
    {1},
};

static const Meta_Qualifier*
_E_MQA[] =
{
};

const Meta_Class E::static_meta_class =
{
    { 0 }, /* refs */
    CIMPLE_FLAG_INDICATION,
    "E",
    _E_MQA,
    CIMPLE_ARRAY_SIZE(_E_MQA),
    _E_MFA,
    CIMPLE_ARRAY_SIZE(_E_MFA),
    sizeof(E),
    _locals,
    0, /* super_class */ 
    0, /* num_keys */
    0x631D7A14, /* crc */
    &__meta_repository_6827E083506B1A56883F566A87E0489F,
};

E_Ref::E_Ref()
{
    _inst = E::create(true);
    _ref = true;
}

E_Ref::E_Ref(const E_Ref& x) : Hnd(x)
{
}

E_Ref::E_Ref(E* inst)
{
    _inst = inst;
    _ref = true;
}

E_Ref::~E_Ref()
{
}

E_Ref& E_Ref::operator=(const E_Ref& x)
{
    Hnd::operator=(x);
    return *this;
}

E_Hnd::E_Hnd()
{
    _inst = E::create(true);
    _ref = false;
}

E_Hnd::E_Hnd(const E_Hnd& x) : Hnd(x)
{
}

E_Hnd::E_Hnd(E* inst)
{
    _inst = inst;
    _ref = false;
}

E_Hnd::~E_Hnd()
{
}

E_Hnd& E_Hnd::operator=(const E_Hnd& x)
{
    Hnd::operator=(x);
    return *this;
}

Hnd E_Hnd::e() const
{
    ref(((E*)_inst)->e);
    return Hnd(((E*)_inst)->e);
}

void E_Hnd::e(const Hnd& x)
{
    _cow();
    unref(((E*)_inst)->e);
    ref(((E*)_inst)->e = (Instance*)x.instance());
}

CIMPLE_NAMESPACE_END

