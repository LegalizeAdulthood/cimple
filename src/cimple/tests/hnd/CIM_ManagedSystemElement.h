/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_CIM_ManagedSystemElement_h
#define _cimple_CIM_ManagedSystemElement_h

#include <cimple/cimple.h>
#include "CIM_ManagedElement.h"

#if (0x00633700 > CIMPLE_VERSION)
# error "The version of genclass used to generate this file (0.99.55) is newer than the version of <cimple/cimple.h> found on the include path. Please place the matching version of <cimple/cimple.h> on the include path."
#endif

#if (0x00633700 < CIMPLE_VERSION)
# error "The version of genclass used to generate this file (0.99.55) is older than the version of <cimple/cimple.h> found on the include path. Please regenerate the sources with the matching version of genclass."
#endif


CIMPLE_NAMESPACE_BEGIN

class CIMPLE_LINKAGE CIM_ManagedSystemElement : public Instance
{
public:
    // CIM_ManagedElement features:
    Property<String> Caption;
    Property<String> Description;
    Property<String> ElementName;

    // CIM_ManagedSystemElement features:
    Property<Datetime> InstallDate;
    Property<String> Name;
    Property<Array_uint16> OperationalStatus;
    Property<Array_String> StatusDescriptions;
    Property<String> Status;
    Property<uint16> HealthState;

    CIMPLE_CLASS(CIM_ManagedSystemElement)
};

class CIMPLE_LINKAGE CIM_ManagedSystemElement_Ref : public CIM_ManagedElement_Ref
{
public:

    CIM_ManagedSystemElement_Ref();
    CIM_ManagedSystemElement_Ref(const CIM_ManagedSystemElement_Ref& x);
    CIM_ManagedSystemElement_Ref(CIM_ManagedSystemElement* inst);
    ~CIM_ManagedSystemElement_Ref();
    CIM_ManagedSystemElement_Ref& operator=(const CIM_ManagedSystemElement_Ref& x);
};

class CIMPLE_LINKAGE CIM_ManagedSystemElement_Hnd : public CIM_ManagedElement_Hnd
{
public:

    CIM_ManagedSystemElement_Hnd();
    CIM_ManagedSystemElement_Hnd(const CIM_ManagedSystemElement_Hnd& x);
    CIM_ManagedSystemElement_Hnd(CIM_ManagedSystemElement* inst);
    ~CIM_ManagedSystemElement_Hnd();
    CIM_ManagedSystemElement_Hnd& operator=(const CIM_ManagedSystemElement_Hnd& x);

    // InstallDate:
    const Datetime& InstallDate() const;
    void InstallDate(const Datetime& x);
    bool InstallDate_null() const;
    void InstallDate_null(bool x);

    // Name:
    const String& Name() const;
    void Name(const String& x);
    bool Name_null() const;
    void Name_null(bool x);

    // OperationalStatus:
    const Array<uint16>& OperationalStatus() const;
    void OperationalStatus(const Array<uint16>& x);
    bool OperationalStatus_null() const;
    void OperationalStatus_null(bool x);

    // StatusDescriptions:
    const Array<String>& StatusDescriptions() const;
    void StatusDescriptions(const Array<String>& x);
    bool StatusDescriptions_null() const;
    void StatusDescriptions_null(bool x);

    // Status:
    const String& Status() const;
    void Status(const String& x);
    bool Status_null() const;
    void Status_null(bool x);

    // HealthState:
    const uint16& HealthState() const;
    void HealthState(const uint16& x);
    bool HealthState_null() const;
    void HealthState_null(bool x);
};

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_ManagedSystemElement_h */
