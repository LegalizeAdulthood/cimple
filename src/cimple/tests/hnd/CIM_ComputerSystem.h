/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_CIM_ComputerSystem_h
#define _cimple_CIM_ComputerSystem_h

#include <cimple/cimple.h>
#include "CIM_System.h"

#if (0x00633700 > CIMPLE_VERSION)
# error "The version of genclass used to generate this file (0.99.55) is newer than the version of <cimple/cimple.h> found on the include path. Please place the matching version of <cimple/cimple.h> on the include path."
#endif

#if (0x00633700 < CIMPLE_VERSION)
# error "The version of genclass used to generate this file (0.99.55) is older than the version of <cimple/cimple.h> found on the include path. Please regenerate the sources with the matching version of genclass."
#endif


CIMPLE_NAMESPACE_BEGIN

class CIMPLE_LINKAGE CIM_ComputerSystem : public Instance
{
public:
    // CIM_ManagedElement features:
    Property<String> Caption;
    Property<String> Description;
    Property<String> ElementName;

    // CIM_ManagedSystemElement features:
    Property<Datetime> InstallDate;
    Property<String> Name;
    Property<Array_uint16> OperationalStatus;
    Property<Array_String> StatusDescriptions;
    Property<String> Status;
    Property<uint16> HealthState;

    // CIM_LogicalElement features:

    // CIM_EnabledLogicalElement features:
    Property<uint16> EnabledState;
    Property<String> OtherEnabledState;
    Property<uint16> RequestedState;
    Property<uint16> EnabledDefault;
    Property<Datetime> TimeOfLastStateChange;

    // CIM_System features:
    Property<String> CreationClassName; // KEY
    Property<String> NameFormat;
    Property<String> PrimaryOwnerName;
    Property<String> PrimaryOwnerContact;
    Property<Array_String> Roles;

    // CIM_ComputerSystem features:
    Property<Array_String> OtherIdentifyingInfo;
    Property<Array_String> IdentifyingDescriptions;
    Property<Array_uint16> Dedicated;
    Property<Array_String> OtherDedicatedDescriptions;
    Property<uint16> ResetCapability;
    Property<Array_uint16> PowerManagementCapabilities;

    CIMPLE_CLASS(CIM_ComputerSystem)
};

class CIMPLE_LINKAGE CIM_ComputerSystem_Ref : public CIM_System_Ref
{
public:

    CIM_ComputerSystem_Ref();
    CIM_ComputerSystem_Ref(const CIM_ComputerSystem_Ref& x);
    CIM_ComputerSystem_Ref(CIM_ComputerSystem* inst);
    ~CIM_ComputerSystem_Ref();
    CIM_ComputerSystem_Ref& operator=(const CIM_ComputerSystem_Ref& x);
};

class CIMPLE_LINKAGE CIM_ComputerSystem_Hnd : public CIM_System_Hnd
{
public:

    CIM_ComputerSystem_Hnd();
    CIM_ComputerSystem_Hnd(const CIM_ComputerSystem_Hnd& x);
    CIM_ComputerSystem_Hnd(CIM_ComputerSystem* inst);
    ~CIM_ComputerSystem_Hnd();
    CIM_ComputerSystem_Hnd& operator=(const CIM_ComputerSystem_Hnd& x);

    // NameFormat:
    const String& NameFormat() const;
    void NameFormat(const String& x);
    bool NameFormat_null() const;
    void NameFormat_null(bool x);

    // OtherIdentifyingInfo:
    const Array<String>& OtherIdentifyingInfo() const;
    void OtherIdentifyingInfo(const Array<String>& x);
    bool OtherIdentifyingInfo_null() const;
    void OtherIdentifyingInfo_null(bool x);

    // IdentifyingDescriptions:
    const Array<String>& IdentifyingDescriptions() const;
    void IdentifyingDescriptions(const Array<String>& x);
    bool IdentifyingDescriptions_null() const;
    void IdentifyingDescriptions_null(bool x);

    // Dedicated:
    const Array<uint16>& Dedicated() const;
    void Dedicated(const Array<uint16>& x);
    bool Dedicated_null() const;
    void Dedicated_null(bool x);

    // OtherDedicatedDescriptions:
    const Array<String>& OtherDedicatedDescriptions() const;
    void OtherDedicatedDescriptions(const Array<String>& x);
    bool OtherDedicatedDescriptions_null() const;
    void OtherDedicatedDescriptions_null(bool x);

    // ResetCapability:
    const uint16& ResetCapability() const;
    void ResetCapability(const uint16& x);
    bool ResetCapability_null() const;
    void ResetCapability_null(bool x);

    // PowerManagementCapabilities:
    const Array<uint16>& PowerManagementCapabilities() const;
    void PowerManagementCapabilities(const Array<uint16>& x);
    bool PowerManagementCapabilities_null() const;
    void PowerManagementCapabilities_null(bool x);
};

typedef CIM_EnabledLogicalElement_RequestStateChange_method CIM_ComputerSystem_RequestStateChange_method;

class CIMPLE_LINKAGE CIM_ComputerSystem_SetPowerState_method : public Instance
{
public:
    Property<uint32> PowerState;
    Property<Datetime> Time;
    Property<uint32> return_value;
    CIMPLE_METHOD(CIM_ComputerSystem_SetPowerState_method)
};

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_ComputerSystem_h */
