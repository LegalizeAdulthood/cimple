/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_CIM_ConcreteJob_h
#define _cimple_CIM_ConcreteJob_h

#include <cimple/cimple.h>
#include "CIM_Job.h"

CIMPLE_NAMESPACE_BEGIN

class CIMPLE_LINKAGE CIM_ConcreteJob : public Instance
{
public:
    // CIM_ManagedElement features:
    Property<String> Caption;
    Property<String> Description;
    Property<String> ElementName;

    // CIM_ManagedSystemElement features:
    Property<Datetime> InstallDate;
    Property<String> Name;
    Property<Array_uint16> OperationalStatus;
    Property<Array_String> StatusDescriptions;
    Property<String> Status;
    Property<uint16> HealthState;

    // CIM_LogicalElement features:

    // CIM_Job features:
    Property<String> JobStatus;
    Property<Datetime> TimeSubmitted;
    Property<Datetime> ScheduledStartTime;
    Property<Datetime> StartTime;
    Property<Datetime> ElapsedTime;
    Property<uint32> JobRunTimes;
    Property<uint8> RunMonth;
    Property<sint8> RunDay;
    Property<sint8> RunDayOfWeek;
    Property<Datetime> RunStartInterval;
    Property<uint16> LocalOrUtcTime;
    Property<Datetime> UntilTime;
    Property<String> Notify;
    Property<String> Owner;
    Property<uint32> Priority;
    Property<uint16> PercentComplete;
    Property<boolean> DeleteOnCompletion;
    Property<uint16> ErrorCode;
    Property<String> ErrorDescription;
    Property<uint16> RecoveryAction;
    Property<String> OtherRecoveryAction;

    // CIM_ConcreteJob features:
    Property<String> InstanceID; // KEY
    Property<uint16> JobState;
    Property<Datetime> TimeOfLastStateChange;
    Property<Datetime> TimeBeforeRemoval;

    CIMPLE_CLASS(CIM_ConcreteJob)
};

class CIMPLE_LINKAGE CIM_ConcreteJob_Ref : public CIM_Job_Ref
{
public:

    CIM_ConcreteJob_Ref();
    CIM_ConcreteJob_Ref(const CIM_ConcreteJob_Ref& x);
    CIM_ConcreteJob_Ref(CIM_ConcreteJob* inst);
    ~CIM_ConcreteJob_Ref();
    CIM_ConcreteJob_Ref& operator=(const CIM_ConcreteJob_Ref& x);

    // InstanceID:
    const String& InstanceID() const;
    void InstanceID(const String& x);
    bool InstanceID_null() const;
    void InstanceID_null(bool x);
};

class CIMPLE_LINKAGE CIM_ConcreteJob_Hnd : public CIM_Job_Hnd
{
public:

    CIM_ConcreteJob_Hnd();
    CIM_ConcreteJob_Hnd(const CIM_ConcreteJob_Hnd& x);
    CIM_ConcreteJob_Hnd(CIM_ConcreteJob* inst);
    ~CIM_ConcreteJob_Hnd();
    CIM_ConcreteJob_Hnd& operator=(const CIM_ConcreteJob_Hnd& x);

    // InstanceID:
    const String& InstanceID() const;
    void InstanceID(const String& x);
    bool InstanceID_null() const;
    void InstanceID_null(bool x);

    // Name:
    const String& Name() const;
    void Name(const String& x);
    bool Name_null() const;
    void Name_null(bool x);

    // JobState:
    const uint16& JobState() const;
    void JobState(const uint16& x);
    bool JobState_null() const;
    void JobState_null(bool x);

    // TimeOfLastStateChange:
    const Datetime& TimeOfLastStateChange() const;
    void TimeOfLastStateChange(const Datetime& x);
    bool TimeOfLastStateChange_null() const;
    void TimeOfLastStateChange_null(bool x);

    // TimeBeforeRemoval:
    const Datetime& TimeBeforeRemoval() const;
    void TimeBeforeRemoval(const Datetime& x);
    bool TimeBeforeRemoval_null() const;
    void TimeBeforeRemoval_null(bool x);
};

typedef CIM_Job_KillJob_method CIM_ConcreteJob_KillJob_method;

class CIMPLE_LINKAGE CIM_ConcreteJob_RequestStateChange_method : public Instance
{
public:
    Property<uint16> RequestedState;
    Property<Datetime> TimeoutPeriod;
    Property<uint32> return_value;
    CIMPLE_METHOD(CIM_ConcreteJob_RequestStateChange_method)
};

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_ConcreteJob_h */
