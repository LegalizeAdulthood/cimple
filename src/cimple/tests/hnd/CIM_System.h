/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT THIS FILE; IT WAS AUTOMATICALLY GENERATED BY GENCLASS.
//
//==============================================================================

#ifndef _cimple_CIM_System_h
#define _cimple_CIM_System_h

#include <cimple/cimple.h>
#include "CIM_EnabledLogicalElement.h"

CIMPLE_NAMESPACE_BEGIN

class CIMPLE_LINKAGE CIM_System : public Instance
{
public:
    // CIM_ManagedElement features:
    Property<String> Caption;
    Property<String> Description;
    Property<String> ElementName;

    // CIM_ManagedSystemElement features:
    Property<Datetime> InstallDate;
    Property<String> Name;
    Property<Array_uint16> OperationalStatus;
    Property<Array_String> StatusDescriptions;
    Property<String> Status;
    Property<uint16> HealthState;

    // CIM_LogicalElement features:

    // CIM_EnabledLogicalElement features:
    Property<uint16> EnabledState;
    Property<String> OtherEnabledState;
    Property<uint16> RequestedState;
    Property<uint16> EnabledDefault;
    Property<Datetime> TimeOfLastStateChange;

    // CIM_System features:
    Property<String> CreationClassName; // KEY
    Property<String> NameFormat;
    Property<String> PrimaryOwnerName;
    Property<String> PrimaryOwnerContact;
    Property<Array_String> Roles;

    CIMPLE_CLASS(CIM_System)
};

class CIMPLE_LINKAGE CIM_System_Ref : public CIM_EnabledLogicalElement_Ref
{
public:

    CIM_System_Ref();
    CIM_System_Ref(const CIM_System_Ref& x);
    CIM_System_Ref(CIM_System* inst);
    ~CIM_System_Ref();
    CIM_System_Ref& operator=(const CIM_System_Ref& x);

    // CreationClassName:
    const String& CreationClassName() const;
    void CreationClassName(const String& x);
    bool CreationClassName_null() const;
    void CreationClassName_null(bool x);

    // Name:
    const String& Name() const;
    void Name(const String& x);
    bool Name_null() const;
    void Name_null(bool x);
};

class CIMPLE_LINKAGE CIM_System_Hnd : public CIM_EnabledLogicalElement_Hnd
{
public:

    CIM_System_Hnd();
    CIM_System_Hnd(const CIM_System_Hnd& x);
    CIM_System_Hnd(CIM_System* inst);
    ~CIM_System_Hnd();
    CIM_System_Hnd& operator=(const CIM_System_Hnd& x);

    // CreationClassName:
    const String& CreationClassName() const;
    void CreationClassName(const String& x);
    bool CreationClassName_null() const;
    void CreationClassName_null(bool x);

    // Name:
    const String& Name() const;
    void Name(const String& x);
    bool Name_null() const;
    void Name_null(bool x);

    // NameFormat:
    const String& NameFormat() const;
    void NameFormat(const String& x);
    bool NameFormat_null() const;
    void NameFormat_null(bool x);

    // PrimaryOwnerName:
    const String& PrimaryOwnerName() const;
    void PrimaryOwnerName(const String& x);
    bool PrimaryOwnerName_null() const;
    void PrimaryOwnerName_null(bool x);

    // PrimaryOwnerContact:
    const String& PrimaryOwnerContact() const;
    void PrimaryOwnerContact(const String& x);
    bool PrimaryOwnerContact_null() const;
    void PrimaryOwnerContact_null(bool x);

    // Roles:
    const Array<String>& Roles() const;
    void Roles(const Array<String>& x);
    bool Roles_null() const;
    void Roles_null(bool x);
};

typedef CIM_EnabledLogicalElement_RequestStateChange_method CIM_System_RequestStateChange_method;

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_System_h */
