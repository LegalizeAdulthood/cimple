This change log was started effective with version 2.00

2.00, November 2008 (Public Release)
	* Add wmi support. See wmi.pdf for information.
2.01  December 2008 (Beta Private release)
        * Add support for upcall method definitions with concrete objects.
		  Not yet documented. See provider src/providers/methodUpcall
		  for working example of the change
	* Correction to WMI_Thread_Context.cpp and .h
	* Changed. Atomic.cpp, cimple/Thread_Context, cimple/cimom.*
	  cimple/log.cpp, cmpi/adapter/CMPIContainers.cpp, etc.
	  Tags are: cimple_2_0_0 to cimple_2_0_1-start

2.02  Never generated.
	NOTE: Odd number releases are considered private (ex. beta) releases
	for selected users, test, etc.  Even number releases are offical 
	updates for public distribution.

2.03  24 January 2009 (beta private release)
	* Fix several problems including:
		1. Memory loss from CMPIAdapter.cpp for associator
		   operations. Not consistently destroying instances.
		2. Invalid Class exception from CMPIAdapter.cpp on
		   association requests. Changed to OK.
		3. Test wmi adapter against multiple windows OS and
		   correct issues with compiler errors resulting
		   from differences between the windows compilers
		   and SDKs. In particular corrected compile errors
		   in Atomic_WIN32_IX86_MSVC.h with Interlock functions
		   and WMI_Adapter.h use of Rpcsal.h
		4. Modify wmi repository.mof to eliminate issue of
		   special wmi qualifiers and restore original DMTF
		   qualifiers.mof.  In the future, providers requiring
		   these qualifiers will include the qualifiers in as
		   specific extensions for wmi. For now, they are attached
		   to the repository.mof for each provider.
	* Extend tests and test providers including All Provider,
	  Widget Provider. Added more tests to autmated tests
	  including All and All/TestAll.
	* Continue development of Doxygen documentation of header
	  files.
	* Correct wmi.pdf documentation.
	* Add platform definitions for SOLARIS_IX86_CC,
	  SOLARIS_IX86_CC  SOLARIS_SPARC_CC and SOLARIS_SPARC_64_CC
	* Added code to regmod.cpp to output NOCHKSRC line in 
	  module.cpp files.  Would not pass pegasus chksrc without
	  this.

	NOTE: Work started with tag cimple_2_0_1-start (equal to 
	final_mbrasher_tag). It ended with cimple-2_0_3-end tag.
2.04 Not Generated

2.05 8 February 2009
	* Add new CIMPLE_Status return codes to match the DMTF Specification.
	  Added statuscodes for ACCESS_DENIED, INVALID_PARAMETER to bring
	  the available status codes in line with DMTF DSP0200.
        * Corrected Error in CMPI and Pegasus adapters that did not allow
	  cross namespace associations. They were returning the request
	  namespace rather than the namespace defined in the association.
	  NOTE: This error was apparently introduced in V 2.0.
	* Integrated automated test for cross namespace associations with
	  testclient under Cross provider.
	* Added provider (OperationContext) to test correctness of CIMPLE
	  status return codes.
	* Extended All_Class test provider.
	* Added comments to Makefiles generated by genmak and also ability
	  to generate selected targets (regmod).
       	Release tag cimple_2_0_5
	* Add get_username() function as an experimental function to get
	  the username from the CIMServer.  This works with CMPI and Pegasus
	  for this release.  Note that the interface may change.
	* Rebuild the Hello provider. It had not been build for a long time
	  and the module.cpp was not compatible with the current common 
	  functions. Added calls for allow_unload and get_username() to this
	  provider although they only demo the action, not test the result.
       	Release tag cimple_2_0_5
2.06 10 March 2009 (Public Release)
    * Clean up comments on cimple header files and integrate into doxygen
    * add size function to cimple/Lists.h
    * Restore List and Scheduler functions to src/cimple along with tests.
      These functions are conditionally compiled since they are experimental
      so we modified configure to add a --enable-scheduler option.
      We may leave this since c ompiling without this is a bit smaller.
    * Extended Upcall provider for more complete testing
    * extended cimple/tests/value test
    * moved some command aliases to config.mak
    * Extended tests for Cond_Queue function in cimple/tests
    * Added more tests to cimple/tests Makefile
    * Added readme to more providers
    * Fixed issue where a configure command did not update the options.h file.
        Only if the user did a make disclean removing the options.h file would
        the options.h file be update.  Now, this file will be updated each time
        configure is run.
    * Updated Using_CIMPLE.pdf file to version 2 document
    * Added Release Notes for 2.0.0 to distribution

2.0.7  Goals, minor cleanups to wmi
    * Remove duplicate CIMPLE_NAMESPACE_END in Atomic_WIN32_IX86_MSVC.cpp
    * Extend tag vg to dir.mak to automate valgrind testing.
    * Minor clean up to several readme files
    * Correct error in CMPI_Adapter.cpp where it was returning error
      when class not valid for some associator/reference operations.
      Now returns OK.
    * Set CIMPLE_FUNCION to include windows platforms so we get dynamic
      function name in logs from windows systems.
    * Corrected error causing wmi provider registration and execution
      error 080041024 (Provider is not capable of the attempted operation).
      The error is in the provider registration for WMI.  If the namespace
      on mofcomp calls to insert registration using forward slash "/" instead
      of back slash (ex. root/default instead of root\default) the cimom
      will generate this error for every call.
    * Added trace code to wmi adapter.  Note that this is only enabled
      by flag in WMI_Adapter.h at this point and goes to a special log
      file rather than the cimple log.
    * Added new wmi providers and commonized wmi Makefiles
    * Added methods test for Person wmi provider.
    * 2.07 Not released.  Went straight to 2.0.8 release
2.0.8 - 26 March 2009
    * Add readme.txt files to some of the providers
    * Added beginning of automated tests using wmic for wmi providers but
      very incomplete.
2.0.9 - 21 April 2009 (Internal release)
    * Add function try_lock to mutex functions.
    * Expand mutex test program (cimple/tests/Mutex)
    * Add CIMPLE_HOME as environment variable definition for the
      runtime components HOME directory for CIMPLE.   This is the directory
      in which the configfile (.cimplerc) is located and the log subdirectory
      located (.cimple). If the environment variable CIMPLE_HOME does not
      exist, no log is created and the config file is not accessed
      To use this, set CIMPLE_HOME=directory name. 
      NOTE: This is a behavior change in that earlier versions used HOME
      as the environment variable to locate a directory for the config file
      and log files.
    * Add provider to test more complex association functions
      (providers/derivedAssoc)
2.0.11 13 May 2009
    * Correct bug with Property Lists and CMPI providers. The CMPI adapter
      was not correctly processing Property Lists.  Note that this uncovered
      a bug in Pegasus with property list processing in CMPI (8493) in that all
      key properties are required in the returned Instance if the object
      path is not set.  This no longer creates a problem in CIMPLE 
      CMPI providers but was filed as a Pegasus bug (8493).
    * Fix compile error with mutex trylock and windows. Added trylock function
      to src/posix/pthread.h
    * Added initial files for persistence in src/cimple (Enc*, Instance_Enc*
      tests/Enc/* tests/instance_enc/* tests/serialize/*. NOTE: persistence
      not complete for this temporary release and is NOT usable. In this 
      version the new components are normally not compiled.
    * Added several readme files for tests providers and tools.
    * Add regview tool that displays info on registered providers for PEGASUS.
      Note that this is Pegasus only. Not automatically compiled.
    * Added test provider derivedAssoc to test for association issue with
      derived associations reported by user.  Concluded the CIMPLE correctly
      handles this case.
    * Added ability for user to set env var that CIMPLE will use to look for
      directory for .cimplerc file and where logs will be located.  This
      was originally fixed at "HOME". This version changes the default to
      "CIMPLE_HOME" and adds an option to the configure mechanism
      (--cimplehome-envvar). NOTE: With this release no logs will be created
      without either a) setting the environment variable CIMPLE_HOME or b)
      defining an alternate to CIMPLE_HOME with the configure
      --cimplehome-envvar parameter. To use HOME for these files add the
      following to the configure (--cimplehome-envvar=HOME).
    * Modified logging calls for speed by adding an initial test before
      log macro calls are formatted. Note that this applies only to macro
      generated logs.
    * Added target to a number of test providers (manual-test) that uses
      Pegasus cimcli to exercise the provider.  This serves for quick tests
      and allows the user to see better what the provider produces than
      the usual test client that is part of most CIMPLE test providers.
      Note that these are typically not automated tests in that they
      are not as through as the test clients.
    * Expanded the test client for providers/All to cover more cases and in
      particular expand the tests for propertLists.
    * Expanded the Makefile for a number of the test providers so that
      they can test both the C++ and CMPI builds of the corresponding providers.
      This uses a test environment variable (CIMPLE_PROVIDER_BUILD_CMPI) to
      force the provider to be build with either CMPI or C++ interfaces.
    * Added new target to top level Makefile (cmpiworld) to force testing
      of CMPI build test providers for those test providers that include
      the CIMPLE_PROVIDER_BUILD_CMPI variable. Made most src/provider providers
      compilable with both c++ and CMPI so that they can be compiled either way.
      Note that this means user must add line include ../common.mak to
      Makefile for any providers created with this option to complete
      all of the provider module requirements.
    * Modified Makefile for file2c tool so that it can be installed.
    * Modify windows pthread implementation to handle nonrecursive Mutex.
      Before this, the implementation just used the native Windows calls
      so treated all Mutexes as recursive.  Note that this is a behavior
      change on Windows platforms.
    * Added initial test for atomic counters in cimple/tests/atomicint
2.0.12 24 July 2009 (cvs branched for this cimple-2_0-12-branch from 2_0_11 tag)
    * Fix issue with cmpi providers returning NULL for key properties that
      was introduced in 2.0.11.
    * Corrected error in configuration.bat where extra space was being inserted
      into a line in options.h causing problem in src/cimple/options.h
    * Implement multi class wmi provider module as a test (See
      src/wmi/ThingsProvidcr)
2.0.13 14 August 2009 (cvs cimple_2_0-12 branch)
    * Add broadcast function to the Conditional variable methods.  This
      includes changes to a)Cond.h and .cpp b)cimple/tests/Cond/main and
      c)src/posix to account for platforms that do not include pthreads.
    * Add CIMPLE_EBUSY return code specifically to mutex.  This should
	  be used with trylock to determine busy returns rather than
	  simply the non-zero return
    * Added valgrind test to number of src/cimple/tests unit tests
    * Add classes test as unit test. Code was there but test dropped
	  several versions ago.
    * Clean up some api documentation in src/CIMPLE.
    * Implemented some standard tests as part of the WMI providers.  Note that
      these tests are contained in bat files and only exercise the provider
      using the wmic executable.  They do not confirm results.

2.0.14 6 October 2009( cvs cimple_2_0_12-branch)
    * Update to User Guide (version 2.1)
	* Correct problem with model->__namespce variable missing on some
	  request types for C++ adapter.  Added test to Hello provider to
	  test the existence of this variable on requests.
	* Correct indexing error in regview and include build in standard
	  make.

	



     



       



	

