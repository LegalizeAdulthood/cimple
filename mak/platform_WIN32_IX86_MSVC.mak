_MUT=$(TOP)/src/tools/mut/mut.exe
MUT=$(shell $(_MUT) full $(_MUT))

##==============================================================================
##
## CIMPLE_WINDOWS
##
##==============================================================================

CIMPLE_WINDOWS=1

##==============================================================================
##
## ECHO
##
##==============================================================================

ECHO = $(MUT) echo

##==============================================================================
##
## TOUCH
##
##==============================================================================

TOUCH = $(MUT) touch

##==============================================================================
##
## RM
##
##==============================================================================

RM = $(MUT) rm

##==============================================================================
##
## CXX
##
##==============================================================================

CXX = cl -nologo

##==============================================================================
##
## CC
##
##==============================================================================

CC = cl -nologo

##==============================================================================
##
## AR
##
##==============================================================================

AR = link

##==============================================================================
##
## AR_OPTS
##
##==============================================================================

# ATTN:
AR_OPTS =

##==============================================================================
##
## FLAGS
##
##==============================================================================

ifdef CIMPLE_DEBUG
  FLAGS = -GX -GR -W3 -Od -Zi -MDd
else
  FLAGS = -GX -GR -W3 -O2 -MD
endif

##==============================================================================
##
## OBJ
##
##==============================================================================

OBJ = .obj

##==============================================================================
##
## MKDIRHIER -- mkdir recursive
##
##==============================================================================


MKDIRHIER = $(MUT) mkdirhier

##==============================================================================
##
## PWD
##
##==============================================================================

PWD = $(MUT) pwd

##==============================================================================
##
## DEFINES
##
##==============================================================================

DEFINES =

##==============================================================================
##
## LINK_FLAGS
##
##==============================================================================

#LINK_FLAGS += -L$(LIB_DIR)

ifdef CIMPLE_DEBUG
  LINK_FLAGS += -debug
endif

##==============================================================================
##
## SIZE -- determines size of a shared object
##
##==============================================================================

SIZE = size

##==============================================================================
##
## shlib_target(name)
##
##==============================================================================

shlib_target = $(BIN_DIR)/$(1).dll

##==============================================================================
##
## lib_target(name)
##
##==============================================================================

lib_target = $(LIB_DIR)/$(1).lib

##==============================================================================
##
## exp_target(name)
##
##==============================================================================

exp_target = $(LIB_DIR)/$(1).exp

##==============================================================================
##
## bin_target(bin)
##
##==============================================================================

bin_target = $(BIN_DIR)/$(1).exe

##==============================================================================
##
## libs(list) -- form the full path names for the list of libraries.
##
##==============================================================================

_full_libs = $(addsuffix .lib,$(addprefix $(LIB_DIR)/,$(1)))

##==============================================================================
##
## _FULL_POSIX_LIB
##
##==============================================================================

ifndef POSIX_MAKEFILE
  _FULL_POSIX_LIB = $(LIB_DIR)/posix.lib
endif

##==============================================================================
##
## make_shlib(SH_LIBRARY, OBJECTS, LIBRARIES) -- create a shared library.
##
##==============================================================================

_SYS_LIBS = ws2_32.lib advapi32.lib netapi32.lib

make_shlib = link -nologo -dll $(LINK_FLAGS) \
    -out:$(call shlib_target,$(1)) \
    -implib:$(call lib_target,$(1)) \
    $(2) \
    $(call _full_libs,$(3)) \
    $(_FULL_POSIX_LIB) \
    $(_SYS_LIBS) $(NL)

##==============================================================================
##
## clean_shlib_list(SH_LIBRARY)
##
##==============================================================================

shlib_clean_targets = \
    $(call shlib_target,$(1)) \
    $(call lib_target,$(1)) \
    $(call exp_target,$(1))

##==============================================================================
##
## make_lib(SH_LIBRARY, OBJECTS)
##
##==============================================================================

make_lib = lib -nologo $(LINK_FLAGS) -out:$(1) $(2)

##==============================================================================
##
## make_bin(BINARY, OBJECTS, LIBRARIES) -- create a shared library.
##
##==============================================================================

make_bin = $(CXX) $(FLAGS) \
    -Fe$(call bin_target,$(1)) \
    $(2) \
    $(call _full_libs,$(3)) \
    $(_FULL_POSIX_LIB) \
    $(_SYS_LIBS)

##==============================================================================
##
## make_obj -- create an object file.
##
##==============================================================================

make_obj = $(CXX) -c $(FLAGS) $(DEFINES) $(INCLUDES) -Fo$*.obj $*.cpp

##==============================================================================
##
## _win_path(path)
##
##==============================================================================

_win_path = $(subst /,\,$(1))

##==============================================================================
##
## abs_path(path)
##
##==============================================================================

abs_path = $(subst \,/,$(shell cd $(call _win_path,$(1)) && $(MUT) pwd))

##==============================================================================
##
## INCLUDES
##
##==============================================================================

ifndef POSIX_MAKEFILE
  INCLUDES += -I$(TOP)/src/posix
endif

